// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmdb/cmdb.proto

package cmdb

import (
	context "context"
	fmt "fmt"
	common "git.fogcdn.top/axe/protos/goout/common"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 实体类型:0-undefined 1-HOST 2-LAKE 3-vip  4-ROOM
type InstType int32

const (
	// 0-undefined
	InstType_UNDEFINED_INST InstType = 0
	// 1-主机
	InstType_HOST_INST InstType = 1
	// 2-LAKE
	InstType_LAKE_INST InstType = 2
	// 3-VIP
	InstType_VIP_INST InstType = 3
	// 4-ROOM
	InstType_ROOM_INST InstType = 4
)

var InstType_name = map[int32]string{
	0: "UNDEFINED_INST",
	1: "HOST_INST",
	2: "LAKE_INST",
	3: "VIP_INST",
	4: "ROOM_INST",
}

var InstType_value = map[string]int32{
	"UNDEFINED_INST": 0,
	"HOST_INST":      1,
	"LAKE_INST":      2,
	"VIP_INST":       3,
	"ROOM_INST":      4,
}

func (x InstType) String() string {
	return proto.EnumName(InstType_name, int32(x))
}

func (InstType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{0}
}

// 导入状态: 0-正在导入 1-导入完成 2-导入失败 3-待审核 4-审核通过 5-审核不通过 6-撤销 7-回滚失败
type ImportStatus int32

const (
	// 0-正在导入
	ImportStatus_IMPORTING ImportStatus = 0
	// 1-导入完成
	ImportStatus_COMPLETED ImportStatus = 1
	// 2-导入失败
	ImportStatus_FAILED ImportStatus = 2
	// 3-待审核
	ImportStatus_REVIEWING ImportStatus = 3
	// 4-审核通过
	ImportStatus_ACCEPT ImportStatus = 4
	// 5-审核不通过
	ImportStatus_REJECT ImportStatus = 5
	// 6-撤销
	ImportStatus_CANCEL ImportStatus = 6
	// 7-回滚失败
	ImportStatus_ROLL_FAIL ImportStatus = 7
)

var ImportStatus_name = map[int32]string{
	0: "IMPORTING",
	1: "COMPLETED",
	2: "FAILED",
	3: "REVIEWING",
	4: "ACCEPT",
	5: "REJECT",
	6: "CANCEL",
	7: "ROLL_FAIL",
}

var ImportStatus_value = map[string]int32{
	"IMPORTING": 0,
	"COMPLETED": 1,
	"FAILED":    2,
	"REVIEWING": 3,
	"ACCEPT":    4,
	"REJECT":    5,
	"CANCEL":    6,
	"ROLL_FAIL": 7,
}

func (x ImportStatus) String() string {
	return proto.EnumName(ImportStatus_name, int32(x))
}

func (ImportStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{1}
}

// 导入类型:0-undefined 1-主机 2-物理机 3-LAKE 4-交换机
type ImportType int32

const (
	// 0-undefined
	ImportType_UNDEFINED ImportType = 0
	// 1-主机
	ImportType_HOST ImportType = 1
	// 2-物理机
	ImportType_SERVER ImportType = 2
	// 3-LAKE
	ImportType_LAKE ImportType = 3
	// 4-交换机
	ImportType_SWITCH ImportType = 4
	// 5-交维表
	ImportType_CROSSTABLE ImportType = 5
	// 6-VIP
	ImportType_VIP ImportType = 6
)

var ImportType_name = map[int32]string{
	0: "UNDEFINED",
	1: "HOST",
	2: "SERVER",
	3: "LAKE",
	4: "SWITCH",
	5: "CROSSTABLE",
	6: "VIP",
}

var ImportType_value = map[string]int32{
	"UNDEFINED":  0,
	"HOST":       1,
	"SERVER":     2,
	"LAKE":       3,
	"SWITCH":     4,
	"CROSSTABLE": 5,
	"VIP":        6,
}

func (x ImportType) String() string {
	return proto.EnumName(ImportType_name, int32(x))
}

func (ImportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{2}
}

// 电源状态
type ServerPowerState int32

const (
	// 未知状态
	ServerPowerState_UNKNOWN ServerPowerState = 0
	// 下电
	ServerPowerState_OFF ServerPowerState = 1
	// 上电
	ServerPowerState_ON ServerPowerState = 2
)

var ServerPowerState_name = map[int32]string{
	0: "UNKNOWN",
	1: "OFF",
	2: "ON",
}

var ServerPowerState_value = map[string]int32{
	"UNKNOWN": 0,
	"OFF":     1,
	"ON":      2,
}

func (x ServerPowerState) String() string {
	return proto.EnumName(ServerPowerState_name, int32(x))
}

func (ServerPowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{3}
}

// 装机状态
type ServerInstallState int32

const (
	// 未装机
	ServerInstallState_UNINSTALLED ServerInstallState = 0
	// 装机中
	ServerInstallState_INSTALLING ServerInstallState = 1
	// 已装机
	ServerInstallState_INSTALLED ServerInstallState = 2
)

var ServerInstallState_name = map[int32]string{
	0: "UNINSTALLED",
	1: "INSTALLING",
	2: "INSTALLED",
}

var ServerInstallState_value = map[string]int32{
	"UNINSTALLED": 0,
	"INSTALLING":  1,
	"INSTALLED":   2,
}

func (x ServerInstallState) String() string {
	return proto.EnumName(ServerInstallState_name, int32(x))
}

func (ServerInstallState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{4}
}

// 节点层次
type LakeNodeLevel int32

const (
	LakeNodeLevel_ALL LakeNodeLevel = 0
	// 0-全国中心
	LakeNodeLevel_NATION_CENTER LakeNodeLevel = 1
	// 1-区域中心
	LakeNodeLevel_REGION_CENTER LakeNodeLevel = 2
	// 2-省边缘
	LakeNodeLevel_PROVINCE_EDGE LakeNodeLevel = 3
	// 3-地市边缘
	LakeNodeLevel_CITY_EDGE LakeNodeLevel = 4
	// 4-区县边缘
	LakeNodeLevel_COUNTY_EDGE LakeNodeLevel = 5
)

var LakeNodeLevel_name = map[int32]string{
	0: "ALL",
	1: "NATION_CENTER",
	2: "REGION_CENTER",
	3: "PROVINCE_EDGE",
	4: "CITY_EDGE",
	5: "COUNTY_EDGE",
}

var LakeNodeLevel_value = map[string]int32{
	"ALL":           0,
	"NATION_CENTER": 1,
	"REGION_CENTER": 2,
	"PROVINCE_EDGE": 3,
	"CITY_EDGE":     4,
	"COUNTY_EDGE":   5,
}

func (x LakeNodeLevel) String() string {
	return proto.EnumName(LakeNodeLevel_name, int32(x))
}

func (LakeNodeLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{5}
}

// 地区层级
type AreaLevel int32

const (
	// 0-不存在
	AreaLevel_NULL AreaLevel = 0
	// 1-国家级
	AreaLevel_NATION AreaLevel = 1
	// 2-大区级
	AreaLevel_REGION AreaLevel = 2
	// 3-省级
	AreaLevel_PROVINCE AreaLevel = 3
	// 4-市级
	AreaLevel_CITY AreaLevel = 4
	// 5-区县级
	AreaLevel_COUNTY AreaLevel = 5
)

var AreaLevel_name = map[int32]string{
	0: "NULL",
	1: "NATION",
	2: "REGION",
	3: "PROVINCE",
	4: "CITY",
	5: "COUNTY",
}

var AreaLevel_value = map[string]int32{
	"NULL":     0,
	"NATION":   1,
	"REGION":   2,
	"PROVINCE": 3,
	"CITY":     4,
	"COUNTY":   5,
}

func (x AreaLevel) String() string {
	return proto.EnumName(AreaLevel_name, int32(x))
}

func (AreaLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{6}
}

// 上下线状态:0-未定义 1-下线 2-上线
type OnlineState int32

const (
	// 0-未定义
	OnlineState_UNDEFINEDSTATE OnlineState = 0
	// 1-下线
	OnlineState_OFFLINE OnlineState = 1
	// 2-上线
	OnlineState_ONLINE OnlineState = 2
)

var OnlineState_name = map[int32]string{
	0: "UNDEFINEDSTATE",
	1: "OFFLINE",
	2: "ONLINE",
}

var OnlineState_value = map[string]int32{
	"UNDEFINEDSTATE": 0,
	"OFFLINE":        1,
	"ONLINE":         2,
}

func (x OnlineState) String() string {
	return proto.EnumName(OnlineState_name, int32(x))
}

func (OnlineState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{7}
}

// 实体 host，lake，vip的查询请求
type SearchInstRequest struct {
	// 用于区分查询类型，此处查询主要包括 host，lake，vip
	SearchType InstType `protobuf:"varint,1,opt,name=search_type,json=searchType,proto3,enum=cmdb.InstType" json:"search_type,omitempty"`
	// 用于fields查询条件
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	// 用于condition查询条件
	Condition string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	// 用于page查询条件
	Page                 string   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchInstRequest) Reset()         { *m = SearchInstRequest{} }
func (m *SearchInstRequest) String() string { return proto.CompactTextString(m) }
func (*SearchInstRequest) ProtoMessage()    {}
func (*SearchInstRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{0}
}

func (m *SearchInstRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchInstRequest.Unmarshal(m, b)
}
func (m *SearchInstRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchInstRequest.Marshal(b, m, deterministic)
}
func (m *SearchInstRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInstRequest.Merge(m, src)
}
func (m *SearchInstRequest) XXX_Size() int {
	return xxx_messageInfo_SearchInstRequest.Size(m)
}
func (m *SearchInstRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInstRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInstRequest proto.InternalMessageInfo

func (m *SearchInstRequest) GetSearchType() InstType {
	if m != nil {
		return m.SearchType
	}
	return InstType_UNDEFINED_INST
}

func (m *SearchInstRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *SearchInstRequest) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *SearchInstRequest) GetPage() string {
	if m != nil {
		return m.Page
	}
	return ""
}

// 实体 host，lake，vip的查询返回
type SearchInstResponse struct {
	// 查询实体信息
	SearchInst string `protobuf:"bytes,1,opt,name=search_inst,json=searchInst,proto3" json:"search_inst,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchInstResponse) Reset()         { *m = SearchInstResponse{} }
func (m *SearchInstResponse) String() string { return proto.CompactTextString(m) }
func (*SearchInstResponse) ProtoMessage()    {}
func (*SearchInstResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{1}
}

func (m *SearchInstResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchInstResponse.Unmarshal(m, b)
}
func (m *SearchInstResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchInstResponse.Marshal(b, m, deterministic)
}
func (m *SearchInstResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInstResponse.Merge(m, src)
}
func (m *SearchInstResponse) XXX_Size() int {
	return xxx_messageInfo_SearchInstResponse.Size(m)
}
func (m *SearchInstResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInstResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInstResponse proto.InternalMessageInfo

func (m *SearchInstResponse) GetSearchInst() string {
	if m != nil {
		return m.SearchInst
	}
	return ""
}

func (m *SearchInstResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *SearchInstResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 实体 host，lake，vip的更新请求
type UpdateInstRequest struct {
	// 用于区分更新类型，此处更新主要包括 host，lake，vip
	UpdateType InstType `protobuf:"varint,1,opt,name=update_type,json=updateType,proto3,enum=cmdb.InstType" json:"update_type,omitempty"`
	// 实例id
	BkInstId int32 `protobuf:"varint,2,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 更新实体信息
	UpdateInst           string   `protobuf:"bytes,3,opt,name=update_inst,json=updateInst,proto3" json:"update_inst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateInstRequest) Reset()         { *m = UpdateInstRequest{} }
func (m *UpdateInstRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateInstRequest) ProtoMessage()    {}
func (*UpdateInstRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{2}
}

func (m *UpdateInstRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateInstRequest.Unmarshal(m, b)
}
func (m *UpdateInstRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateInstRequest.Marshal(b, m, deterministic)
}
func (m *UpdateInstRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInstRequest.Merge(m, src)
}
func (m *UpdateInstRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateInstRequest.Size(m)
}
func (m *UpdateInstRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInstRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInstRequest proto.InternalMessageInfo

func (m *UpdateInstRequest) GetUpdateType() InstType {
	if m != nil {
		return m.UpdateType
	}
	return InstType_UNDEFINED_INST
}

func (m *UpdateInstRequest) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *UpdateInstRequest) GetUpdateInst() string {
	if m != nil {
		return m.UpdateInst
	}
	return ""
}

// 实体 host，lake，vip的更新返回
type UpdateInstResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateInstResponse) Reset()         { *m = UpdateInstResponse{} }
func (m *UpdateInstResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateInstResponse) ProtoMessage()    {}
func (*UpdateInstResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{3}
}

func (m *UpdateInstResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateInstResponse.Unmarshal(m, b)
}
func (m *UpdateInstResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateInstResponse.Marshal(b, m, deterministic)
}
func (m *UpdateInstResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInstResponse.Merge(m, src)
}
func (m *UpdateInstResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateInstResponse.Size(m)
}
func (m *UpdateInstResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInstResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInstResponse proto.InternalMessageInfo

func (m *UpdateInstResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 业务拓扑对象
type TopologyObject struct {
	// 业务ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 业务名称
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 对象ID
	BkObjId string `protobuf:"bytes,3,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 对象名称
	BkObjName string `protobuf:"bytes,4,opt,name=bk_obj_name,json=bkObjName,proto3" json:"bk_obj_name,omitempty"`
	// 唯一标识
	Uuid int32 `protobuf:"varint,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 子对象
	Child                []*TopologyObject `protobuf:"bytes,6,rep,name=child,proto3" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TopologyObject) Reset()         { *m = TopologyObject{} }
func (m *TopologyObject) String() string { return proto.CompactTextString(m) }
func (*TopologyObject) ProtoMessage()    {}
func (*TopologyObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{4}
}

func (m *TopologyObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopologyObject.Unmarshal(m, b)
}
func (m *TopologyObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopologyObject.Marshal(b, m, deterministic)
}
func (m *TopologyObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopologyObject.Merge(m, src)
}
func (m *TopologyObject) XXX_Size() int {
	return xxx_messageInfo_TopologyObject.Size(m)
}
func (m *TopologyObject) XXX_DiscardUnknown() {
	xxx_messageInfo_TopologyObject.DiscardUnknown(m)
}

var xxx_messageInfo_TopologyObject proto.InternalMessageInfo

func (m *TopologyObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *TopologyObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *TopologyObject) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *TopologyObject) GetBkObjName() string {
	if m != nil {
		return m.BkObjName
	}
	return ""
}

func (m *TopologyObject) GetUuid() int32 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *TopologyObject) GetChild() []*TopologyObject {
	if m != nil {
		return m.Child
	}
	return nil
}

// 拓扑实例请求
type InstanceTopologyRequest struct {
	WithIdlepool         bool     `protobuf:"varint,1,opt,name=with_idlepool,json=withIdlepool,proto3" json:"with_idlepool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceTopologyRequest) Reset()         { *m = InstanceTopologyRequest{} }
func (m *InstanceTopologyRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceTopologyRequest) ProtoMessage()    {}
func (*InstanceTopologyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{5}
}

func (m *InstanceTopologyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceTopologyRequest.Unmarshal(m, b)
}
func (m *InstanceTopologyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceTopologyRequest.Marshal(b, m, deterministic)
}
func (m *InstanceTopologyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceTopologyRequest.Merge(m, src)
}
func (m *InstanceTopologyRequest) XXX_Size() int {
	return xxx_messageInfo_InstanceTopologyRequest.Size(m)
}
func (m *InstanceTopologyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceTopologyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceTopologyRequest proto.InternalMessageInfo

func (m *InstanceTopologyRequest) GetWithIdlepool() bool {
	if m != nil {
		return m.WithIdlepool
	}
	return false
}

// 拓扑实例请求返回
type InstanceTopologyResponse struct {
	// 多个业务拓扑对象
	Instance []*TopologyObject `protobuf:"bytes,1,rep,name=instance,proto3" json:"instance,omitempty"`
	// TopologyObject instance = 1;
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InstanceTopologyResponse) Reset()         { *m = InstanceTopologyResponse{} }
func (m *InstanceTopologyResponse) String() string { return proto.CompactTextString(m) }
func (*InstanceTopologyResponse) ProtoMessage()    {}
func (*InstanceTopologyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{6}
}

func (m *InstanceTopologyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceTopologyResponse.Unmarshal(m, b)
}
func (m *InstanceTopologyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceTopologyResponse.Marshal(b, m, deterministic)
}
func (m *InstanceTopologyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceTopologyResponse.Merge(m, src)
}
func (m *InstanceTopologyResponse) XXX_Size() int {
	return xxx_messageInfo_InstanceTopologyResponse.Size(m)
}
func (m *InstanceTopologyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceTopologyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceTopologyResponse proto.InternalMessageInfo

func (m *InstanceTopologyResponse) GetInstance() []*TopologyObject {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *InstanceTopologyResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 主机域信息
type HostCloudInfo struct {
	// 域ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 对象类型
	BkObjId string `protobuf:"bytes,2,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 对象图标
	BkObjIcon string `protobuf:"bytes,3,opt,name=bk_obj_icon,json=bkObjIcon,proto3" json:"bk_obj_icon,omitempty"`
	// 实体ID
	BkInstId int32 `protobuf:"varint,4,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 对象名称
	BkObjName string `protobuf:"bytes,5,opt,name=bk_obj_name,json=bkObjName,proto3" json:"bk_obj_name,omitempty"`
	// 实体名称
	BkInstName           string   `protobuf:"bytes,6,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostCloudInfo) Reset()         { *m = HostCloudInfo{} }
func (m *HostCloudInfo) String() string { return proto.CompactTextString(m) }
func (*HostCloudInfo) ProtoMessage()    {}
func (*HostCloudInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{7}
}

func (m *HostCloudInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostCloudInfo.Unmarshal(m, b)
}
func (m *HostCloudInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostCloudInfo.Marshal(b, m, deterministic)
}
func (m *HostCloudInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostCloudInfo.Merge(m, src)
}
func (m *HostCloudInfo) XXX_Size() int {
	return xxx_messageInfo_HostCloudInfo.Size(m)
}
func (m *HostCloudInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HostCloudInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HostCloudInfo proto.InternalMessageInfo

func (m *HostCloudInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HostCloudInfo) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *HostCloudInfo) GetBkObjIcon() string {
	if m != nil {
		return m.BkObjIcon
	}
	return ""
}

func (m *HostCloudInfo) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *HostCloudInfo) GetBkObjName() string {
	if m != nil {
		return m.BkObjName
	}
	return ""
}

func (m *HostCloudInfo) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

// 主机
type HostObject struct {
	// 内网IP
	BkHostInnerip string `protobuf:"bytes,1,opt,name=bk_host_innerip,json=bkHostInnerip,proto3" json:"bk_host_innerip,omitempty"`
	// 外网IP
	BkHostOuterip string `protobuf:"bytes,2,opt,name=bk_host_outerip,json=bkHostOuterip,proto3" json:"bk_host_outerip,omitempty"`
	// 主要维护人
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	// 备份维护人
	BkBakOperator string `protobuf:"bytes,4,opt,name=bk_bak_operator,json=bkBakOperator,proto3" json:"bk_bak_operator,omitempty"`
	// 固资编号
	BkAssetId string `protobuf:"bytes,5,opt,name=bk_asset_id,json=bkAssetId,proto3" json:"bk_asset_id,omitempty"`
	// 设备SN
	BkSn string `protobuf:"bytes,6,opt,name=bk_sn,json=bkSn,proto3" json:"bk_sn,omitempty"`
	// 备注
	BkComment string `protobuf:"bytes,7,opt,name=bk_comment,json=bkComment,proto3" json:"bk_comment,omitempty"`
	// 质保年限
	BkServiceTerm int32 `protobuf:"varint,8,opt,name=bk_service_term,json=bkServiceTerm,proto3" json:"bk_service_term,omitempty"`
	// SLA级别
	BkSla string `protobuf:"bytes,9,opt,name=bk_sla,json=bkSla,proto3" json:"bk_sla,omitempty"`
	// 所在国家
	BkStateName string `protobuf:"bytes,10,opt,name=bk_state_name,json=bkStateName,proto3" json:"bk_state_name,omitempty"`
	// 所在省份
	BkProvinceName string `protobuf:"bytes,11,opt,name=bk_province_name,json=bkProvinceName,proto3" json:"bk_province_name,omitempty"`
	// 所属运营商
	BkIspName string `protobuf:"bytes,12,opt,name=bk_isp_name,json=bkIspName,proto3" json:"bk_isp_name,omitempty"`
	// 主机名称
	BkHostName string `protobuf:"bytes,13,opt,name=bk_host_name,json=bkHostName,proto3" json:"bk_host_name,omitempty"`
	// 操作系统类型
	BkOsType string `protobuf:"bytes,14,opt,name=bk_os_type,json=bkOsType,proto3" json:"bk_os_type,omitempty"`
	// 操作系统名称
	BkOsName string `protobuf:"bytes,15,opt,name=bk_os_name,json=bkOsName,proto3" json:"bk_os_name,omitempty"`
	// 操作系统版本
	BkOsVersion string `protobuf:"bytes,16,opt,name=bk_os_version,json=bkOsVersion,proto3" json:"bk_os_version,omitempty"`
	// 操作系统位数
	BkOsBit string `protobuf:"bytes,17,opt,name=bk_os_bit,json=bkOsBit,proto3" json:"bk_os_bit,omitempty"`
	// CPU逻辑核心数
	BkCpu int32 `protobuf:"varint,18,opt,name=bk_cpu,json=bkCpu,proto3" json:"bk_cpu,omitempty"`
	// CPU频率
	BkCpuMhz int32 `protobuf:"varint,19,opt,name=bk_cpu_mhz,json=bkCpuMhz,proto3" json:"bk_cpu_mhz,omitempty"`
	// CPU型号
	BkCpuModule string `protobuf:"bytes,20,opt,name=bk_cpu_module,json=bkCpuModule,proto3" json:"bk_cpu_module,omitempty"`
	// 内存容量
	BkMem int32 `protobuf:"varint,21,opt,name=bk_mem,json=bkMem,proto3" json:"bk_mem,omitempty"`
	// 磁盘容量
	BkDisk int32 `protobuf:"varint,22,opt,name=bk_disk,json=bkDisk,proto3" json:"bk_disk,omitempty"`
	// 内网MAC地址
	BkMac string `protobuf:"bytes,23,opt,name=bk_mac,json=bkMac,proto3" json:"bk_mac,omitempty"`
	// 外网MAC
	BkOuterMac string `protobuf:"bytes,24,opt,name=bk_outer_mac,json=bkOuterMac,proto3" json:"bk_outer_mac,omitempty"`
	// 录入时间
	CreateTime string `protobuf:"bytes,25,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 录入方式
	ImportFrom string `protobuf:"bytes,26,opt,name=import_from,json=importFrom,proto3" json:"import_from,omitempty"`
	// CN2IP
	Cn2Ip string `protobuf:"bytes,27,opt,name=cn2ip,proto3" json:"cn2ip,omitempty"`
	// Bond类型
	BondType string `protobuf:"bytes,28,opt,name=bond_type,json=bondType,proto3" json:"bond_type,omitempty"`
	// wan_gate
	WanGate string `protobuf:"bytes,29,opt,name=wan_gate,json=wanGate,proto3" json:"wan_gate,omitempty"`
	// cn2_gate
	Cn2Gate string `protobuf:"bytes,30,opt,name=cn2_gate,json=cn2Gate,proto3" json:"cn2_gate,omitempty"`
	// 网卡带宽
	NicSpeed int32 `protobuf:"varint,31,opt,name=nic_speed,json=nicSpeed,proto3" json:"nic_speed,omitempty"`
	// ssh端口
	SshPort int32 `protobuf:"varint,32,opt,name=ssh_port,json=sshPort,proto3" json:"ssh_port,omitempty"`
	// cn2ip掩码数
	Cn2IpMask int32 `protobuf:"varint,33,opt,name=cn2ip_mask,json=cn2ipMask,proto3" json:"cn2ip_mask,omitempty"`
	// 设备ip掩码数
	HostipMask int32 `protobuf:"varint,34,opt,name=hostip_mask,json=hostipMask,proto3" json:"hostip_mask,omitempty"`
	// 设备功能代码
	FunctionCode string `protobuf:"bytes,35,opt,name=function_code,json=functionCode,proto3" json:"function_code,omitempty"`
	// 主机状态
	State string `protobuf:"bytes,36,opt,name=state,proto3" json:"state,omitempty"`
	// 服务能力
	ServiceBandwidth int32 `protobuf:"varint,37,opt,name=service_bandwidth,json=serviceBandwidth,proto3" json:"service_bandwidth,omitempty"`
	// ipv6地址
	Ipv6 string `protobuf:"bytes,38,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	// 设备角色(模块名)
	ModuleName []string `protobuf:"bytes,39,rep,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	// 主机ID
	BkHostId int32 `protobuf:"varint,40,opt,name=bk_host_id,json=bkHostId,proto3" json:"bk_host_id,omitempty"`
	// 主机域信息
	BkCloudId            []*HostCloudInfo `protobuf:"bytes,41,rep,name=bk_cloud_id,json=bkCloudId,proto3" json:"bk_cloud_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HostObject) Reset()         { *m = HostObject{} }
func (m *HostObject) String() string { return proto.CompactTextString(m) }
func (*HostObject) ProtoMessage()    {}
func (*HostObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{8}
}

func (m *HostObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostObject.Unmarshal(m, b)
}
func (m *HostObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostObject.Marshal(b, m, deterministic)
}
func (m *HostObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostObject.Merge(m, src)
}
func (m *HostObject) XXX_Size() int {
	return xxx_messageInfo_HostObject.Size(m)
}
func (m *HostObject) XXX_DiscardUnknown() {
	xxx_messageInfo_HostObject.DiscardUnknown(m)
}

var xxx_messageInfo_HostObject proto.InternalMessageInfo

func (m *HostObject) GetBkHostInnerip() string {
	if m != nil {
		return m.BkHostInnerip
	}
	return ""
}

func (m *HostObject) GetBkHostOuterip() string {
	if m != nil {
		return m.BkHostOuterip
	}
	return ""
}

func (m *HostObject) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *HostObject) GetBkBakOperator() string {
	if m != nil {
		return m.BkBakOperator
	}
	return ""
}

func (m *HostObject) GetBkAssetId() string {
	if m != nil {
		return m.BkAssetId
	}
	return ""
}

func (m *HostObject) GetBkSn() string {
	if m != nil {
		return m.BkSn
	}
	return ""
}

func (m *HostObject) GetBkComment() string {
	if m != nil {
		return m.BkComment
	}
	return ""
}

func (m *HostObject) GetBkServiceTerm() int32 {
	if m != nil {
		return m.BkServiceTerm
	}
	return 0
}

func (m *HostObject) GetBkSla() string {
	if m != nil {
		return m.BkSla
	}
	return ""
}

func (m *HostObject) GetBkStateName() string {
	if m != nil {
		return m.BkStateName
	}
	return ""
}

func (m *HostObject) GetBkProvinceName() string {
	if m != nil {
		return m.BkProvinceName
	}
	return ""
}

func (m *HostObject) GetBkIspName() string {
	if m != nil {
		return m.BkIspName
	}
	return ""
}

func (m *HostObject) GetBkHostName() string {
	if m != nil {
		return m.BkHostName
	}
	return ""
}

func (m *HostObject) GetBkOsType() string {
	if m != nil {
		return m.BkOsType
	}
	return ""
}

func (m *HostObject) GetBkOsName() string {
	if m != nil {
		return m.BkOsName
	}
	return ""
}

func (m *HostObject) GetBkOsVersion() string {
	if m != nil {
		return m.BkOsVersion
	}
	return ""
}

func (m *HostObject) GetBkOsBit() string {
	if m != nil {
		return m.BkOsBit
	}
	return ""
}

func (m *HostObject) GetBkCpu() int32 {
	if m != nil {
		return m.BkCpu
	}
	return 0
}

func (m *HostObject) GetBkCpuMhz() int32 {
	if m != nil {
		return m.BkCpuMhz
	}
	return 0
}

func (m *HostObject) GetBkCpuModule() string {
	if m != nil {
		return m.BkCpuModule
	}
	return ""
}

func (m *HostObject) GetBkMem() int32 {
	if m != nil {
		return m.BkMem
	}
	return 0
}

func (m *HostObject) GetBkDisk() int32 {
	if m != nil {
		return m.BkDisk
	}
	return 0
}

func (m *HostObject) GetBkMac() string {
	if m != nil {
		return m.BkMac
	}
	return ""
}

func (m *HostObject) GetBkOuterMac() string {
	if m != nil {
		return m.BkOuterMac
	}
	return ""
}

func (m *HostObject) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *HostObject) GetImportFrom() string {
	if m != nil {
		return m.ImportFrom
	}
	return ""
}

func (m *HostObject) GetCn2Ip() string {
	if m != nil {
		return m.Cn2Ip
	}
	return ""
}

func (m *HostObject) GetBondType() string {
	if m != nil {
		return m.BondType
	}
	return ""
}

func (m *HostObject) GetWanGate() string {
	if m != nil {
		return m.WanGate
	}
	return ""
}

func (m *HostObject) GetCn2Gate() string {
	if m != nil {
		return m.Cn2Gate
	}
	return ""
}

func (m *HostObject) GetNicSpeed() int32 {
	if m != nil {
		return m.NicSpeed
	}
	return 0
}

func (m *HostObject) GetSshPort() int32 {
	if m != nil {
		return m.SshPort
	}
	return 0
}

func (m *HostObject) GetCn2IpMask() int32 {
	if m != nil {
		return m.Cn2IpMask
	}
	return 0
}

func (m *HostObject) GetHostipMask() int32 {
	if m != nil {
		return m.HostipMask
	}
	return 0
}

func (m *HostObject) GetFunctionCode() string {
	if m != nil {
		return m.FunctionCode
	}
	return ""
}

func (m *HostObject) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *HostObject) GetServiceBandwidth() int32 {
	if m != nil {
		return m.ServiceBandwidth
	}
	return 0
}

func (m *HostObject) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

func (m *HostObject) GetModuleName() []string {
	if m != nil {
		return m.ModuleName
	}
	return nil
}

func (m *HostObject) GetBkHostId() int32 {
	if m != nil {
		return m.BkHostId
	}
	return 0
}

func (m *HostObject) GetBkCloudId() []*HostCloudInfo {
	if m != nil {
		return m.BkCloudId
	}
	return nil
}

// 模块
type ModuleObject struct {
	// 模块名
	BkModuleName string `protobuf:"bytes,1,opt,name=bk_module_name,json=bkModuleName,proto3" json:"bk_module_name,omitempty"`
	// 模块ID
	BkModuleId int32 `protobuf:"varint,2,opt,name=bk_module_id,json=bkModuleId,proto3" json:"bk_module_id,omitempty"`
	// 业务拓扑模块名
	TopModuleName string `protobuf:"bytes,3,opt,name=TopModuleName,proto3" json:"TopModuleName,omitempty"`
	// 父节点id
	BkParentId           int32    `protobuf:"varint,4,opt,name=bk_parent_id,json=bkParentId,proto3" json:"bk_parent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleObject) Reset()         { *m = ModuleObject{} }
func (m *ModuleObject) String() string { return proto.CompactTextString(m) }
func (*ModuleObject) ProtoMessage()    {}
func (*ModuleObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{9}
}

func (m *ModuleObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleObject.Unmarshal(m, b)
}
func (m *ModuleObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleObject.Marshal(b, m, deterministic)
}
func (m *ModuleObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleObject.Merge(m, src)
}
func (m *ModuleObject) XXX_Size() int {
	return xxx_messageInfo_ModuleObject.Size(m)
}
func (m *ModuleObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleObject.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleObject proto.InternalMessageInfo

func (m *ModuleObject) GetBkModuleName() string {
	if m != nil {
		return m.BkModuleName
	}
	return ""
}

func (m *ModuleObject) GetBkModuleId() int32 {
	if m != nil {
		return m.BkModuleId
	}
	return 0
}

func (m *ModuleObject) GetTopModuleName() string {
	if m != nil {
		return m.TopModuleName
	}
	return ""
}

func (m *ModuleObject) GetBkParentId() int32 {
	if m != nil {
		return m.BkParentId
	}
	return 0
}

// 集群
type SetObject struct {
	// 集群名
	BkSetName string `protobuf:"bytes,1,opt,name=bk_set_name,json=bkSetName,proto3" json:"bk_set_name,omitempty"`
	// 集群ID
	BkSetId int32 `protobuf:"varint,2,opt,name=bk_set_id,json=bkSetId,proto3" json:"bk_set_id,omitempty"`
	// 业务拓扑模块名
	TopModuleName string `protobuf:"bytes,3,opt,name=TopModuleName,proto3" json:"TopModuleName,omitempty"`
	// 父节点id
	BkParentId           int32    `protobuf:"varint,4,opt,name=bk_parent_id,json=bkParentId,proto3" json:"bk_parent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetObject) Reset()         { *m = SetObject{} }
func (m *SetObject) String() string { return proto.CompactTextString(m) }
func (*SetObject) ProtoMessage()    {}
func (*SetObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{10}
}

func (m *SetObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetObject.Unmarshal(m, b)
}
func (m *SetObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetObject.Marshal(b, m, deterministic)
}
func (m *SetObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetObject.Merge(m, src)
}
func (m *SetObject) XXX_Size() int {
	return xxx_messageInfo_SetObject.Size(m)
}
func (m *SetObject) XXX_DiscardUnknown() {
	xxx_messageInfo_SetObject.DiscardUnknown(m)
}

var xxx_messageInfo_SetObject proto.InternalMessageInfo

func (m *SetObject) GetBkSetName() string {
	if m != nil {
		return m.BkSetName
	}
	return ""
}

func (m *SetObject) GetBkSetId() int32 {
	if m != nil {
		return m.BkSetId
	}
	return 0
}

func (m *SetObject) GetTopModuleName() string {
	if m != nil {
		return m.TopModuleName
	}
	return ""
}

func (m *SetObject) GetBkParentId() int32 {
	if m != nil {
		return m.BkParentId
	}
	return 0
}

// 区域
type ZoneObject struct {
	// 区域名
	BkSetName string `protobuf:"bytes,1,opt,name=bk_set_name,json=bkSetName,proto3" json:"bk_set_name,omitempty"`
	// 区域ID
	BkInstId             int32    `protobuf:"varint,2,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneObject) Reset()         { *m = ZoneObject{} }
func (m *ZoneObject) String() string { return proto.CompactTextString(m) }
func (*ZoneObject) ProtoMessage()    {}
func (*ZoneObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{11}
}

func (m *ZoneObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneObject.Unmarshal(m, b)
}
func (m *ZoneObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneObject.Marshal(b, m, deterministic)
}
func (m *ZoneObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneObject.Merge(m, src)
}
func (m *ZoneObject) XXX_Size() int {
	return xxx_messageInfo_ZoneObject.Size(m)
}
func (m *ZoneObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneObject.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneObject proto.InternalMessageInfo

func (m *ZoneObject) GetBkSetName() string {
	if m != nil {
		return m.BkSetName
	}
	return ""
}

func (m *ZoneObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

// 业务
type BizObject struct {
	// 业务名
	BkBizName string `protobuf:"bytes,1,opt,name=bk_biz_name,json=bkBizName,proto3" json:"bk_biz_name,omitempty"`
	// 业务ID
	BkBizId              int32    `protobuf:"varint,2,opt,name=bk_biz_id,json=bkBizId,proto3" json:"bk_biz_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BizObject) Reset()         { *m = BizObject{} }
func (m *BizObject) String() string { return proto.CompactTextString(m) }
func (*BizObject) ProtoMessage()    {}
func (*BizObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{12}
}

func (m *BizObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BizObject.Unmarshal(m, b)
}
func (m *BizObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BizObject.Marshal(b, m, deterministic)
}
func (m *BizObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BizObject.Merge(m, src)
}
func (m *BizObject) XXX_Size() int {
	return xxx_messageInfo_BizObject.Size(m)
}
func (m *BizObject) XXX_DiscardUnknown() {
	xxx_messageInfo_BizObject.DiscardUnknown(m)
}

var xxx_messageInfo_BizObject proto.InternalMessageInfo

func (m *BizObject) GetBkBizName() string {
	if m != nil {
		return m.BkBizName
	}
	return ""
}

func (m *BizObject) GetBkBizId() int32 {
	if m != nil {
		return m.BkBizId
	}
	return 0
}

// 通用对象，包括机房 交换机 物理机
type CommonObject struct {
	// 实例ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 实例名称
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 实例属对象
	BkObjId              string   `protobuf:"bytes,3,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonObject) Reset()         { *m = CommonObject{} }
func (m *CommonObject) String() string { return proto.CompactTextString(m) }
func (*CommonObject) ProtoMessage()    {}
func (*CommonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{13}
}

func (m *CommonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonObject.Unmarshal(m, b)
}
func (m *CommonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonObject.Marshal(b, m, deterministic)
}
func (m *CommonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonObject.Merge(m, src)
}
func (m *CommonObject) XXX_Size() int {
	return xxx_messageInfo_CommonObject.Size(m)
}
func (m *CommonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonObject.DiscardUnknown(m)
}

var xxx_messageInfo_CommonObject proto.InternalMessageInfo

func (m *CommonObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *CommonObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *CommonObject) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

// 关联关系请求
type CreateAssociationRequest struct {
	// 实例关联唯一标识
	BkObjAsstId string `protobuf:"bytes,1,opt,name=bk_obj_asst_id,json=bkObjAsstId,proto3" json:"bk_obj_asst_id,omitempty"`
	// 源实例ID
	BkInstId int32 `protobuf:"varint,2,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 目标实例ID
	BkAsstInstId         int32    `protobuf:"varint,3,opt,name=bk_asst_inst_id,json=bkAsstInstId,proto3" json:"bk_asst_inst_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAssociationRequest) Reset()         { *m = CreateAssociationRequest{} }
func (m *CreateAssociationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAssociationRequest) ProtoMessage()    {}
func (*CreateAssociationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{14}
}

func (m *CreateAssociationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAssociationRequest.Unmarshal(m, b)
}
func (m *CreateAssociationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAssociationRequest.Marshal(b, m, deterministic)
}
func (m *CreateAssociationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAssociationRequest.Merge(m, src)
}
func (m *CreateAssociationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAssociationRequest.Size(m)
}
func (m *CreateAssociationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAssociationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAssociationRequest proto.InternalMessageInfo

func (m *CreateAssociationRequest) GetBkObjAsstId() string {
	if m != nil {
		return m.BkObjAsstId
	}
	return ""
}

func (m *CreateAssociationRequest) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *CreateAssociationRequest) GetBkAsstInstId() int32 {
	if m != nil {
		return m.BkAsstInstId
	}
	return 0
}

// 主机内容信息
type HostInfoObject struct {
	// 主机对象
	Host *HostObject `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// 模块对象
	Module []*ModuleObject `protobuf:"bytes,2,rep,name=module,proto3" json:"module,omitempty"`
	// 集群对象
	Set []*SetObject `protobuf:"bytes,3,rep,name=set,proto3" json:"set,omitempty"`
	// 业务对象
	Biz                  []*BizObject `protobuf:"bytes,4,rep,name=biz,proto3" json:"biz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HostInfoObject) Reset()         { *m = HostInfoObject{} }
func (m *HostInfoObject) String() string { return proto.CompactTextString(m) }
func (*HostInfoObject) ProtoMessage()    {}
func (*HostInfoObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{15}
}

func (m *HostInfoObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostInfoObject.Unmarshal(m, b)
}
func (m *HostInfoObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostInfoObject.Marshal(b, m, deterministic)
}
func (m *HostInfoObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostInfoObject.Merge(m, src)
}
func (m *HostInfoObject) XXX_Size() int {
	return xxx_messageInfo_HostInfoObject.Size(m)
}
func (m *HostInfoObject) XXX_DiscardUnknown() {
	xxx_messageInfo_HostInfoObject.DiscardUnknown(m)
}

var xxx_messageInfo_HostInfoObject proto.InternalMessageInfo

func (m *HostInfoObject) GetHost() *HostObject {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *HostInfoObject) GetModule() []*ModuleObject {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *HostInfoObject) GetSet() []*SetObject {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *HostInfoObject) GetBiz() []*BizObject {
	if m != nil {
		return m.Biz
	}
	return nil
}

// 查找主机请求
type SearchHostRequest struct {
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// 主机对象
	Host *HostObject `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// 模块对象
	Module *ModuleObject `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
	// 集群对象
	Set *SetObject `protobuf:"bytes,4,opt,name=set,proto3" json:"set,omitempty"`
	// 业务对象
	Biz *BizObject `protobuf:"bytes,5,opt,name=biz,proto3" json:"biz,omitempty"`
	// 区域对象
	Zone *ZoneObject `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	// 查询条件
	Conditions           string   `protobuf:"bytes,7,opt,name=conditions,proto3" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchHostRequest) Reset()         { *m = SearchHostRequest{} }
func (m *SearchHostRequest) String() string { return proto.CompactTextString(m) }
func (*SearchHostRequest) ProtoMessage()    {}
func (*SearchHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{16}
}

func (m *SearchHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchHostRequest.Unmarshal(m, b)
}
func (m *SearchHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchHostRequest.Marshal(b, m, deterministic)
}
func (m *SearchHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchHostRequest.Merge(m, src)
}
func (m *SearchHostRequest) XXX_Size() int {
	return xxx_messageInfo_SearchHostRequest.Size(m)
}
func (m *SearchHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchHostRequest proto.InternalMessageInfo

func (m *SearchHostRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *SearchHostRequest) GetHost() *HostObject {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *SearchHostRequest) GetModule() *ModuleObject {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *SearchHostRequest) GetSet() *SetObject {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *SearchHostRequest) GetBiz() *BizObject {
	if m != nil {
		return m.Biz
	}
	return nil
}

func (m *SearchHostRequest) GetZone() *ZoneObject {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *SearchHostRequest) GetConditions() string {
	if m != nil {
		return m.Conditions
	}
	return ""
}

// 查找主机请求返回
type SearchHostResponse struct {
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// 状态码
	Status *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 主机信息
	HostInfoObject       []*HostInfoObject `protobuf:"bytes,3,rep,name=host_info_object,json=hostInfoObject,proto3" json:"host_info_object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchHostResponse) Reset()         { *m = SearchHostResponse{} }
func (m *SearchHostResponse) String() string { return proto.CompactTextString(m) }
func (*SearchHostResponse) ProtoMessage()    {}
func (*SearchHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{17}
}

func (m *SearchHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchHostResponse.Unmarshal(m, b)
}
func (m *SearchHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchHostResponse.Marshal(b, m, deterministic)
}
func (m *SearchHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchHostResponse.Merge(m, src)
}
func (m *SearchHostResponse) XXX_Size() int {
	return xxx_messageInfo_SearchHostResponse.Size(m)
}
func (m *SearchHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchHostResponse proto.InternalMessageInfo

func (m *SearchHostResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *SearchHostResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchHostResponse) GetHostInfoObject() []*HostInfoObject {
	if m != nil {
		return m.HostInfoObject
	}
	return nil
}

// 导入交维表请求
type ImportCrossTableRequest struct {
	// xlsx文件下载路径
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportCrossTableRequest) Reset()         { *m = ImportCrossTableRequest{} }
func (m *ImportCrossTableRequest) String() string { return proto.CompactTextString(m) }
func (*ImportCrossTableRequest) ProtoMessage()    {}
func (*ImportCrossTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{18}
}

func (m *ImportCrossTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportCrossTableRequest.Unmarshal(m, b)
}
func (m *ImportCrossTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportCrossTableRequest.Marshal(b, m, deterministic)
}
func (m *ImportCrossTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportCrossTableRequest.Merge(m, src)
}
func (m *ImportCrossTableRequest) XXX_Size() int {
	return xxx_messageInfo_ImportCrossTableRequest.Size(m)
}
func (m *ImportCrossTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportCrossTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportCrossTableRequest proto.InternalMessageInfo

func (m *ImportCrossTableRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportCrossTableRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportCrossTableRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// 导入交维表请求返回
type ImportCrossTableResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportCrossTableResponse) Reset()         { *m = ImportCrossTableResponse{} }
func (m *ImportCrossTableResponse) String() string { return proto.CompactTextString(m) }
func (*ImportCrossTableResponse) ProtoMessage()    {}
func (*ImportCrossTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{19}
}

func (m *ImportCrossTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportCrossTableResponse.Unmarshal(m, b)
}
func (m *ImportCrossTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportCrossTableResponse.Marshal(b, m, deterministic)
}
func (m *ImportCrossTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportCrossTableResponse.Merge(m, src)
}
func (m *ImportCrossTableResponse) XXX_Size() int {
	return xxx_messageInfo_ImportCrossTableResponse.Size(m)
}
func (m *ImportCrossTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportCrossTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportCrossTableResponse proto.InternalMessageInfo

func (m *ImportCrossTableResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 导入主机请求
type ImportHostRequest struct {
	// xlsx文件下载路径
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportHostRequest) Reset()         { *m = ImportHostRequest{} }
func (m *ImportHostRequest) String() string { return proto.CompactTextString(m) }
func (*ImportHostRequest) ProtoMessage()    {}
func (*ImportHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{20}
}

func (m *ImportHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportHostRequest.Unmarshal(m, b)
}
func (m *ImportHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportHostRequest.Marshal(b, m, deterministic)
}
func (m *ImportHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportHostRequest.Merge(m, src)
}
func (m *ImportHostRequest) XXX_Size() int {
	return xxx_messageInfo_ImportHostRequest.Size(m)
}
func (m *ImportHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportHostRequest proto.InternalMessageInfo

func (m *ImportHostRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportHostRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportHostRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// 导入主机请求返回
type ImportHostResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportHostResponse) Reset()         { *m = ImportHostResponse{} }
func (m *ImportHostResponse) String() string { return proto.CompactTextString(m) }
func (*ImportHostResponse) ProtoMessage()    {}
func (*ImportHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{21}
}

func (m *ImportHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportHostResponse.Unmarshal(m, b)
}
func (m *ImportHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportHostResponse.Marshal(b, m, deterministic)
}
func (m *ImportHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportHostResponse.Merge(m, src)
}
func (m *ImportHostResponse) XXX_Size() int {
	return xxx_messageInfo_ImportHostResponse.Size(m)
}
func (m *ImportHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportHostResponse proto.InternalMessageInfo

func (m *ImportHostResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 导入物理机请求
type ImportServerRequest struct {
	// xlsx文件下载路径
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportServerRequest) Reset()         { *m = ImportServerRequest{} }
func (m *ImportServerRequest) String() string { return proto.CompactTextString(m) }
func (*ImportServerRequest) ProtoMessage()    {}
func (*ImportServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{22}
}

func (m *ImportServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportServerRequest.Unmarshal(m, b)
}
func (m *ImportServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportServerRequest.Marshal(b, m, deterministic)
}
func (m *ImportServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportServerRequest.Merge(m, src)
}
func (m *ImportServerRequest) XXX_Size() int {
	return xxx_messageInfo_ImportServerRequest.Size(m)
}
func (m *ImportServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportServerRequest proto.InternalMessageInfo

func (m *ImportServerRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportServerRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportServerRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// 导入物理机请求返回
type ImportServerResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportServerResponse) Reset()         { *m = ImportServerResponse{} }
func (m *ImportServerResponse) String() string { return proto.CompactTextString(m) }
func (*ImportServerResponse) ProtoMessage()    {}
func (*ImportServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{23}
}

func (m *ImportServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportServerResponse.Unmarshal(m, b)
}
func (m *ImportServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportServerResponse.Marshal(b, m, deterministic)
}
func (m *ImportServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportServerResponse.Merge(m, src)
}
func (m *ImportServerResponse) XXX_Size() int {
	return xxx_messageInfo_ImportServerResponse.Size(m)
}
func (m *ImportServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportServerResponse proto.InternalMessageInfo

func (m *ImportServerResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 选择主机请求
type ChooseHostRequest struct {
	// 业务ID
	BkBizId int32 `protobuf:"varint,1,opt,name=bk_biz_id,json=bkBizId,proto3" json:"bk_biz_id,omitempty"`
	// 集群ID
	BkSetId int32 `protobuf:"varint,2,opt,name=bk_set_id,json=bkSetId,proto3" json:"bk_set_id,omitempty"`
	// 模块ID
	BkModuleId           []int32  `protobuf:"varint,3,rep,packed,name=bk_module_id,json=bkModuleId,proto3" json:"bk_module_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChooseHostRequest) Reset()         { *m = ChooseHostRequest{} }
func (m *ChooseHostRequest) String() string { return proto.CompactTextString(m) }
func (*ChooseHostRequest) ProtoMessage()    {}
func (*ChooseHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{24}
}

func (m *ChooseHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChooseHostRequest.Unmarshal(m, b)
}
func (m *ChooseHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChooseHostRequest.Marshal(b, m, deterministic)
}
func (m *ChooseHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChooseHostRequest.Merge(m, src)
}
func (m *ChooseHostRequest) XXX_Size() int {
	return xxx_messageInfo_ChooseHostRequest.Size(m)
}
func (m *ChooseHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChooseHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChooseHostRequest proto.InternalMessageInfo

func (m *ChooseHostRequest) GetBkBizId() int32 {
	if m != nil {
		return m.BkBizId
	}
	return 0
}

func (m *ChooseHostRequest) GetBkSetId() int32 {
	if m != nil {
		return m.BkSetId
	}
	return 0
}

func (m *ChooseHostRequest) GetBkModuleId() []int32 {
	if m != nil {
		return m.BkModuleId
	}
	return nil
}

// 物理机传入信息
type Server struct {
	// 裸金属uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 物理机ipmi的ip
	IpmiIp               string   `protobuf:"bytes,2,opt,name=ipmi_ip,json=ipmiIp,proto3" json:"ipmi_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{25}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Server) GetIpmiIp() string {
	if m != nil {
		return m.IpmiIp
	}
	return ""
}

// 选择物理机请求
type ChooseServerRequest struct {
	// 机房ID
	RoomId int32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 机房下对应物理机UUID及ipmi的ip
	Server               []*Server `protobuf:"bytes,2,rep,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChooseServerRequest) Reset()         { *m = ChooseServerRequest{} }
func (m *ChooseServerRequest) String() string { return proto.CompactTextString(m) }
func (*ChooseServerRequest) ProtoMessage()    {}
func (*ChooseServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{26}
}

func (m *ChooseServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChooseServerRequest.Unmarshal(m, b)
}
func (m *ChooseServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChooseServerRequest.Marshal(b, m, deterministic)
}
func (m *ChooseServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChooseServerRequest.Merge(m, src)
}
func (m *ChooseServerRequest) XXX_Size() int {
	return xxx_messageInfo_ChooseServerRequest.Size(m)
}
func (m *ChooseServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChooseServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChooseServerRequest proto.InternalMessageInfo

func (m *ChooseServerRequest) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *ChooseServerRequest) GetServer() []*Server {
	if m != nil {
		return m.Server
	}
	return nil
}

// 选择需要巡检校验的物理机请求
type ChooseServerCompareRequest struct {
	// 机房ID
	RoomId               int32    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChooseServerCompareRequest) Reset()         { *m = ChooseServerCompareRequest{} }
func (m *ChooseServerCompareRequest) String() string { return proto.CompactTextString(m) }
func (*ChooseServerCompareRequest) ProtoMessage()    {}
func (*ChooseServerCompareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{27}
}

func (m *ChooseServerCompareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChooseServerCompareRequest.Unmarshal(m, b)
}
func (m *ChooseServerCompareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChooseServerCompareRequest.Marshal(b, m, deterministic)
}
func (m *ChooseServerCompareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChooseServerCompareRequest.Merge(m, src)
}
func (m *ChooseServerCompareRequest) XXX_Size() int {
	return xxx_messageInfo_ChooseServerCompareRequest.Size(m)
}
func (m *ChooseServerCompareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChooseServerCompareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChooseServerCompareRequest proto.InternalMessageInfo

func (m *ChooseServerCompareRequest) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

// 导入交换机请求
type ImportSwitchRequest struct {
	// xlsx文件下载路径
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportSwitchRequest) Reset()         { *m = ImportSwitchRequest{} }
func (m *ImportSwitchRequest) String() string { return proto.CompactTextString(m) }
func (*ImportSwitchRequest) ProtoMessage()    {}
func (*ImportSwitchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{28}
}

func (m *ImportSwitchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportSwitchRequest.Unmarshal(m, b)
}
func (m *ImportSwitchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportSwitchRequest.Marshal(b, m, deterministic)
}
func (m *ImportSwitchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportSwitchRequest.Merge(m, src)
}
func (m *ImportSwitchRequest) XXX_Size() int {
	return xxx_messageInfo_ImportSwitchRequest.Size(m)
}
func (m *ImportSwitchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportSwitchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportSwitchRequest proto.InternalMessageInfo

func (m *ImportSwitchRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportSwitchRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportSwitchRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// 导入交换机请求返回
type ImportSwitchResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportSwitchResponse) Reset()         { *m = ImportSwitchResponse{} }
func (m *ImportSwitchResponse) String() string { return proto.CompactTextString(m) }
func (*ImportSwitchResponse) ProtoMessage()    {}
func (*ImportSwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{29}
}

func (m *ImportSwitchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportSwitchResponse.Unmarshal(m, b)
}
func (m *ImportSwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportSwitchResponse.Marshal(b, m, deterministic)
}
func (m *ImportSwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportSwitchResponse.Merge(m, src)
}
func (m *ImportSwitchResponse) XXX_Size() int {
	return xxx_messageInfo_ImportSwitchResponse.Size(m)
}
func (m *ImportSwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportSwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportSwitchResponse proto.InternalMessageInfo

func (m *ImportSwitchResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 导入lake节点请求
type ImportLakeRequest struct {
	// xlsx文件下载路径
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportLakeRequest) Reset()         { *m = ImportLakeRequest{} }
func (m *ImportLakeRequest) String() string { return proto.CompactTextString(m) }
func (*ImportLakeRequest) ProtoMessage()    {}
func (*ImportLakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{30}
}

func (m *ImportLakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportLakeRequest.Unmarshal(m, b)
}
func (m *ImportLakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportLakeRequest.Marshal(b, m, deterministic)
}
func (m *ImportLakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportLakeRequest.Merge(m, src)
}
func (m *ImportLakeRequest) XXX_Size() int {
	return xxx_messageInfo_ImportLakeRequest.Size(m)
}
func (m *ImportLakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportLakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportLakeRequest proto.InternalMessageInfo

func (m *ImportLakeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportLakeRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportLakeRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// 导入lake节点请求返回
type ImportLakeResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportLakeResponse) Reset()         { *m = ImportLakeResponse{} }
func (m *ImportLakeResponse) String() string { return proto.CompactTextString(m) }
func (*ImportLakeResponse) ProtoMessage()    {}
func (*ImportLakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{31}
}

func (m *ImportLakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportLakeResponse.Unmarshal(m, b)
}
func (m *ImportLakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportLakeResponse.Marshal(b, m, deterministic)
}
func (m *ImportLakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportLakeResponse.Merge(m, src)
}
func (m *ImportLakeResponse) XXX_Size() int {
	return xxx_messageInfo_ImportLakeResponse.Size(m)
}
func (m *ImportLakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportLakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportLakeResponse proto.InternalMessageInfo

func (m *ImportLakeResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 机房对象
type RoomObject struct {
	// 机房ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 机房名称
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 对象ID
	BkObjId string `protobuf:"bytes,3,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 子对象
	Child                []*RoomObject `protobuf:"bytes,4,rep,name=child,proto3" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RoomObject) Reset()         { *m = RoomObject{} }
func (m *RoomObject) String() string { return proto.CompactTextString(m) }
func (*RoomObject) ProtoMessage()    {}
func (*RoomObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{32}
}

func (m *RoomObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomObject.Unmarshal(m, b)
}
func (m *RoomObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomObject.Marshal(b, m, deterministic)
}
func (m *RoomObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomObject.Merge(m, src)
}
func (m *RoomObject) XXX_Size() int {
	return xxx_messageInfo_RoomObject.Size(m)
}
func (m *RoomObject) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomObject.DiscardUnknown(m)
}

var xxx_messageInfo_RoomObject proto.InternalMessageInfo

func (m *RoomObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *RoomObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *RoomObject) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *RoomObject) GetChild() []*RoomObject {
	if m != nil {
		return m.Child
	}
	return nil
}

// 机房拓扑请求
type RoomTopologyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomTopologyRequest) Reset()         { *m = RoomTopologyRequest{} }
func (m *RoomTopologyRequest) String() string { return proto.CompactTextString(m) }
func (*RoomTopologyRequest) ProtoMessage()    {}
func (*RoomTopologyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{33}
}

func (m *RoomTopologyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomTopologyRequest.Unmarshal(m, b)
}
func (m *RoomTopologyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomTopologyRequest.Marshal(b, m, deterministic)
}
func (m *RoomTopologyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomTopologyRequest.Merge(m, src)
}
func (m *RoomTopologyRequest) XXX_Size() int {
	return xxx_messageInfo_RoomTopologyRequest.Size(m)
}
func (m *RoomTopologyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomTopologyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoomTopologyRequest proto.InternalMessageInfo

// 机房拓扑请求返回
type RoomTopologyResponse struct {
	// 机房拓扑对象
	Rooms []*RoomObject `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RoomTopologyResponse) Reset()         { *m = RoomTopologyResponse{} }
func (m *RoomTopologyResponse) String() string { return proto.CompactTextString(m) }
func (*RoomTopologyResponse) ProtoMessage()    {}
func (*RoomTopologyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{34}
}

func (m *RoomTopologyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomTopologyResponse.Unmarshal(m, b)
}
func (m *RoomTopologyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomTopologyResponse.Marshal(b, m, deterministic)
}
func (m *RoomTopologyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomTopologyResponse.Merge(m, src)
}
func (m *RoomTopologyResponse) XXX_Size() int {
	return xxx_messageInfo_RoomTopologyResponse.Size(m)
}
func (m *RoomTopologyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomTopologyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoomTopologyResponse proto.InternalMessageInfo

func (m *RoomTopologyResponse) GetRooms() []*RoomObject {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *RoomTopologyResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 物理机对象
type ServerObject struct {
	// 物理机id
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	//实例名
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// IPMI地址
	ManageIp string `protobuf:"bytes,3,opt,name=manage_ip,json=manageIp,proto3" json:"manage_ip,omitempty"`
	// IPMI账号
	Account string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	// IPMI密码
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// MAC地址
	MacAddress string `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// 机柜
	Cabinet string `protobuf:"bytes,7,opt,name=cabinet,proto3" json:"cabinet,omitempty"`
	// IPMI端口
	Port string `protobuf:"bytes,8,opt,name=port,proto3" json:"port,omitempty"`
	// 电源状态
	PowerState ServerPowerState `protobuf:"varint,9,opt,name=power_state,json=powerState,proto3,enum=cmdb.ServerPowerState" json:"power_state,omitempty"`
	// 装机状态
	InstallState ServerInstallState `protobuf:"varint,10,opt,name=install_state,json=installState,proto3,enum=cmdb.ServerInstallState" json:"install_state,omitempty"`
	// 裸金属uuid
	Uuid string `protobuf:"bytes,11,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 主机内网IP
	BkHostInnerip string `protobuf:"bytes,12,opt,name=bk_host_innerip,json=bkHostInnerip,proto3" json:"bk_host_innerip,omitempty"`
	// 机房id
	RoomId               int32    `protobuf:"varint,13,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerObject) Reset()         { *m = ServerObject{} }
func (m *ServerObject) String() string { return proto.CompactTextString(m) }
func (*ServerObject) ProtoMessage()    {}
func (*ServerObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{35}
}

func (m *ServerObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerObject.Unmarshal(m, b)
}
func (m *ServerObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerObject.Marshal(b, m, deterministic)
}
func (m *ServerObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerObject.Merge(m, src)
}
func (m *ServerObject) XXX_Size() int {
	return xxx_messageInfo_ServerObject.Size(m)
}
func (m *ServerObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerObject.DiscardUnknown(m)
}

var xxx_messageInfo_ServerObject proto.InternalMessageInfo

func (m *ServerObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *ServerObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *ServerObject) GetManageIp() string {
	if m != nil {
		return m.ManageIp
	}
	return ""
}

func (m *ServerObject) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ServerObject) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ServerObject) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *ServerObject) GetCabinet() string {
	if m != nil {
		return m.Cabinet
	}
	return ""
}

func (m *ServerObject) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *ServerObject) GetPowerState() ServerPowerState {
	if m != nil {
		return m.PowerState
	}
	return ServerPowerState_UNKNOWN
}

func (m *ServerObject) GetInstallState() ServerInstallState {
	if m != nil {
		return m.InstallState
	}
	return ServerInstallState_UNINSTALLED
}

func (m *ServerObject) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ServerObject) GetBkHostInnerip() string {
	if m != nil {
		return m.BkHostInnerip
	}
	return ""
}

func (m *ServerObject) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

// 裸金属列表请求
type ServerListRequest struct {
	// roomId或areaCode
	BkInstId []int32 `protobuf:"varint,1,rep,packed,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 对象类型
	BkObjId string `protobuf:"bytes,2,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 分页信息
	Paging               *common.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ServerListRequest) Reset()         { *m = ServerListRequest{} }
func (m *ServerListRequest) String() string { return proto.CompactTextString(m) }
func (*ServerListRequest) ProtoMessage()    {}
func (*ServerListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{36}
}

func (m *ServerListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerListRequest.Unmarshal(m, b)
}
func (m *ServerListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerListRequest.Marshal(b, m, deterministic)
}
func (m *ServerListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerListRequest.Merge(m, src)
}
func (m *ServerListRequest) XXX_Size() int {
	return xxx_messageInfo_ServerListRequest.Size(m)
}
func (m *ServerListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerListRequest proto.InternalMessageInfo

func (m *ServerListRequest) GetBkInstId() []int32 {
	if m != nil {
		return m.BkInstId
	}
	return nil
}

func (m *ServerListRequest) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *ServerListRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

// 裸金属列表响应
type ServerListResponse struct {
	// 裸金属列表
	Servers []*ServerObject `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServerListResponse) Reset()         { *m = ServerListResponse{} }
func (m *ServerListResponse) String() string { return proto.CompactTextString(m) }
func (*ServerListResponse) ProtoMessage()    {}
func (*ServerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{37}
}

func (m *ServerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerListResponse.Unmarshal(m, b)
}
func (m *ServerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerListResponse.Marshal(b, m, deterministic)
}
func (m *ServerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerListResponse.Merge(m, src)
}
func (m *ServerListResponse) XXX_Size() int {
	return xxx_messageInfo_ServerListResponse.Size(m)
}
func (m *ServerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerListResponse proto.InternalMessageInfo

func (m *ServerListResponse) GetServers() []*ServerObject {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *ServerListResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ServerListResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 查询模块请求
type SearchModuleRequest struct {
	CmdbSearchRequest    *ChooseHostRequest `protobuf:"bytes,1,opt,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SearchModuleRequest) Reset()         { *m = SearchModuleRequest{} }
func (m *SearchModuleRequest) String() string { return proto.CompactTextString(m) }
func (*SearchModuleRequest) ProtoMessage()    {}
func (*SearchModuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{38}
}

func (m *SearchModuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleRequest.Unmarshal(m, b)
}
func (m *SearchModuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleRequest.Marshal(b, m, deterministic)
}
func (m *SearchModuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleRequest.Merge(m, src)
}
func (m *SearchModuleRequest) XXX_Size() int {
	return xxx_messageInfo_SearchModuleRequest.Size(m)
}
func (m *SearchModuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleRequest proto.InternalMessageInfo

func (m *SearchModuleRequest) GetCmdbSearchRequest() *ChooseHostRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

// 查询模块请求返回
type SearchModuleResponse struct {
	// 状态码
	Status *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 模块对象
	Moudule              []*ModuleObject `protobuf:"bytes,2,rep,name=moudule,proto3" json:"moudule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchModuleResponse) Reset()         { *m = SearchModuleResponse{} }
func (m *SearchModuleResponse) String() string { return proto.CompactTextString(m) }
func (*SearchModuleResponse) ProtoMessage()    {}
func (*SearchModuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{39}
}

func (m *SearchModuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleResponse.Unmarshal(m, b)
}
func (m *SearchModuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleResponse.Marshal(b, m, deterministic)
}
func (m *SearchModuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleResponse.Merge(m, src)
}
func (m *SearchModuleResponse) XXX_Size() int {
	return xxx_messageInfo_SearchModuleResponse.Size(m)
}
func (m *SearchModuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleResponse proto.InternalMessageInfo

func (m *SearchModuleResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchModuleResponse) GetMoudule() []*ModuleObject {
	if m != nil {
		return m.Moudule
	}
	return nil
}

// 导入历史对象
type ImportHistoryObject struct {
	// ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// xlsx文件路径
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	// 日志文件下载路径
	LogfileUrl string `protobuf:"bytes,4,opt,name=logfile_url,json=logfileUrl,proto3" json:"logfile_url,omitempty"`
	// 日志文件md5
	LogfileMd5 string `protobuf:"bytes,5,opt,name=logfile_md5,json=logfileMd5,proto3" json:"logfile_md5,omitempty"`
	// 总行数
	TotalCount int32 `protobuf:"varint,6,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 成功行数
	SuccessCount int32 `protobuf:"varint,7,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	// 失败行数
	FailCount int32 `protobuf:"varint,8,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
	// 操作人
	Operator *common.User `protobuf:"bytes,9,opt,name=operator,proto3" json:"operator,omitempty"`
	// 导入类型
	ImportType ImportType `protobuf:"varint,10,opt,name=import_type,json=importType,proto3,enum=cmdb.ImportType" json:"import_type,omitempty"`
	// 导入状态
	Status ImportStatus `protobuf:"varint,11,opt,name=status,proto3,enum=cmdb.ImportStatus" json:"status,omitempty"`
	// 审批描述
	ReviewNote string `protobuf:"bytes,12,opt,name=review_note,json=reviewNote,proto3" json:"review_note,omitempty"`
	// 用户上传的文件名
	Filename string `protobuf:"bytes,13,opt,name=filename,proto3" json:"filename,omitempty"`
	// 日志文件内容
	LogfileContent string `protobuf:"bytes,14,opt,name=logfile_content,json=logfileContent,proto3" json:"logfile_content,omitempty"`
	// 起始时间
	StartTime *timestamp.Timestamp `protobuf:"bytes,15,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间
	EndTime              *timestamp.Timestamp `protobuf:"bytes,16,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ImportHistoryObject) Reset()         { *m = ImportHistoryObject{} }
func (m *ImportHistoryObject) String() string { return proto.CompactTextString(m) }
func (*ImportHistoryObject) ProtoMessage()    {}
func (*ImportHistoryObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{40}
}

func (m *ImportHistoryObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportHistoryObject.Unmarshal(m, b)
}
func (m *ImportHistoryObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportHistoryObject.Marshal(b, m, deterministic)
}
func (m *ImportHistoryObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportHistoryObject.Merge(m, src)
}
func (m *ImportHistoryObject) XXX_Size() int {
	return xxx_messageInfo_ImportHistoryObject.Size(m)
}
func (m *ImportHistoryObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportHistoryObject.DiscardUnknown(m)
}

var xxx_messageInfo_ImportHistoryObject proto.InternalMessageInfo

func (m *ImportHistoryObject) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ImportHistoryObject) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportHistoryObject) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportHistoryObject) GetLogfileUrl() string {
	if m != nil {
		return m.LogfileUrl
	}
	return ""
}

func (m *ImportHistoryObject) GetLogfileMd5() string {
	if m != nil {
		return m.LogfileMd5
	}
	return ""
}

func (m *ImportHistoryObject) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ImportHistoryObject) GetSuccessCount() int32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *ImportHistoryObject) GetFailCount() int32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

func (m *ImportHistoryObject) GetOperator() *common.User {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *ImportHistoryObject) GetImportType() ImportType {
	if m != nil {
		return m.ImportType
	}
	return ImportType_UNDEFINED
}

func (m *ImportHistoryObject) GetStatus() ImportStatus {
	if m != nil {
		return m.Status
	}
	return ImportStatus_IMPORTING
}

func (m *ImportHistoryObject) GetReviewNote() string {
	if m != nil {
		return m.ReviewNote
	}
	return ""
}

func (m *ImportHistoryObject) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ImportHistoryObject) GetLogfileContent() string {
	if m != nil {
		return m.LogfileContent
	}
	return ""
}

func (m *ImportHistoryObject) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ImportHistoryObject) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

// 查询导入历史列表请求
type ImportHistoryRequest struct {
	// 指定查看类型
	ImportType ImportType `protobuf:"varint,1,opt,name=import_type,json=importType,proto3,enum=cmdb.ImportType" json:"import_type,omitempty"`
	// 查看指定状态记录，0-查看全部
	ImportStatus ImportStatus `protobuf:"varint,2,opt,name=import_status,json=importStatus,proto3,enum=cmdb.ImportStatus" json:"import_status,omitempty"`
	// 分页信息
	Paging               *common.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ImportHistoryRequest) Reset()         { *m = ImportHistoryRequest{} }
func (m *ImportHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*ImportHistoryRequest) ProtoMessage()    {}
func (*ImportHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{41}
}

func (m *ImportHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportHistoryRequest.Unmarshal(m, b)
}
func (m *ImportHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportHistoryRequest.Marshal(b, m, deterministic)
}
func (m *ImportHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportHistoryRequest.Merge(m, src)
}
func (m *ImportHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_ImportHistoryRequest.Size(m)
}
func (m *ImportHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportHistoryRequest proto.InternalMessageInfo

func (m *ImportHistoryRequest) GetImportType() ImportType {
	if m != nil {
		return m.ImportType
	}
	return ImportType_UNDEFINED
}

func (m *ImportHistoryRequest) GetImportStatus() ImportStatus {
	if m != nil {
		return m.ImportStatus
	}
	return ImportStatus_IMPORTING
}

func (m *ImportHistoryRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

// 查询导入历史列表返回
type ImportHistoryResponse struct {
	// 导入历史对象列表
	History []*ImportHistoryObject `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportHistoryResponse) Reset()         { *m = ImportHistoryResponse{} }
func (m *ImportHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*ImportHistoryResponse) ProtoMessage()    {}
func (*ImportHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{42}
}

func (m *ImportHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportHistoryResponse.Unmarshal(m, b)
}
func (m *ImportHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportHistoryResponse.Marshal(b, m, deterministic)
}
func (m *ImportHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportHistoryResponse.Merge(m, src)
}
func (m *ImportHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_ImportHistoryResponse.Size(m)
}
func (m *ImportHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportHistoryResponse proto.InternalMessageInfo

func (m *ImportHistoryResponse) GetHistory() []*ImportHistoryObject {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *ImportHistoryResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ImportHistoryResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 地区对象
type AreaObject struct {
	// 实例ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 区域编码
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 区域中文名称
	AreaCnname string `protobuf:"bytes,3,opt,name=area_cnname,json=areaCnname,proto3" json:"area_cnname,omitempty"`
	// 区域英文名称
	AreaEnname string `protobuf:"bytes,4,opt,name=area_enname,json=areaEnname,proto3" json:"area_enname,omitempty"`
	// 父节点ID
	ParentId int32 `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// 地区层级
	Level string `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"`
	// 地区id
	AreaId               int32    `protobuf:"varint,7,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AreaObject) Reset()         { *m = AreaObject{} }
func (m *AreaObject) String() string { return proto.CompactTextString(m) }
func (*AreaObject) ProtoMessage()    {}
func (*AreaObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{43}
}

func (m *AreaObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaObject.Unmarshal(m, b)
}
func (m *AreaObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaObject.Marshal(b, m, deterministic)
}
func (m *AreaObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaObject.Merge(m, src)
}
func (m *AreaObject) XXX_Size() int {
	return xxx_messageInfo_AreaObject.Size(m)
}
func (m *AreaObject) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaObject.DiscardUnknown(m)
}

var xxx_messageInfo_AreaObject proto.InternalMessageInfo

func (m *AreaObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *AreaObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *AreaObject) GetAreaCnname() string {
	if m != nil {
		return m.AreaCnname
	}
	return ""
}

func (m *AreaObject) GetAreaEnname() string {
	if m != nil {
		return m.AreaEnname
	}
	return ""
}

func (m *AreaObject) GetParentId() int32 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *AreaObject) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *AreaObject) GetAreaId() int32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

// 运营商对象
type IspObject struct {
	// 实例ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 实例名
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 运营商编码
	IspCode string `protobuf:"bytes,3,opt,name=isp_code,json=ispCode,proto3" json:"isp_code,omitempty"`
	// 运营商英文名称
	IspEnname string `protobuf:"bytes,4,opt,name=isp_enname,json=ispEnname,proto3" json:"isp_enname,omitempty"`
	// 运营商缩写英文名
	IspAbbr              string   `protobuf:"bytes,5,opt,name=isp_abbr,json=ispAbbr,proto3" json:"isp_abbr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IspObject) Reset()         { *m = IspObject{} }
func (m *IspObject) String() string { return proto.CompactTextString(m) }
func (*IspObject) ProtoMessage()    {}
func (*IspObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{44}
}

func (m *IspObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IspObject.Unmarshal(m, b)
}
func (m *IspObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IspObject.Marshal(b, m, deterministic)
}
func (m *IspObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IspObject.Merge(m, src)
}
func (m *IspObject) XXX_Size() int {
	return xxx_messageInfo_IspObject.Size(m)
}
func (m *IspObject) XXX_DiscardUnknown() {
	xxx_messageInfo_IspObject.DiscardUnknown(m)
}

var xxx_messageInfo_IspObject proto.InternalMessageInfo

func (m *IspObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *IspObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *IspObject) GetIspCode() string {
	if m != nil {
		return m.IspCode
	}
	return ""
}

func (m *IspObject) GetIspEnname() string {
	if m != nil {
		return m.IspEnname
	}
	return ""
}

func (m *IspObject) GetIspAbbr() string {
	if m != nil {
		return m.IspAbbr
	}
	return ""
}

// VIP对象
type VipObject struct {
	// 实例ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// ip的ipv4地址
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// vip类型
	BizType string `protobuf:"bytes,3,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	// vip的ipv6地址
	VipIpv6 string `protobuf:"bytes,4,opt,name=vip_ipv6,json=vipIpv6,proto3" json:"vip_ipv6,omitempty"`
	// vip的ipv4地址
	VipIpv4 string `protobuf:"bytes,5,opt,name=vip_ipv4,json=vipIpv4,proto3" json:"vip_ipv4,omitempty"`
	// ipv4的状态
	Ipv4State string `protobuf:"bytes,6,opt,name=ipv4_state,json=ipv4State,proto3" json:"ipv4_state,omitempty"`
	// ipv6的状态
	Ipv6State            string   `protobuf:"bytes,7,opt,name=ipv6_state,json=ipv6State,proto3" json:"ipv6_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VipObject) Reset()         { *m = VipObject{} }
func (m *VipObject) String() string { return proto.CompactTextString(m) }
func (*VipObject) ProtoMessage()    {}
func (*VipObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{45}
}

func (m *VipObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VipObject.Unmarshal(m, b)
}
func (m *VipObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VipObject.Marshal(b, m, deterministic)
}
func (m *VipObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipObject.Merge(m, src)
}
func (m *VipObject) XXX_Size() int {
	return xxx_messageInfo_VipObject.Size(m)
}
func (m *VipObject) XXX_DiscardUnknown() {
	xxx_messageInfo_VipObject.DiscardUnknown(m)
}

var xxx_messageInfo_VipObject proto.InternalMessageInfo

func (m *VipObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *VipObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *VipObject) GetBizType() string {
	if m != nil {
		return m.BizType
	}
	return ""
}

func (m *VipObject) GetVipIpv6() string {
	if m != nil {
		return m.VipIpv6
	}
	return ""
}

func (m *VipObject) GetVipIpv4() string {
	if m != nil {
		return m.VipIpv4
	}
	return ""
}

func (m *VipObject) GetIpv4State() string {
	if m != nil {
		return m.Ipv4State
	}
	return ""
}

func (m *VipObject) GetIpv6State() string {
	if m != nil {
		return m.Ipv6State
	}
	return ""
}

// 机房对象
type ServerRoomObject struct {
	// 机房ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 机房名称
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 机房状态
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// 地区编码
	AreaCode string `protobuf:"bytes,4,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`
	// 运营商编码
	IspCode string `protobuf:"bytes,5,opt,name=isp_code,json=ispCode,proto3" json:"isp_code,omitempty"`
	// 机房的具体区域信息
	Area *AreaObject `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`
	// 机房的具体地址
	RoomAddress string `protobuf:"bytes,7,opt,name=room_address,json=roomAddress,proto3" json:"room_address,omitempty"`
	// 上行带宽
	UpBandwidth int32 `protobuf:"varint,8,opt,name=up_bandwidth,json=upBandwidth,proto3" json:"up_bandwidth,omitempty"`
	// 保底带宽
	MinBandwidth int32 `protobuf:"varint,9,opt,name=min_bandwidth,json=minBandwidth,proto3" json:"min_bandwidth,omitempty"`
	// 维护人
	Maintainer string `protobuf:"bytes,10,opt,name=maintainer,proto3" json:"maintainer,omitempty"`
	// 联系方式
	Mobile               string   `protobuf:"bytes,11,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerRoomObject) Reset()         { *m = ServerRoomObject{} }
func (m *ServerRoomObject) String() string { return proto.CompactTextString(m) }
func (*ServerRoomObject) ProtoMessage()    {}
func (*ServerRoomObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{46}
}

func (m *ServerRoomObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerRoomObject.Unmarshal(m, b)
}
func (m *ServerRoomObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerRoomObject.Marshal(b, m, deterministic)
}
func (m *ServerRoomObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerRoomObject.Merge(m, src)
}
func (m *ServerRoomObject) XXX_Size() int {
	return xxx_messageInfo_ServerRoomObject.Size(m)
}
func (m *ServerRoomObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerRoomObject.DiscardUnknown(m)
}

var xxx_messageInfo_ServerRoomObject proto.InternalMessageInfo

func (m *ServerRoomObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *ServerRoomObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *ServerRoomObject) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ServerRoomObject) GetAreaCode() string {
	if m != nil {
		return m.AreaCode
	}
	return ""
}

func (m *ServerRoomObject) GetIspCode() string {
	if m != nil {
		return m.IspCode
	}
	return ""
}

func (m *ServerRoomObject) GetArea() *AreaObject {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *ServerRoomObject) GetRoomAddress() string {
	if m != nil {
		return m.RoomAddress
	}
	return ""
}

func (m *ServerRoomObject) GetUpBandwidth() int32 {
	if m != nil {
		return m.UpBandwidth
	}
	return 0
}

func (m *ServerRoomObject) GetMinBandwidth() int32 {
	if m != nil {
		return m.MinBandwidth
	}
	return 0
}

func (m *ServerRoomObject) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *ServerRoomObject) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

// LAKE节点对象
type LakeObject struct {
	// 业务ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 实例名
	BkInstName string `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	// 节点ID
	NodeId int32 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// 节点VIP
	Vip []*VipObject `protobuf:"bytes,4,rep,name=vip,proto3" json:"vip,omitempty"`
	// 能力上限
	BandwidthLimit float32 `protobuf:"fixed32,5,opt,name=bandwidth_limit,json=bandwidthLimit,proto3" json:"bandwidth_limit,omitempty"`
	// 节点层次
	NodeLevel string `protobuf:"bytes,7,opt,name=node_level,json=nodeLevel,proto3" json:"node_level,omitempty"`
	// 节点服务状态
	ServiceState string `protobuf:"bytes,8,opt,name=service_state,json=serviceState,proto3" json:"service_state,omitempty"`
	// 节点建设状态
	ConstructState string `protobuf:"bytes,9,opt,name=construct_state,json=constructState,proto3" json:"construct_state,omitempty"`
	// 节点建设状态变更时间
	ConstructUpdatetime string `protobuf:"bytes,10,opt,name=construct_updatetime,json=constructUpdatetime,proto3" json:"construct_updatetime,omitempty"`
	// 机房信息
	Room []*ServerRoomObject `protobuf:"bytes,11,rep,name=room,proto3" json:"room,omitempty"`
	// 节点编码
	NodeCode             string   `protobuf:"bytes,12,opt,name=node_code,json=nodeCode,proto3" json:"node_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LakeObject) Reset()         { *m = LakeObject{} }
func (m *LakeObject) String() string { return proto.CompactTextString(m) }
func (*LakeObject) ProtoMessage()    {}
func (*LakeObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{47}
}

func (m *LakeObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LakeObject.Unmarshal(m, b)
}
func (m *LakeObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LakeObject.Marshal(b, m, deterministic)
}
func (m *LakeObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LakeObject.Merge(m, src)
}
func (m *LakeObject) XXX_Size() int {
	return xxx_messageInfo_LakeObject.Size(m)
}
func (m *LakeObject) XXX_DiscardUnknown() {
	xxx_messageInfo_LakeObject.DiscardUnknown(m)
}

var xxx_messageInfo_LakeObject proto.InternalMessageInfo

func (m *LakeObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *LakeObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

func (m *LakeObject) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *LakeObject) GetVip() []*VipObject {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *LakeObject) GetBandwidthLimit() float32 {
	if m != nil {
		return m.BandwidthLimit
	}
	return 0
}

func (m *LakeObject) GetNodeLevel() string {
	if m != nil {
		return m.NodeLevel
	}
	return ""
}

func (m *LakeObject) GetServiceState() string {
	if m != nil {
		return m.ServiceState
	}
	return ""
}

func (m *LakeObject) GetConstructState() string {
	if m != nil {
		return m.ConstructState
	}
	return ""
}

func (m *LakeObject) GetConstructUpdatetime() string {
	if m != nil {
		return m.ConstructUpdatetime
	}
	return ""
}

func (m *LakeObject) GetRoom() []*ServerRoomObject {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *LakeObject) GetNodeCode() string {
	if m != nil {
		return m.NodeCode
	}
	return ""
}

// 关联关系对象
type AssociationObject struct {
	// 实例关联唯一标识
	BkObjAsstId string `protobuf:"bytes,1,opt,name=bk_obj_asst_id,json=bkObjAsstId,proto3" json:"bk_obj_asst_id,omitempty"`
	// 源实例ID
	BkInstId int32 `protobuf:"varint,2,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 源实例对象名称
	BkObjId string `protobuf:"bytes,3,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 目标实例ID
	BkAsstInstId int32 `protobuf:"varint,4,opt,name=bk_asst_inst_id,json=bkAsstInstId,proto3" json:"bk_asst_inst_id,omitempty"`
	// 目标对象名称
	BkAsstObjId string `protobuf:"bytes,5,opt,name=bk_asst_obj_id,json=bkAsstObjId,proto3" json:"bk_asst_obj_id,omitempty"`
	// 实例关联的id
	Id                   int32    `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssociationObject) Reset()         { *m = AssociationObject{} }
func (m *AssociationObject) String() string { return proto.CompactTextString(m) }
func (*AssociationObject) ProtoMessage()    {}
func (*AssociationObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{48}
}

func (m *AssociationObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociationObject.Unmarshal(m, b)
}
func (m *AssociationObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociationObject.Marshal(b, m, deterministic)
}
func (m *AssociationObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociationObject.Merge(m, src)
}
func (m *AssociationObject) XXX_Size() int {
	return xxx_messageInfo_AssociationObject.Size(m)
}
func (m *AssociationObject) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociationObject.DiscardUnknown(m)
}

var xxx_messageInfo_AssociationObject proto.InternalMessageInfo

func (m *AssociationObject) GetBkObjAsstId() string {
	if m != nil {
		return m.BkObjAsstId
	}
	return ""
}

func (m *AssociationObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *AssociationObject) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *AssociationObject) GetBkAsstInstId() int32 {
	if m != nil {
		return m.BkAsstInstId
	}
	return 0
}

func (m *AssociationObject) GetBkAsstObjId() string {
	if m != nil {
		return m.BkAsstObjId
	}
	return ""
}

func (m *AssociationObject) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 查找Lake请求
type SearchLakeRequest struct {
	// 节点ID(一个或多个，可为空)
	NodeId []int32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// 节点VIP(一个或多个，可为空)
	Vip []string `protobuf:"bytes,2,rep,name=vip,proto3" json:"vip,omitempty"`
	// 地区编码(一个或多个，可为空)
	AreaCode []string `protobuf:"bytes,3,rep,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`
	// 运营商编码(一个或多个，可为空)
	IspCode []string `protobuf:"bytes,4,rep,name=isp_code,json=ispCode,proto3" json:"isp_code,omitempty"`
	// 节点编码(一个或多个，可为空)
	NodeCode             []string `protobuf:"bytes,5,rep,name=node_code,json=nodeCode,proto3" json:"node_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLakeRequest) Reset()         { *m = SearchLakeRequest{} }
func (m *SearchLakeRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLakeRequest) ProtoMessage()    {}
func (*SearchLakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{49}
}

func (m *SearchLakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeRequest.Unmarshal(m, b)
}
func (m *SearchLakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeRequest.Marshal(b, m, deterministic)
}
func (m *SearchLakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeRequest.Merge(m, src)
}
func (m *SearchLakeRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLakeRequest.Size(m)
}
func (m *SearchLakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeRequest proto.InternalMessageInfo

func (m *SearchLakeRequest) GetNodeId() []int32 {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *SearchLakeRequest) GetVip() []string {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *SearchLakeRequest) GetAreaCode() []string {
	if m != nil {
		return m.AreaCode
	}
	return nil
}

func (m *SearchLakeRequest) GetIspCode() []string {
	if m != nil {
		return m.IspCode
	}
	return nil
}

func (m *SearchLakeRequest) GetNodeCode() []string {
	if m != nil {
		return m.NodeCode
	}
	return nil
}

// 查找Lake请求返回
type SearchLakeResponse struct {
	// 状态码
	Status *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 主机信息
	Lake                 []*LakeObject `protobuf:"bytes,3,rep,name=lake,proto3" json:"lake,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SearchLakeResponse) Reset()         { *m = SearchLakeResponse{} }
func (m *SearchLakeResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLakeResponse) ProtoMessage()    {}
func (*SearchLakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{50}
}

func (m *SearchLakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeResponse.Unmarshal(m, b)
}
func (m *SearchLakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeResponse.Marshal(b, m, deterministic)
}
func (m *SearchLakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeResponse.Merge(m, src)
}
func (m *SearchLakeResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLakeResponse.Size(m)
}
func (m *SearchLakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeResponse proto.InternalMessageInfo

func (m *SearchLakeResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchLakeResponse) GetLake() []*LakeObject {
	if m != nil {
		return m.Lake
	}
	return nil
}

// 机柜对象
type CabinetObject struct {
	// 实例ID
	BkInstId int32 `protobuf:"varint,1,opt,name=bk_inst_id,json=bkInstId,proto3" json:"bk_inst_id,omitempty"`
	// 实例名
	BkInstName           string   `protobuf:"bytes,2,opt,name=bk_inst_name,json=bkInstName,proto3" json:"bk_inst_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CabinetObject) Reset()         { *m = CabinetObject{} }
func (m *CabinetObject) String() string { return proto.CompactTextString(m) }
func (*CabinetObject) ProtoMessage()    {}
func (*CabinetObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{51}
}

func (m *CabinetObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CabinetObject.Unmarshal(m, b)
}
func (m *CabinetObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CabinetObject.Marshal(b, m, deterministic)
}
func (m *CabinetObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CabinetObject.Merge(m, src)
}
func (m *CabinetObject) XXX_Size() int {
	return xxx_messageInfo_CabinetObject.Size(m)
}
func (m *CabinetObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CabinetObject.DiscardUnknown(m)
}

var xxx_messageInfo_CabinetObject proto.InternalMessageInfo

func (m *CabinetObject) GetBkInstId() int32 {
	if m != nil {
		return m.BkInstId
	}
	return 0
}

func (m *CabinetObject) GetBkInstName() string {
	if m != nil {
		return m.BkInstName
	}
	return ""
}

// 查询lake下的主机列表的请求体
type SearchLakeHostRequest struct {
	// lake节点的名字列表
	LakeName []string `protobuf:"bytes,1,rep,name=lake_name,json=lakeName,proto3" json:"lake_name,omitempty"`
	// lake节点的nodeID列表
	NodeId []int32 `protobuf:"varint,2,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// lake节点的节点编码列表
	NodeCode []string `protobuf:"bytes,3,rep,name=node_code,json=nodeCode,proto3" json:"node_code,omitempty"`
	// 要查询的区域的地区层级
	AreaLevel            AreaLevel `protobuf:"varint,4,opt,name=area_level,json=areaLevel,proto3,enum=cmdb.AreaLevel" json:"area_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchLakeHostRequest) Reset()         { *m = SearchLakeHostRequest{} }
func (m *SearchLakeHostRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLakeHostRequest) ProtoMessage()    {}
func (*SearchLakeHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{52}
}

func (m *SearchLakeHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeHostRequest.Unmarshal(m, b)
}
func (m *SearchLakeHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeHostRequest.Marshal(b, m, deterministic)
}
func (m *SearchLakeHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeHostRequest.Merge(m, src)
}
func (m *SearchLakeHostRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLakeHostRequest.Size(m)
}
func (m *SearchLakeHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeHostRequest proto.InternalMessageInfo

func (m *SearchLakeHostRequest) GetLakeName() []string {
	if m != nil {
		return m.LakeName
	}
	return nil
}

func (m *SearchLakeHostRequest) GetNodeId() []int32 {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *SearchLakeHostRequest) GetNodeCode() []string {
	if m != nil {
		return m.NodeCode
	}
	return nil
}

func (m *SearchLakeHostRequest) GetAreaLevel() AreaLevel {
	if m != nil {
		return m.AreaLevel
	}
	return AreaLevel_NULL
}

// 查询lake下的主机列表的返回
type SearchLakeHostResponse struct {
	LakeHost []*LakeHost `protobuf:"bytes,1,rep,name=lake_host,json=lakeHost,proto3" json:"lake_host,omitempty"`
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchLakeHostResponse) Reset()         { *m = SearchLakeHostResponse{} }
func (m *SearchLakeHostResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLakeHostResponse) ProtoMessage()    {}
func (*SearchLakeHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{53}
}

func (m *SearchLakeHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeHostResponse.Unmarshal(m, b)
}
func (m *SearchLakeHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeHostResponse.Marshal(b, m, deterministic)
}
func (m *SearchLakeHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeHostResponse.Merge(m, src)
}
func (m *SearchLakeHostResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLakeHostResponse.Size(m)
}
func (m *SearchLakeHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeHostResponse proto.InternalMessageInfo

func (m *SearchLakeHostResponse) GetLakeHost() []*LakeHost {
	if m != nil {
		return m.LakeHost
	}
	return nil
}

func (m *SearchLakeHostResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// lake下的主机列表
type LakeHost struct {
	LakeObject           *LakeObject   `protobuf:"bytes,1,opt,name=lake_object,json=lakeObject,proto3" json:"lake_object,omitempty"`
	Host                 []*HostObject `protobuf:"bytes,2,rep,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LakeHost) Reset()         { *m = LakeHost{} }
func (m *LakeHost) String() string { return proto.CompactTextString(m) }
func (*LakeHost) ProtoMessage()    {}
func (*LakeHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{54}
}

func (m *LakeHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LakeHost.Unmarshal(m, b)
}
func (m *LakeHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LakeHost.Marshal(b, m, deterministic)
}
func (m *LakeHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LakeHost.Merge(m, src)
}
func (m *LakeHost) XXX_Size() int {
	return xxx_messageInfo_LakeHost.Size(m)
}
func (m *LakeHost) XXX_DiscardUnknown() {
	xxx_messageInfo_LakeHost.DiscardUnknown(m)
}

var xxx_messageInfo_LakeHost proto.InternalMessageInfo

func (m *LakeHost) GetLakeObject() *LakeObject {
	if m != nil {
		return m.LakeObject
	}
	return nil
}

func (m *LakeHost) GetHost() []*HostObject {
	if m != nil {
		return m.Host
	}
	return nil
}

// 通过IP获取节点的地区和位置信息的请求体
type SearchLakeAreaRequest struct {
	// ipv4,可传多个
	Ipv4 []string `protobuf:"bytes,1,rep,name=ipv4,proto3" json:"ipv4,omitempty"`
	// ipv6,可传多个
	Ipv6 []string `protobuf:"bytes,2,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
	// 要查询的区域的地区层级
	AreaLevel            AreaLevel `protobuf:"varint,3,opt,name=area_level,json=areaLevel,proto3,enum=cmdb.AreaLevel" json:"area_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchLakeAreaRequest) Reset()         { *m = SearchLakeAreaRequest{} }
func (m *SearchLakeAreaRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLakeAreaRequest) ProtoMessage()    {}
func (*SearchLakeAreaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{55}
}

func (m *SearchLakeAreaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeAreaRequest.Unmarshal(m, b)
}
func (m *SearchLakeAreaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeAreaRequest.Marshal(b, m, deterministic)
}
func (m *SearchLakeAreaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeAreaRequest.Merge(m, src)
}
func (m *SearchLakeAreaRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLakeAreaRequest.Size(m)
}
func (m *SearchLakeAreaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeAreaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeAreaRequest proto.InternalMessageInfo

func (m *SearchLakeAreaRequest) GetIpv4() []string {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *SearchLakeAreaRequest) GetIpv6() []string {
	if m != nil {
		return m.Ipv6
	}
	return nil
}

func (m *SearchLakeAreaRequest) GetAreaLevel() AreaLevel {
	if m != nil {
		return m.AreaLevel
	}
	return AreaLevel_NULL
}

// 通过IP获取节点的地区和位置信息的返回
type SearchLakeAreaResponse struct {
	LakeArea []*LakeAreaObject `protobuf:"bytes,1,rep,name=lake_area,json=lakeArea,proto3" json:"lake_area,omitempty"`
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchLakeAreaResponse) Reset()         { *m = SearchLakeAreaResponse{} }
func (m *SearchLakeAreaResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLakeAreaResponse) ProtoMessage()    {}
func (*SearchLakeAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{56}
}

func (m *SearchLakeAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLakeAreaResponse.Unmarshal(m, b)
}
func (m *SearchLakeAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLakeAreaResponse.Marshal(b, m, deterministic)
}
func (m *SearchLakeAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLakeAreaResponse.Merge(m, src)
}
func (m *SearchLakeAreaResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLakeAreaResponse.Size(m)
}
func (m *SearchLakeAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLakeAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLakeAreaResponse proto.InternalMessageInfo

func (m *SearchLakeAreaResponse) GetLakeArea() []*LakeAreaObject {
	if m != nil {
		return m.LakeArea
	}
	return nil
}

func (m *SearchLakeAreaResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 通过IP获取节点的地区和位置信息的返回的具体结构体
type LakeAreaObject struct {
	Ipv4 string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6 string `protobuf:"bytes,2,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	// 对应的lake节点信息,包括机房信息
	Lake []*LakeObject `protobuf:"bytes,3,rep,name=lake,proto3" json:"lake,omitempty"`
	// 主机的状态，有上线和下线两种
	HostState            string   `protobuf:"bytes,4,opt,name=host_state,json=hostState,proto3" json:"host_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LakeAreaObject) Reset()         { *m = LakeAreaObject{} }
func (m *LakeAreaObject) String() string { return proto.CompactTextString(m) }
func (*LakeAreaObject) ProtoMessage()    {}
func (*LakeAreaObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{57}
}

func (m *LakeAreaObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LakeAreaObject.Unmarshal(m, b)
}
func (m *LakeAreaObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LakeAreaObject.Marshal(b, m, deterministic)
}
func (m *LakeAreaObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LakeAreaObject.Merge(m, src)
}
func (m *LakeAreaObject) XXX_Size() int {
	return xxx_messageInfo_LakeAreaObject.Size(m)
}
func (m *LakeAreaObject) XXX_DiscardUnknown() {
	xxx_messageInfo_LakeAreaObject.DiscardUnknown(m)
}

var xxx_messageInfo_LakeAreaObject proto.InternalMessageInfo

func (m *LakeAreaObject) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *LakeAreaObject) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

func (m *LakeAreaObject) GetLake() []*LakeObject {
	if m != nil {
		return m.Lake
	}
	return nil
}

func (m *LakeAreaObject) GetHostState() string {
	if m != nil {
		return m.HostState
	}
	return ""
}

type ImportAssetRequest struct {
	// 导入资产实体类型
	ImportType string `protobuf:"bytes,1,opt,name=import_type,json=importType,proto3" json:"import_type,omitempty"`
	// xlsx文件下载路径
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// xlsx文件md5
	Md5 string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	// 用户上传xlsx文件的文件名
	Filename             string   `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportAssetRequest) Reset()         { *m = ImportAssetRequest{} }
func (m *ImportAssetRequest) String() string { return proto.CompactTextString(m) }
func (*ImportAssetRequest) ProtoMessage()    {}
func (*ImportAssetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{58}
}

func (m *ImportAssetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportAssetRequest.Unmarshal(m, b)
}
func (m *ImportAssetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportAssetRequest.Marshal(b, m, deterministic)
}
func (m *ImportAssetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportAssetRequest.Merge(m, src)
}
func (m *ImportAssetRequest) XXX_Size() int {
	return xxx_messageInfo_ImportAssetRequest.Size(m)
}
func (m *ImportAssetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportAssetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportAssetRequest proto.InternalMessageInfo

func (m *ImportAssetRequest) GetImportType() string {
	if m != nil {
		return m.ImportType
	}
	return ""
}

func (m *ImportAssetRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImportAssetRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImportAssetRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ImportAssetResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportAssetResponse) Reset()         { *m = ImportAssetResponse{} }
func (m *ImportAssetResponse) String() string { return proto.CompactTextString(m) }
func (*ImportAssetResponse) ProtoMessage()    {}
func (*ImportAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{59}
}

func (m *ImportAssetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportAssetResponse.Unmarshal(m, b)
}
func (m *ImportAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportAssetResponse.Marshal(b, m, deterministic)
}
func (m *ImportAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportAssetResponse.Merge(m, src)
}
func (m *ImportAssetResponse) XXX_Size() int {
	return xxx_messageInfo_ImportAssetResponse.Size(m)
}
func (m *ImportAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportAssetResponse proto.InternalMessageInfo

func (m *ImportAssetResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 导入交维表审批结果请求
type ImportReviewRequest struct {
	// 导入记录id
	ImportId int32 `protobuf:"varint,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	// 指定审批结果，只处理通过，不通过和撤销
	ImportStatus ImportStatus `protobuf:"varint,2,opt,name=import_status,json=importStatus,proto3,enum=cmdb.ImportStatus" json:"import_status,omitempty"`
	// 操作描述
	ReviewNote           string   `protobuf:"bytes,3,opt,name=review_note,json=reviewNote,proto3" json:"review_note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportReviewRequest) Reset()         { *m = ImportReviewRequest{} }
func (m *ImportReviewRequest) String() string { return proto.CompactTextString(m) }
func (*ImportReviewRequest) ProtoMessage()    {}
func (*ImportReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{60}
}

func (m *ImportReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportReviewRequest.Unmarshal(m, b)
}
func (m *ImportReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportReviewRequest.Marshal(b, m, deterministic)
}
func (m *ImportReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportReviewRequest.Merge(m, src)
}
func (m *ImportReviewRequest) XXX_Size() int {
	return xxx_messageInfo_ImportReviewRequest.Size(m)
}
func (m *ImportReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportReviewRequest proto.InternalMessageInfo

func (m *ImportReviewRequest) GetImportId() int32 {
	if m != nil {
		return m.ImportId
	}
	return 0
}

func (m *ImportReviewRequest) GetImportStatus() ImportStatus {
	if m != nil {
		return m.ImportStatus
	}
	return ImportStatus_IMPORTING
}

func (m *ImportReviewRequest) GetReviewNote() string {
	if m != nil {
		return m.ReviewNote
	}
	return ""
}

// 执行审批结果返回
type ImportReviewResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportReviewResponse) Reset()         { *m = ImportReviewResponse{} }
func (m *ImportReviewResponse) String() string { return proto.CompactTextString(m) }
func (*ImportReviewResponse) ProtoMessage()    {}
func (*ImportReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{61}
}

func (m *ImportReviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportReviewResponse.Unmarshal(m, b)
}
func (m *ImportReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportReviewResponse.Marshal(b, m, deterministic)
}
func (m *ImportReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportReviewResponse.Merge(m, src)
}
func (m *ImportReviewResponse) XXX_Size() int {
	return xxx_messageInfo_ImportReviewResponse.Size(m)
}
func (m *ImportReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportReviewResponse proto.InternalMessageInfo

func (m *ImportReviewResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 查看导入的实体信息列表请求
type ImportDetailRequest struct {
	// 导入记录id
	ImportId int32 `protobuf:"varint,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	// 指定查看实体类型
	BkObjId string `protobuf:"bytes,2,opt,name=bk_obj_id,json=bkObjId,proto3" json:"bk_obj_id,omitempty"`
	// 分页信息
	Paging               *common.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ImportDetailRequest) Reset()         { *m = ImportDetailRequest{} }
func (m *ImportDetailRequest) String() string { return proto.CompactTextString(m) }
func (*ImportDetailRequest) ProtoMessage()    {}
func (*ImportDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{62}
}

func (m *ImportDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDetailRequest.Unmarshal(m, b)
}
func (m *ImportDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDetailRequest.Marshal(b, m, deterministic)
}
func (m *ImportDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDetailRequest.Merge(m, src)
}
func (m *ImportDetailRequest) XXX_Size() int {
	return xxx_messageInfo_ImportDetailRequest.Size(m)
}
func (m *ImportDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDetailRequest proto.InternalMessageInfo

func (m *ImportDetailRequest) GetImportId() int32 {
	if m != nil {
		return m.ImportId
	}
	return 0
}

func (m *ImportDetailRequest) GetBkObjId() string {
	if m != nil {
		return m.BkObjId
	}
	return ""
}

func (m *ImportDetailRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

// 查看导入的实体信息列表响应
type ImportDetailResponse struct {
	// 实体信息列表, map<bk_obj_id, 可以转为map的字符串实体信息>
	InstInfo map[string]string `protobuf:"bytes,1,rep,name=inst_info,json=instInfo,proto3" json:"inst_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ImportDetailResponse) Reset()         { *m = ImportDetailResponse{} }
func (m *ImportDetailResponse) String() string { return proto.CompactTextString(m) }
func (*ImportDetailResponse) ProtoMessage()    {}
func (*ImportDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{63}
}

func (m *ImportDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDetailResponse.Unmarshal(m, b)
}
func (m *ImportDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDetailResponse.Marshal(b, m, deterministic)
}
func (m *ImportDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDetailResponse.Merge(m, src)
}
func (m *ImportDetailResponse) XXX_Size() int {
	return xxx_messageInfo_ImportDetailResponse.Size(m)
}
func (m *ImportDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDetailResponse proto.InternalMessageInfo

func (m *ImportDetailResponse) GetInstInfo() map[string]string {
	if m != nil {
		return m.InstInfo
	}
	return nil
}

func (m *ImportDetailResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ImportDetailResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 按level查询lake节点下主机列表请求
type SearchLevelHostRequest struct {
	// 指定level：0-全部 1-全国中心 2-区域中心 3-省边缘 4-地市边缘 5-区县边缘
	Level LakeNodeLevel `protobuf:"varint,1,opt,name=level,proto3,enum=cmdb.LakeNodeLevel" json:"level,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 默认返回主机的ipv4地址，可以选择返回ipv6地址
	Ipv6                 bool     `protobuf:"varint,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLevelHostRequest) Reset()         { *m = SearchLevelHostRequest{} }
func (m *SearchLevelHostRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLevelHostRequest) ProtoMessage()    {}
func (*SearchLevelHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{64}
}

func (m *SearchLevelHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLevelHostRequest.Unmarshal(m, b)
}
func (m *SearchLevelHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLevelHostRequest.Marshal(b, m, deterministic)
}
func (m *SearchLevelHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLevelHostRequest.Merge(m, src)
}
func (m *SearchLevelHostRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLevelHostRequest.Size(m)
}
func (m *SearchLevelHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLevelHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLevelHostRequest proto.InternalMessageInfo

func (m *SearchLevelHostRequest) GetLevel() LakeNodeLevel {
	if m != nil {
		return m.Level
	}
	return LakeNodeLevel_ALL
}

func (m *SearchLevelHostRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *SearchLevelHostRequest) GetIpv6() bool {
	if m != nil {
		return m.Ipv6
	}
	return false
}

// 按level查询lake节点下主机列表响应
type SearchLevelHostResponse struct {
	// LakeNodeLevel 下的主机ip列表
	Result map[string]*LevelHost `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchLevelHostResponse) Reset()         { *m = SearchLevelHostResponse{} }
func (m *SearchLevelHostResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLevelHostResponse) ProtoMessage()    {}
func (*SearchLevelHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{65}
}

func (m *SearchLevelHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLevelHostResponse.Unmarshal(m, b)
}
func (m *SearchLevelHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLevelHostResponse.Marshal(b, m, deterministic)
}
func (m *SearchLevelHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLevelHostResponse.Merge(m, src)
}
func (m *SearchLevelHostResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLevelHostResponse.Size(m)
}
func (m *SearchLevelHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLevelHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLevelHostResponse proto.InternalMessageInfo

func (m *SearchLevelHostResponse) GetResult() map[string]*LevelHost {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SearchLevelHostResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *SearchLevelHostResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// level下的主机ip列表
type LevelHost struct {
	// LakeNodeLevel 节点层级
	Level LakeNodeLevel `protobuf:"varint,1,opt,name=level,proto3,enum=cmdb.LakeNodeLevel" json:"level,omitempty"`
	// 对应的ip列表
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LevelHost) Reset()         { *m = LevelHost{} }
func (m *LevelHost) String() string { return proto.CompactTextString(m) }
func (*LevelHost) ProtoMessage()    {}
func (*LevelHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{66}
}

func (m *LevelHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LevelHost.Unmarshal(m, b)
}
func (m *LevelHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LevelHost.Marshal(b, m, deterministic)
}
func (m *LevelHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LevelHost.Merge(m, src)
}
func (m *LevelHost) XXX_Size() int {
	return xxx_messageInfo_LevelHost.Size(m)
}
func (m *LevelHost) XXX_DiscardUnknown() {
	xxx_messageInfo_LevelHost.DiscardUnknown(m)
}

var xxx_messageInfo_LevelHost proto.InternalMessageInfo

func (m *LevelHost) GetLevel() LakeNodeLevel {
	if m != nil {
		return m.Level
	}
	return LakeNodeLevel_ALL
}

func (m *LevelHost) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// 修改lake节点上下线状态的请求体
type UpdateLakeStateRequest struct {
	// lake节点的节点编码列表
	NodeCode []string `protobuf:"bytes,1,rep,name=node_code,json=nodeCode,proto3" json:"node_code,omitempty"`
	// lake节点的节点建设状态
	ConstructState       OnlineState `protobuf:"varint,2,opt,name=construct_state,json=constructState,proto3,enum=cmdb.OnlineState" json:"construct_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateLakeStateRequest) Reset()         { *m = UpdateLakeStateRequest{} }
func (m *UpdateLakeStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLakeStateRequest) ProtoMessage()    {}
func (*UpdateLakeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{67}
}

func (m *UpdateLakeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLakeStateRequest.Unmarshal(m, b)
}
func (m *UpdateLakeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLakeStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLakeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLakeStateRequest.Merge(m, src)
}
func (m *UpdateLakeStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLakeStateRequest.Size(m)
}
func (m *UpdateLakeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLakeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLakeStateRequest proto.InternalMessageInfo

func (m *UpdateLakeStateRequest) GetNodeCode() []string {
	if m != nil {
		return m.NodeCode
	}
	return nil
}

func (m *UpdateLakeStateRequest) GetConstructState() OnlineState {
	if m != nil {
		return m.ConstructState
	}
	return OnlineState_UNDEFINEDSTATE
}

type UpdateLakeStateResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateLakeStateResponse) Reset()         { *m = UpdateLakeStateResponse{} }
func (m *UpdateLakeStateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateLakeStateResponse) ProtoMessage()    {}
func (*UpdateLakeStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{68}
}

func (m *UpdateLakeStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLakeStateResponse.Unmarshal(m, b)
}
func (m *UpdateLakeStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLakeStateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateLakeStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLakeStateResponse.Merge(m, src)
}
func (m *UpdateLakeStateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateLakeStateResponse.Size(m)
}
func (m *UpdateLakeStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLakeStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLakeStateResponse proto.InternalMessageInfo

func (m *UpdateLakeStateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 修改主机上下线状态的请求体
type UpdateHostStateRequest struct {
	// ipv4,可传多个
	Ipv4 []string `protobuf:"bytes,1,rep,name=ipv4,proto3" json:"ipv4,omitempty"`
	// ipv6,可传多个
	Ipv6 []string `protobuf:"bytes,2,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
	// 主机上下线状态
	State                OnlineState `protobuf:"varint,3,opt,name=state,proto3,enum=cmdb.OnlineState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateHostStateRequest) Reset()         { *m = UpdateHostStateRequest{} }
func (m *UpdateHostStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHostStateRequest) ProtoMessage()    {}
func (*UpdateHostStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{69}
}

func (m *UpdateHostStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHostStateRequest.Unmarshal(m, b)
}
func (m *UpdateHostStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHostStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHostStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHostStateRequest.Merge(m, src)
}
func (m *UpdateHostStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHostStateRequest.Size(m)
}
func (m *UpdateHostStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHostStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHostStateRequest proto.InternalMessageInfo

func (m *UpdateHostStateRequest) GetIpv4() []string {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *UpdateHostStateRequest) GetIpv6() []string {
	if m != nil {
		return m.Ipv6
	}
	return nil
}

func (m *UpdateHostStateRequest) GetState() OnlineState {
	if m != nil {
		return m.State
	}
	return OnlineState_UNDEFINEDSTATE
}

type UpdateHostStateResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateHostStateResponse) Reset()         { *m = UpdateHostStateResponse{} }
func (m *UpdateHostStateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateHostStateResponse) ProtoMessage()    {}
func (*UpdateHostStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{70}
}

func (m *UpdateHostStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHostStateResponse.Unmarshal(m, b)
}
func (m *UpdateHostStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHostStateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateHostStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHostStateResponse.Merge(m, src)
}
func (m *UpdateHostStateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateHostStateResponse.Size(m)
}
func (m *UpdateHostStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHostStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHostStateResponse proto.InternalMessageInfo

func (m *UpdateHostStateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 修改VIP可用状态的请求体
type UpdateVipStateRequest struct {
	// ip地址
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// 状态
	State OnlineState `protobuf:"varint,2,opt,name=state,proto3,enum=cmdb.OnlineState" json:"state,omitempty"`
	// 默认接收ipv4地址，可以选择ipv6地址
	Ipv6                 bool     `protobuf:"varint,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVipStateRequest) Reset()         { *m = UpdateVipStateRequest{} }
func (m *UpdateVipStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVipStateRequest) ProtoMessage()    {}
func (*UpdateVipStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{71}
}

func (m *UpdateVipStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVipStateRequest.Unmarshal(m, b)
}
func (m *UpdateVipStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVipStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVipStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVipStateRequest.Merge(m, src)
}
func (m *UpdateVipStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVipStateRequest.Size(m)
}
func (m *UpdateVipStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVipStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVipStateRequest proto.InternalMessageInfo

func (m *UpdateVipStateRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UpdateVipStateRequest) GetState() OnlineState {
	if m != nil {
		return m.State
	}
	return OnlineState_UNDEFINEDSTATE
}

func (m *UpdateVipStateRequest) GetIpv6() bool {
	if m != nil {
		return m.Ipv6
	}
	return false
}

type UpdateVipStateResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateVipStateResponse) Reset()         { *m = UpdateVipStateResponse{} }
func (m *UpdateVipStateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVipStateResponse) ProtoMessage()    {}
func (*UpdateVipStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{72}
}

func (m *UpdateVipStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVipStateResponse.Unmarshal(m, b)
}
func (m *UpdateVipStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVipStateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVipStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVipStateResponse.Merge(m, src)
}
func (m *UpdateVipStateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVipStateResponse.Size(m)
}
func (m *UpdateVipStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVipStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVipStateResponse proto.InternalMessageInfo

func (m *UpdateVipStateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 查询全部模块请求
type SearchModuleListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchModuleListRequest) Reset()         { *m = SearchModuleListRequest{} }
func (m *SearchModuleListRequest) String() string { return proto.CompactTextString(m) }
func (*SearchModuleListRequest) ProtoMessage()    {}
func (*SearchModuleListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{73}
}

func (m *SearchModuleListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleListRequest.Unmarshal(m, b)
}
func (m *SearchModuleListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleListRequest.Marshal(b, m, deterministic)
}
func (m *SearchModuleListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleListRequest.Merge(m, src)
}
func (m *SearchModuleListRequest) XXX_Size() int {
	return xxx_messageInfo_SearchModuleListRequest.Size(m)
}
func (m *SearchModuleListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleListRequest proto.InternalMessageInfo

// 查询全部模块返回
type SearchModuleListResponse struct {
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []string               `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchModuleListResponse) Reset()         { *m = SearchModuleListResponse{} }
func (m *SearchModuleListResponse) String() string { return proto.CompactTextString(m) }
func (*SearchModuleListResponse) ProtoMessage()    {}
func (*SearchModuleListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{74}
}

func (m *SearchModuleListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleListResponse.Unmarshal(m, b)
}
func (m *SearchModuleListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleListResponse.Marshal(b, m, deterministic)
}
func (m *SearchModuleListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleListResponse.Merge(m, src)
}
func (m *SearchModuleListResponse) XXX_Size() int {
	return xxx_messageInfo_SearchModuleListResponse.Size(m)
}
func (m *SearchModuleListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleListResponse proto.InternalMessageInfo

func (m *SearchModuleListResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchModuleListResponse) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

// 查询指定模块名下的全部主机请求
type SearchModuleHostRequest struct {
	ModuleName           string   `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchModuleHostRequest) Reset()         { *m = SearchModuleHostRequest{} }
func (m *SearchModuleHostRequest) String() string { return proto.CompactTextString(m) }
func (*SearchModuleHostRequest) ProtoMessage()    {}
func (*SearchModuleHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{75}
}

func (m *SearchModuleHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleHostRequest.Unmarshal(m, b)
}
func (m *SearchModuleHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleHostRequest.Marshal(b, m, deterministic)
}
func (m *SearchModuleHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleHostRequest.Merge(m, src)
}
func (m *SearchModuleHostRequest) XXX_Size() int {
	return xxx_messageInfo_SearchModuleHostRequest.Size(m)
}
func (m *SearchModuleHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleHostRequest proto.InternalMessageInfo

func (m *SearchModuleHostRequest) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

// 查询指定模块名下的全部主机请求返回，[{业务模块名，[ip]}]
type SearchModuleHostResponse struct {
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []*ModuleHost          `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchModuleHostResponse) Reset()         { *m = SearchModuleHostResponse{} }
func (m *SearchModuleHostResponse) String() string { return proto.CompactTextString(m) }
func (*SearchModuleHostResponse) ProtoMessage()    {}
func (*SearchModuleHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{76}
}

func (m *SearchModuleHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchModuleHostResponse.Unmarshal(m, b)
}
func (m *SearchModuleHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchModuleHostResponse.Marshal(b, m, deterministic)
}
func (m *SearchModuleHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchModuleHostResponse.Merge(m, src)
}
func (m *SearchModuleHostResponse) XXX_Size() int {
	return xxx_messageInfo_SearchModuleHostResponse.Size(m)
}
func (m *SearchModuleHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchModuleHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchModuleHostResponse proto.InternalMessageInfo

func (m *SearchModuleHostResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchModuleHostResponse) GetData() []*ModuleHost {
	if m != nil {
		return m.Data
	}
	return nil
}

// 模块下主机ip列表，{业务模块名，[ip]}
type ModuleHost struct {
	// 业务模块名，biz##set##module
	ModuleName string `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	// ip列表
	Value                []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleHost) Reset()         { *m = ModuleHost{} }
func (m *ModuleHost) String() string { return proto.CompactTextString(m) }
func (*ModuleHost) ProtoMessage()    {}
func (*ModuleHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e1f4eaffd389ae, []int{77}
}

func (m *ModuleHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleHost.Unmarshal(m, b)
}
func (m *ModuleHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleHost.Marshal(b, m, deterministic)
}
func (m *ModuleHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleHost.Merge(m, src)
}
func (m *ModuleHost) XXX_Size() int {
	return xxx_messageInfo_ModuleHost.Size(m)
}
func (m *ModuleHost) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleHost.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleHost proto.InternalMessageInfo

func (m *ModuleHost) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *ModuleHost) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("cmdb.InstType", InstType_name, InstType_value)
	proto.RegisterEnum("cmdb.ImportStatus", ImportStatus_name, ImportStatus_value)
	proto.RegisterEnum("cmdb.ImportType", ImportType_name, ImportType_value)
	proto.RegisterEnum("cmdb.ServerPowerState", ServerPowerState_name, ServerPowerState_value)
	proto.RegisterEnum("cmdb.ServerInstallState", ServerInstallState_name, ServerInstallState_value)
	proto.RegisterEnum("cmdb.LakeNodeLevel", LakeNodeLevel_name, LakeNodeLevel_value)
	proto.RegisterEnum("cmdb.AreaLevel", AreaLevel_name, AreaLevel_value)
	proto.RegisterEnum("cmdb.OnlineState", OnlineState_name, OnlineState_value)
	proto.RegisterType((*SearchInstRequest)(nil), "cmdb.SearchInstRequest")
	proto.RegisterType((*SearchInstResponse)(nil), "cmdb.SearchInstResponse")
	proto.RegisterType((*UpdateInstRequest)(nil), "cmdb.UpdateInstRequest")
	proto.RegisterType((*UpdateInstResponse)(nil), "cmdb.UpdateInstResponse")
	proto.RegisterType((*TopologyObject)(nil), "cmdb.TopologyObject")
	proto.RegisterType((*InstanceTopologyRequest)(nil), "cmdb.InstanceTopologyRequest")
	proto.RegisterType((*InstanceTopologyResponse)(nil), "cmdb.InstanceTopologyResponse")
	proto.RegisterType((*HostCloudInfo)(nil), "cmdb.HostCloudInfo")
	proto.RegisterType((*HostObject)(nil), "cmdb.HostObject")
	proto.RegisterType((*ModuleObject)(nil), "cmdb.ModuleObject")
	proto.RegisterType((*SetObject)(nil), "cmdb.SetObject")
	proto.RegisterType((*ZoneObject)(nil), "cmdb.ZoneObject")
	proto.RegisterType((*BizObject)(nil), "cmdb.BizObject")
	proto.RegisterType((*CommonObject)(nil), "cmdb.CommonObject")
	proto.RegisterType((*CreateAssociationRequest)(nil), "cmdb.CreateAssociationRequest")
	proto.RegisterType((*HostInfoObject)(nil), "cmdb.HostInfoObject")
	proto.RegisterType((*SearchHostRequest)(nil), "cmdb.SearchHostRequest")
	proto.RegisterType((*SearchHostResponse)(nil), "cmdb.SearchHostResponse")
	proto.RegisterType((*ImportCrossTableRequest)(nil), "cmdb.ImportCrossTableRequest")
	proto.RegisterType((*ImportCrossTableResponse)(nil), "cmdb.ImportCrossTableResponse")
	proto.RegisterType((*ImportHostRequest)(nil), "cmdb.ImportHostRequest")
	proto.RegisterType((*ImportHostResponse)(nil), "cmdb.ImportHostResponse")
	proto.RegisterType((*ImportServerRequest)(nil), "cmdb.ImportServerRequest")
	proto.RegisterType((*ImportServerResponse)(nil), "cmdb.ImportServerResponse")
	proto.RegisterType((*ChooseHostRequest)(nil), "cmdb.ChooseHostRequest")
	proto.RegisterType((*Server)(nil), "cmdb.Server")
	proto.RegisterType((*ChooseServerRequest)(nil), "cmdb.ChooseServerRequest")
	proto.RegisterType((*ChooseServerCompareRequest)(nil), "cmdb.ChooseServerCompareRequest")
	proto.RegisterType((*ImportSwitchRequest)(nil), "cmdb.ImportSwitchRequest")
	proto.RegisterType((*ImportSwitchResponse)(nil), "cmdb.ImportSwitchResponse")
	proto.RegisterType((*ImportLakeRequest)(nil), "cmdb.ImportLakeRequest")
	proto.RegisterType((*ImportLakeResponse)(nil), "cmdb.ImportLakeResponse")
	proto.RegisterType((*RoomObject)(nil), "cmdb.RoomObject")
	proto.RegisterType((*RoomTopologyRequest)(nil), "cmdb.RoomTopologyRequest")
	proto.RegisterType((*RoomTopologyResponse)(nil), "cmdb.RoomTopologyResponse")
	proto.RegisterType((*ServerObject)(nil), "cmdb.ServerObject")
	proto.RegisterType((*ServerListRequest)(nil), "cmdb.ServerListRequest")
	proto.RegisterType((*ServerListResponse)(nil), "cmdb.ServerListResponse")
	proto.RegisterType((*SearchModuleRequest)(nil), "cmdb.SearchModuleRequest")
	proto.RegisterType((*SearchModuleResponse)(nil), "cmdb.SearchModuleResponse")
	proto.RegisterType((*ImportHistoryObject)(nil), "cmdb.ImportHistoryObject")
	proto.RegisterType((*ImportHistoryRequest)(nil), "cmdb.ImportHistoryRequest")
	proto.RegisterType((*ImportHistoryResponse)(nil), "cmdb.ImportHistoryResponse")
	proto.RegisterType((*AreaObject)(nil), "cmdb.AreaObject")
	proto.RegisterType((*IspObject)(nil), "cmdb.IspObject")
	proto.RegisterType((*VipObject)(nil), "cmdb.VipObject")
	proto.RegisterType((*ServerRoomObject)(nil), "cmdb.ServerRoomObject")
	proto.RegisterType((*LakeObject)(nil), "cmdb.LakeObject")
	proto.RegisterType((*AssociationObject)(nil), "cmdb.AssociationObject")
	proto.RegisterType((*SearchLakeRequest)(nil), "cmdb.SearchLakeRequest")
	proto.RegisterType((*SearchLakeResponse)(nil), "cmdb.SearchLakeResponse")
	proto.RegisterType((*CabinetObject)(nil), "cmdb.CabinetObject")
	proto.RegisterType((*SearchLakeHostRequest)(nil), "cmdb.SearchLakeHostRequest")
	proto.RegisterType((*SearchLakeHostResponse)(nil), "cmdb.SearchLakeHostResponse")
	proto.RegisterType((*LakeHost)(nil), "cmdb.LakeHost")
	proto.RegisterType((*SearchLakeAreaRequest)(nil), "cmdb.SearchLakeAreaRequest")
	proto.RegisterType((*SearchLakeAreaResponse)(nil), "cmdb.SearchLakeAreaResponse")
	proto.RegisterType((*LakeAreaObject)(nil), "cmdb.LakeAreaObject")
	proto.RegisterType((*ImportAssetRequest)(nil), "cmdb.ImportAssetRequest")
	proto.RegisterType((*ImportAssetResponse)(nil), "cmdb.ImportAssetResponse")
	proto.RegisterType((*ImportReviewRequest)(nil), "cmdb.ImportReviewRequest")
	proto.RegisterType((*ImportReviewResponse)(nil), "cmdb.ImportReviewResponse")
	proto.RegisterType((*ImportDetailRequest)(nil), "cmdb.ImportDetailRequest")
	proto.RegisterType((*ImportDetailResponse)(nil), "cmdb.ImportDetailResponse")
	proto.RegisterMapType((map[string]string)(nil), "cmdb.ImportDetailResponse.InstInfoEntry")
	proto.RegisterType((*SearchLevelHostRequest)(nil), "cmdb.SearchLevelHostRequest")
	proto.RegisterType((*SearchLevelHostResponse)(nil), "cmdb.SearchLevelHostResponse")
	proto.RegisterMapType((map[string]*LevelHost)(nil), "cmdb.SearchLevelHostResponse.ResultEntry")
	proto.RegisterType((*LevelHost)(nil), "cmdb.LevelHost")
	proto.RegisterType((*UpdateLakeStateRequest)(nil), "cmdb.UpdateLakeStateRequest")
	proto.RegisterType((*UpdateLakeStateResponse)(nil), "cmdb.UpdateLakeStateResponse")
	proto.RegisterType((*UpdateHostStateRequest)(nil), "cmdb.UpdateHostStateRequest")
	proto.RegisterType((*UpdateHostStateResponse)(nil), "cmdb.UpdateHostStateResponse")
	proto.RegisterType((*UpdateVipStateRequest)(nil), "cmdb.UpdateVipStateRequest")
	proto.RegisterType((*UpdateVipStateResponse)(nil), "cmdb.UpdateVipStateResponse")
	proto.RegisterType((*SearchModuleListRequest)(nil), "cmdb.SearchModuleListRequest")
	proto.RegisterType((*SearchModuleListResponse)(nil), "cmdb.SearchModuleListResponse")
	proto.RegisterType((*SearchModuleHostRequest)(nil), "cmdb.SearchModuleHostRequest")
	proto.RegisterType((*SearchModuleHostResponse)(nil), "cmdb.SearchModuleHostResponse")
	proto.RegisterType((*ModuleHost)(nil), "cmdb.ModuleHost")
}

func init() { proto.RegisterFile("cmdb/cmdb.proto", fileDescriptor_02e1f4eaffd389ae) }

var fileDescriptor_02e1f4eaffd389ae = []byte{
	// 4838 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x3b, 0xef, 0x6f, 0x1b, 0x47,
	0x76, 0x5e, 0x92, 0xa2, 0xc4, 0x47, 0x8a, 0xa2, 0x56, 0xb2, 0xb5, 0xa2, 0x6c, 0xc9, 0x5e, 0x3b,
	0x89, 0xa3, 0xbb, 0x48, 0x17, 0x27, 0xf1, 0x5d, 0x5d, 0x34, 0x85, 0x44, 0xd1, 0x31, 0x73, 0x32,
	0xa9, 0x52, 0xb4, 0xd3, 0x3b, 0x14, 0x65, 0xf7, 0x97, 0xa4, 0x35, 0xc9, 0xdd, 0xcd, 0xee, 0x52,
	0xba, 0xa8, 0x2d, 0x5a, 0xf4, 0xae, 0x1f, 0xd3, 0x06, 0xb9, 0x1e, 0x8a, 0x06, 0xbd, 0xa2, 0x57,
	0xb4, 0xc0, 0xb5, 0xe8, 0xaf, 0x0f, 0x45, 0x71, 0xb8, 0x6b, 0x3e, 0xf5, 0x6b, 0x51, 0xa0, 0xe9,
	0xb7, 0x7e, 0x31, 0x60, 0xc4, 0xc9, 0xf5, 0x6b, 0xff, 0x82, 0x62, 0xde, 0xcc, 0xec, 0xce, 0xae,
	0x28, 0x45, 0xd6, 0xc9, 0xf9, 0x22, 0xed, 0xbc, 0xf7, 0x66, 0xde, 0x8f, 0x99, 0x79, 0xf3, 0xde,
	0x9b, 0x21, 0x4c, 0x19, 0x03, 0x53, 0x5f, 0x25, 0x7f, 0x56, 0x3c, 0xdf, 0x0d, 0x5d, 0x39, 0x47,
	0xbe, 0xab, 0x15, 0xc3, 0x1d, 0x0c, 0x5c, 0x67, 0x55, 0xf3, 0x6c, 0x0a, 0xaf, 0x4e, 0x33, 0xc8,
	0x30, 0xb0, 0x7c, 0x06, 0xba, 0xbc, 0xeb, 0xba, 0xbb, 0x7d, 0x8b, 0x10, 0xad, 0x6a, 0x8e, 0xe3,
	0x86, 0x5a, 0x68, 0xbb, 0x4e, 0xc0, 0xb0, 0x5f, 0xc5, 0x7f, 0xc6, 0x2b, 0xbb, 0x96, 0xf3, 0x4a,
	0x70, 0xa0, 0xed, 0xee, 0x5a, 0xfe, 0xaa, 0xeb, 0x21, 0xc5, 0x08, 0xea, 0xdb, 0xbb, 0x76, 0xb8,
	0x37, 0xd4, 0x57, 0x0c, 0x77, 0xb0, 0x3a, 0x38, 0xb0, 0xc3, 0x9e, 0x7b, 0xb0, 0xba, 0xeb, 0xbe,
	0x82, 0xc8, 0x57, 0xf6, 0xb5, 0xbe, 0x6d, 0x6a, 0xa1, 0xeb, 0x07, 0xab, 0xd1, 0x27, 0xeb, 0xb7,
	0xc4, 0x64, 0xc0, 0x96, 0x3e, 0xdc, 0x59, 0x0d, 0xed, 0x81, 0x15, 0x84, 0xda, 0xc0, 0xa3, 0x04,
	0xea, 0x1f, 0x49, 0x30, 0xbd, 0x6d, 0x69, 0xbe, 0xb1, 0xd7, 0x70, 0x82, 0xb0, 0x6d, 0xbd, 0x3b,
	0xb4, 0x82, 0x50, 0x5e, 0x85, 0x62, 0x80, 0xc0, 0x6e, 0xf8, 0x9e, 0x67, 0x29, 0xd2, 0x55, 0xe9,
	0x66, 0xf9, 0x56, 0x79, 0x05, 0xed, 0x40, 0xe8, 0x3a, 0xef, 0x79, 0x56, 0x1b, 0x28, 0x09, 0xf9,
	0x96, 0x2f, 0x41, 0x7e, 0xc7, 0xb6, 0xfa, 0x66, 0xa0, 0x64, 0xae, 0x4a, 0x37, 0x0b, 0x6d, 0xd6,
	0x92, 0x2f, 0x43, 0xc1, 0x70, 0x1d, 0xd3, 0x26, 0xba, 0x28, 0x59, 0x44, 0xc5, 0x00, 0x59, 0x86,
	0x9c, 0xa7, 0xed, 0x5a, 0x4a, 0x0e, 0x11, 0xf8, 0xad, 0xbe, 0x2f, 0x81, 0x2c, 0x0a, 0x14, 0x78,
	0xae, 0x13, 0x58, 0xf2, 0x52, 0x24, 0x91, 0xed, 0x04, 0x21, 0x4a, 0x54, 0xe0, 0x12, 0x10, 0x42,
	0xf9, 0x45, 0xc8, 0x7b, 0xda, 0xae, 0xed, 0xec, 0xa2, 0x04, 0x45, 0x22, 0x2d, 0xce, 0xc8, 0xca,
	0x16, 0x42, 0xdb, 0x0c, 0x2b, 0xaf, 0x40, 0x3e, 0x08, 0xb5, 0x70, 0x18, 0xa0, 0x38, 0xc5, 0x5b,
	0x97, 0x38, 0x1d, 0x67, 0xb5, 0x8d, 0xd8, 0x36, 0xa3, 0x52, 0xbf, 0x2b, 0xc1, 0xf4, 0x03, 0xcf,
	0xd4, 0x42, 0x2b, 0x65, 0xa0, 0x21, 0x02, 0x4f, 0x34, 0x10, 0x25, 0x41, 0x03, 0x5d, 0x06, 0xd0,
	0x7b, 0x28, 0x7b, 0xd7, 0x36, 0x51, 0xc4, 0xb1, 0xf6, 0x84, 0xde, 0x23, 0xb4, 0x0d, 0x93, 0x68,
	0xc7, 0x86, 0x43, 0xed, 0xa8, 0xa1, 0x58, 0x77, 0x42, 0xa2, 0x6e, 0x80, 0x2c, 0x0a, 0xc1, 0x8c,
	0x12, 0xeb, 0x22, 0x9d, 0x4a, 0x97, 0xff, 0x90, 0xa0, 0xdc, 0x71, 0x3d, 0xb7, 0xef, 0xee, 0xbe,
	0xd7, 0xd2, 0x1f, 0x59, 0x46, 0x98, 0x92, 0x4b, 0x4a, 0xc9, 0x75, 0x15, 0x4a, 0x1c, 0xeb, 0x68,
	0x03, 0x8b, 0x4d, 0x2e, 0x50, 0x7c, 0x53, 0x1b, 0x58, 0x72, 0x15, 0x0a, 0x7a, 0xaf, 0xeb, 0xea,
	0x8f, 0x48, 0x77, 0x2a, 0xf7, 0xb8, 0xde, 0x6b, 0xe9, 0x8f, 0x1a, 0xa6, 0xbc, 0x08, 0x45, 0x86,
	0xc3, 0xce, 0x74, 0x96, 0x0b, 0x88, 0xc5, 0xbe, 0x32, 0xe4, 0x86, 0x43, 0xdb, 0x54, 0xc6, 0x90,
	0x2b, 0x7e, 0xcb, 0xcb, 0x30, 0x66, 0xec, 0xd9, 0x7d, 0x53, 0xc9, 0x5f, 0xcd, 0xde, 0x2c, 0xde,
	0x9a, 0xa5, 0x26, 0x4d, 0x0a, 0xdd, 0xa6, 0x24, 0xea, 0x9b, 0x30, 0x47, 0xe4, 0xd0, 0x1c, 0xc3,
	0xe2, 0x04, 0x7c, 0x7e, 0xae, 0xc3, 0xe4, 0x81, 0x1d, 0xee, 0x75, 0x6d, 0xb3, 0x6f, 0x79, 0xae,
	0xdb, 0x47, 0xcd, 0x26, 0xda, 0x25, 0x02, 0x6c, 0x30, 0x98, 0xfa, 0x3b, 0xa0, 0x1c, 0xed, 0xcf,
	0x4c, 0xfb, 0x35, 0x98, 0xb0, 0x19, 0x4e, 0x91, 0x4e, 0x10, 0x25, 0xa2, 0x12, 0x26, 0x23, 0x73,
	0xaa, 0xc9, 0xf8, 0x99, 0x04, 0x93, 0xf7, 0xdc, 0x20, 0xac, 0xf5, 0xdd, 0xa1, 0xd9, 0x70, 0x76,
	0x5c, 0xb9, 0x0c, 0x19, 0x36, 0x07, 0x85, 0x76, 0xc6, 0x36, 0x93, 0xb6, 0xcd, 0x1c, 0x67, 0x5b,
	0xdb, 0x88, 0xb7, 0x16, 0xc5, 0x1a, 0xae, 0x93, 0x9a, 0xd7, 0x5c, 0x6a, 0x5e, 0x53, 0x33, 0x33,
	0x96, 0x9e, 0x99, 0xf4, 0xbc, 0xe7, 0xd3, 0xf3, 0xae, 0xfe, 0x09, 0x00, 0x10, 0xe9, 0xd9, 0x32,
	0x7a, 0x11, 0xa6, 0xf4, 0x5e, 0x77, 0xcf, 0x25, 0xec, 0x1c, 0xc7, 0xf2, 0x6d, 0x8f, 0xe9, 0x31,
	0xa9, 0xf7, 0x08, 0x59, 0x83, 0x02, 0x45, 0x3a, 0x77, 0x18, 0x22, 0x5d, 0x46, 0xa4, 0x6b, 0x51,
	0xa0, 0x5c, 0x85, 0x09, 0xd7, 0xb3, 0x7c, 0xe2, 0xc9, 0x98, 0x6e, 0x51, 0x9b, 0x8d, 0xa1, 0x6b,
	0xbd, 0x6e, 0x44, 0x92, 0xe3, 0x63, 0xac, 0x6b, 0xbd, 0x16, 0xa7, 0xa3, 0x4a, 0x6a, 0x41, 0x60,
	0xa1, 0x0d, 0x22, 0x25, 0xd7, 0x08, 0xa4, 0x61, 0xca, 0x33, 0x30, 0xa6, 0xf7, 0xba, 0x81, 0xc3,
	0xb4, 0xcb, 0xe9, 0xbd, 0x6d, 0x47, 0xbe, 0x82, 0x76, 0x23, 0x33, 0x67, 0x39, 0xa1, 0x32, 0xce,
	0xfb, 0xd4, 0x28, 0x80, 0xf1, 0x0e, 0x2c, 0x7f, 0xdf, 0x36, 0xac, 0x6e, 0x68, 0xf9, 0x03, 0x65,
	0x02, 0x6d, 0x3b, 0xa9, 0xf7, 0xb6, 0x29, 0xb4, 0x63, 0xf9, 0x03, 0xf9, 0x22, 0xe4, 0x09, 0x5d,
	0x5f, 0x53, 0x0a, 0x38, 0xc4, 0x98, 0xde, 0xdb, 0xee, 0x6b, 0xb2, 0x0a, 0x93, 0x04, 0x1c, 0x92,
	0x9d, 0x8e, 0x86, 0x05, 0xc4, 0x16, 0xf5, 0x1e, 0x59, 0x1c, 0x16, 0xda, 0xfe, 0x26, 0x54, 0xf4,
	0x5e, 0xd7, 0xf3, 0xdd, 0x7d, 0xdb, 0x31, 0x18, 0x59, 0x11, 0xc9, 0xca, 0x7a, 0x6f, 0x8b, 0x81,
	0x91, 0x92, 0x2a, 0x68, 0x07, 0x1e, 0x25, 0x2a, 0x71, 0x61, 0x1b, 0x81, 0x27, 0xcc, 0x22, 0x1a,
	0x1b, 0x09, 0x26, 0xf9, 0x2c, 0x12, 0x4b, 0x23, 0x05, 0x5d, 0x25, 0x6e, 0x40, 0xbd, 0x58, 0x99,
	0x1a, 0x5a, 0xef, 0xb5, 0x02, 0xc1, 0x67, 0xb9, 0x01, 0xed, 0x3d, 0x15, 0x63, 0xb1, 0x2f, 0xd5,
	0xc5, 0x0d, 0xba, 0xfb, 0x96, 0x1f, 0x10, 0xf7, 0x5e, 0xe1, 0xba, 0xb4, 0x82, 0x87, 0x14, 0xc4,
	0x57, 0x70, 0xd0, 0xd5, 0xed, 0x50, 0x99, 0x8e, 0x56, 0x70, 0xb0, 0x6e, 0x87, 0xcc, 0x44, 0x86,
	0x37, 0x54, 0x64, 0xb4, 0xe0, 0x98, 0xde, 0xab, 0x79, 0x43, 0xc6, 0xd4, 0xf0, 0x86, 0xdd, 0xc1,
	0xde, 0xa1, 0x32, 0xc3, 0x17, 0x6e, 0xcd, 0x1b, 0xde, 0xdf, 0x3b, 0x64, 0x4c, 0x11, 0xeb, 0x9a,
	0xc3, 0xbe, 0xa5, 0xcc, 0x72, 0xa6, 0x84, 0x00, 0x41, 0x6c, 0xe0, 0x81, 0x35, 0x50, 0x2e, 0xf2,
	0x81, 0xef, 0x5b, 0x03, 0x79, 0x0e, 0xc6, 0xf5, 0x5e, 0xd7, 0xb4, 0x83, 0x9e, 0x72, 0x09, 0xe1,
	0x79, 0xbd, 0xb7, 0x61, 0x07, 0x3d, 0x4e, 0xaf, 0x19, 0xca, 0x1c, 0x9f, 0xab, 0xfb, 0x9a, 0xc1,
	0xac, 0x87, 0xab, 0x14, 0x91, 0x0a, 0xb7, 0x1e, 0xae, 0x51, 0x42, 0xb1, 0x04, 0x45, 0xc3, 0xb7,
	0xf0, 0x10, 0xb0, 0x07, 0x96, 0x32, 0x4f, 0x09, 0x28, 0xa8, 0x63, 0x0f, 0xf0, 0xd0, 0xb2, 0x07,
	0x9e, 0xeb, 0x87, 0xdd, 0x1d, 0xdf, 0x1d, 0x28, 0x55, 0x4a, 0x40, 0x41, 0x77, 0x7d, 0x77, 0x20,
	0xcf, 0xc2, 0x98, 0xe1, 0xdc, 0xb2, 0x3d, 0x65, 0x81, 0x72, 0xc6, 0x86, 0xbc, 0x00, 0x05, 0xdd,
	0x75, 0x4c, 0x3a, 0x29, 0x97, 0x99, 0xd9, 0x5d, 0xc7, 0xc4, 0x49, 0x99, 0x87, 0x89, 0x03, 0xcd,
	0xe9, 0xee, 0x6a, 0xa1, 0xa5, 0x5c, 0xa1, 0x16, 0x3d, 0xd0, 0x9c, 0xb7, 0xb4, 0x10, 0x51, 0x86,
	0x73, 0x8b, 0xa2, 0x16, 0x29, 0xca, 0x70, 0x6e, 0x21, 0x6a, 0x01, 0x0a, 0x8e, 0x6d, 0x74, 0x03,
	0xcf, 0xb2, 0x4c, 0x65, 0x89, 0x1a, 0xd5, 0xb1, 0x8d, 0x6d, 0xd2, 0x26, 0xfd, 0x82, 0x60, 0xaf,
	0x4b, 0xa4, 0x52, 0xae, 0x22, 0x6e, 0x3c, 0x08, 0xf6, 0xb6, 0x5c, 0x3f, 0x24, 0xdb, 0x01, 0x65,
	0xea, 0x0e, 0xb4, 0xa0, 0xa7, 0x5c, 0x43, 0x64, 0x01, 0x21, 0xf7, 0xb5, 0xa0, 0x47, 0x14, 0x24,
	0xcb, 0x8b, 0xe3, 0x55, 0xc4, 0x03, 0x05, 0x21, 0xc1, 0x75, 0x98, 0xdc, 0x19, 0x3a, 0x06, 0x39,
	0xed, 0xbb, 0x86, 0x6b, 0x5a, 0xca, 0x75, 0x94, 0xab, 0xc4, 0x81, 0x35, 0xd7, 0xb4, 0x88, 0x15,
	0x70, 0x4b, 0x28, 0x37, 0xa8, 0x15, 0xb0, 0x21, 0x7f, 0x05, 0xa6, 0xf9, 0x3e, 0xd3, 0x35, 0xc7,
	0x3c, 0xb0, 0xcd, 0x70, 0x4f, 0x79, 0x01, 0x39, 0x54, 0x18, 0x62, 0x9d, 0xc3, 0xc9, 0x51, 0x62,
	0x7b, 0xfb, 0xb7, 0x95, 0x17, 0xe9, 0x56, 0x26, 0xdf, 0x44, 0x38, 0xba, 0x48, 0xe8, 0xfa, 0x7d,
	0xe9, 0x6a, 0x96, 0x58, 0x9f, 0x82, 0x84, 0xd5, 0x4f, 0x9d, 0x96, 0xa9, 0xdc, 0xe4, 0x4b, 0x0d,
	0xfd, 0x95, 0x29, 0xbf, 0x86, 0xbb, 0xcb, 0x20, 0xde, 0x99, 0xa0, 0x5f, 0xc6, 0x43, 0x60, 0x86,
	0x1e, 0x02, 0x09, 0xbf, 0x8d, 0xfe, 0x01, 0x1b, 0xa6, 0xfa, 0x17, 0x12, 0x94, 0xe8, 0x32, 0x64,
	0x8e, 0xf1, 0x06, 0x94, 0xc9, 0xe2, 0x12, 0xe4, 0xa0, 0x7e, 0xb1, 0xa4, 0xf7, 0xee, 0xc7, 0x92,
	0xd0, 0xb5, 0xc6, 0xa8, 0xa2, 0xf8, 0x00, 0x38, 0x4d, 0xc3, 0x94, 0x6f, 0xc0, 0x64, 0xc7, 0xf5,
	0xe2, 0x2e, 0xcc, 0x2b, 0x26, 0x81, 0x6c, 0x1c, 0x4f, 0xf3, 0x2d, 0x47, 0xf0, 0xfb, 0xa0, 0xf7,
	0xb6, 0x10, 0xd4, 0x30, 0xd5, 0x3f, 0x96, 0xa0, 0xb0, 0x6d, 0x71, 0xb7, 0x4d, 0x3d, 0x08, 0x71,
	0x90, 0x82, 0x68, 0x05, 0xe2, 0xca, 0xc4, 0xd3, 0x9d, 0x39, 0x50, 0x2a, 0xd4, 0x38, 0x62, 0xcf,
	0x51, 0xa2, 0xb7, 0x01, 0xbe, 0xed, 0x3a, 0xd6, 0x29, 0x25, 0x3a, 0x31, 0x8e, 0x52, 0xdf, 0x82,
	0xc2, 0xba, 0x7d, 0x98, 0x18, 0x4a, 0xb7, 0x0f, 0x53, 0x43, 0xad, 0xdb, 0x87, 0x82, 0x72, 0x04,
	0x2f, 0x2a, 0xb7, 0x6e, 0x1f, 0x36, 0x4c, 0xf5, 0x11, 0x94, 0x6a, 0x78, 0x7a, 0x3f, 0xff, 0x30,
	0x49, 0xfd, 0x9e, 0x04, 0x4a, 0x0d, 0x9d, 0xc6, 0x5a, 0x10, 0xb8, 0x86, 0x8d, 0x81, 0x7f, 0x1c,
	0xc8, 0x94, 0x59, 0x47, 0x2d, 0x88, 0x99, 0x53, 0x37, 0xab, 0x3f, 0x5a, 0x0b, 0x90, 0xff, 0xc9,
	0xc1, 0xe5, 0x0b, 0x78, 0x66, 0xd1, 0xee, 0x8c, 0x24, 0x8b, 0x24, 0x25, 0x3c, 0x0b, 0x43, 0x66,
	0xbb, 0x1f, 0x4b, 0x50, 0xa6, 0x47, 0xf5, 0x8e, 0x1b, 0x2d, 0xde, 0x1c, 0xd9, 0x1d, 0x2c, 0xba,
	0xac, 0xc4, 0x6b, 0x9f, 0x05, 0x3f, 0x88, 0x95, 0x97, 0x21, 0xcf, 0x9c, 0x71, 0x06, 0xf7, 0x88,
	0x4c, 0xe9, 0xc4, 0x6d, 0xd0, 0x66, 0x14, 0xf2, 0x35, 0xc8, 0x06, 0x16, 0x09, 0x70, 0x09, 0xe1,
	0x14, 0x25, 0x8c, 0x96, 0x63, 0x9b, 0xe0, 0x08, 0x89, 0x6e, 0x1f, 0x2a, 0x39, 0x91, 0x24, 0x9a,
	0xd4, 0x36, 0xc1, 0xa9, 0x7f, 0x96, 0xe1, 0x49, 0x0b, 0x11, 0x86, 0x9b, 0x2a, 0xce, 0x00, 0xa4,
	0x13, 0x33, 0x00, 0xae, 0x55, 0xe6, 0x94, 0x5a, 0xd1, 0x3c, 0xe1, 0x14, 0x5a, 0xe5, 0x90, 0xf0,
	0x44, 0xad, 0xc6, 0x44, 0x92, 0xa4, 0x56, 0x44, 0xae, 0x43, 0xd7, 0xa1, 0xc1, 0x56, 0x24, 0x57,
	0xbc, 0x35, 0xda, 0x88, 0x95, 0x17, 0x01, 0xa2, 0x04, 0x2a, 0x60, 0x01, 0x8a, 0x00, 0x51, 0xff,
	0x3e, 0xca, 0x9f, 0xa8, 0x6d, 0x58, 0x3c, 0x7b, 0x5a, 0xe3, 0x3c, 0x63, 0x14, 0x2b, 0xbf, 0x09,
	0x15, 0x16, 0xf5, 0xed, 0xb8, 0x64, 0x99, 0x5a, 0x06, 0x9f, 0xdd, 0xd9, 0xd8, 0xb0, 0xf1, 0x92,
	0x6a, 0x97, 0xf7, 0x12, 0x6d, 0xd5, 0x87, 0xb9, 0x06, 0x9e, 0x87, 0x35, 0xdf, 0x0d, 0x82, 0x8e,
	0xa6, 0xf7, 0x2d, 0x3e, 0x9f, 0x2f, 0x43, 0x76, 0xe8, 0xd3, 0xc8, 0xbd, 0xb0, 0x3e, 0xf7, 0xe4,
	0xf1, 0xd2, 0xcc, 0xf2, 0xd4, 0x83, 0xf6, 0xe6, 0xa7, 0x3f, 0x79, 0xff, 0xe7, 0xdf, 0xfd, 0xf8,
	0xd3, 0x9f, 0xfc, 0xf4, 0xf3, 0xbf, 0xfd, 0xe9, 0xaf, 0x4b, 0x6d, 0x42, 0x23, 0x57, 0x20, 0x3b,
	0x30, 0xdf, 0x60, 0xfb, 0x8e, 0x7c, 0x92, 0x00, 0x72, 0xc7, 0xee, 0x5b, 0x4e, 0xec, 0x98, 0xa2,
	0xb6, 0xfa, 0x36, 0x28, 0x47, 0x79, 0x9e, 0x31, 0xa5, 0xea, 0xc3, 0x34, 0x1d, 0x4b, 0x5c, 0x89,
	0xcf, 0x4d, 0xf2, 0x0d, 0x90, 0x45, 0x6e, 0x67, 0x94, 0xd9, 0x81, 0x19, 0x3a, 0x0a, 0x89, 0x58,
	0x2d, 0xff, 0xb9, 0x4b, 0x7d, 0x17, 0x66, 0x93, 0xfc, 0xce, 0x28, 0xf7, 0x00, 0xa6, 0x6b, 0x7b,
	0xae, 0x1b, 0x58, 0xa2, 0xad, 0x13, 0x5e, 0x5c, 0x4a, 0x78, 0xf1, 0x13, 0x8f, 0xaf, 0xf4, 0x91,
	0x4b, 0x16, 0x6d, 0xe2, 0xc8, 0x55, 0xdf, 0x80, 0x3c, 0x15, 0x38, 0x4a, 0x54, 0xa9, 0xeb, 0xa5,
	0x89, 0xea, 0x1c, 0x8c, 0xdb, 0xde, 0xc0, 0xee, 0x46, 0x19, 0x4c, 0x9e, 0x34, 0x1b, 0x9e, 0xda,
	0x81, 0x19, 0x2a, 0x65, 0xd2, 0xba, 0x73, 0x30, 0xee, 0xbb, 0xee, 0x20, 0x96, 0x32, 0x4f, 0x9a,
	0x78, 0x8e, 0xe6, 0x03, 0xa4, 0x64, 0xee, 0xb3, 0xc4, 0xfd, 0x07, 0xf6, 0x66, 0x38, 0xf5, 0x0d,
	0xa8, 0x8a, 0xa3, 0xd6, 0xdc, 0x01, 0x39, 0x53, 0xbf, 0x68, 0x70, 0x61, 0xaa, 0x0f, 0xec, 0xd0,
	0xd8, 0xfb, 0x12, 0xa7, 0x9a, 0xf1, 0xfb, 0x45, 0xb7, 0xd5, 0xa6, 0xd6, 0xb3, 0xbe, 0xbc, 0x6d,
	0x45, 0xb9, 0x9d, 0x51, 0xe6, 0x0f, 0x24, 0x80, 0xb6, 0xeb, 0x0e, 0xbe, 0x84, 0xca, 0xca, 0x8b,
	0xbc, 0x4a, 0x42, 0x4f, 0x49, 0x76, 0x56, 0xc4, 0xcc, 0x79, 0x85, 0xe4, 0x22, 0xcc, 0x10, 0x60,
	0xaa, 0x3a, 0xa2, 0x3a, 0x30, 0x9b, 0x04, 0x47, 0x87, 0xc4, 0x18, 0x59, 0x37, 0x01, 0xab, 0x78,
	0x8c, 0x18, 0x16, 0xd1, 0xcf, 0x5c, 0xea, 0xf8, 0x38, 0x0b, 0x25, 0xba, 0x6e, 0xcf, 0xc9, 0x36,
	0x0b, 0x50, 0x18, 0x68, 0x8e, 0xb6, 0x6b, 0x91, 0xed, 0xc7, 0x66, 0x93, 0x02, 0x1a, 0x9e, 0xac,
	0xc0, 0xb8, 0x66, 0x18, 0xee, 0xd0, 0x09, 0x59, 0x5d, 0x80, 0x37, 0xc9, 0x1a, 0xf0, 0xb4, 0x20,
	0x38, 0x70, 0x7d, 0x5e, 0x0e, 0x88, 0xda, 0x98, 0x2d, 0x68, 0x46, 0x57, 0x33, 0x4d, 0xdf, 0x0a,
	0x02, 0x5e, 0xf1, 0x18, 0x68, 0xc6, 0x1a, 0x85, 0x90, 0x61, 0x0d, 0x4d, 0xb7, 0x1d, 0x8b, 0x97,
	0x05, 0x78, 0x13, 0xcb, 0x98, 0x24, 0x77, 0x9a, 0x60, 0x65, 0x4c, 0x92, 0x38, 0x7d, 0x1d, 0x8a,
	0x9e, 0x7b, 0x60, 0xf9, 0x34, 0xd9, 0xc7, 0x2a, 0x40, 0x99, 0xd8, 0x29, 0xde, 0xda, 0x5b, 0x04,
	0x8d, 0x69, 0x7f, 0x1b, 0xbc, 0xe8, 0x5b, 0xfe, 0x15, 0x98, 0xc4, 0x92, 0x52, 0xbf, 0xcf, 0xba,
	0x02, 0x76, 0x55, 0xc4, 0xae, 0x0d, 0x4a, 0x40, 0x3b, 0x97, 0x6c, 0xa1, 0x15, 0xb9, 0xaa, 0xa2,
	0xe0, 0xaa, 0x46, 0x14, 0x67, 0x4a, 0xa3, 0x8a, 0x33, 0x82, 0x17, 0x99, 0x4c, 0x78, 0x91, 0x1f,
	0x60, 0x91, 0x98, 0x70, 0xde, 0xb4, 0x63, 0xcf, 0x9b, 0x9e, 0xc4, 0x6c, 0x62, 0x12, 0x4f, 0x2a,
	0x5e, 0xc5, 0xc1, 0x48, 0xf6, 0xa4, 0x60, 0xe4, 0xce, 0xe2, 0x87, 0x6b, 0x0b, 0x30, 0xff, 0x89,
	0x24, 0xf0, 0xf9, 0x44, 0x8a, 0x87, 0x55, 0x3f, 0xc2, 0x58, 0x27, 0x96, 0x8b, 0x2d, 0xe3, 0xaf,
	0xc2, 0x38, 0xf5, 0x9a, 0x7c, 0x21, 0xcb, 0xa2, 0xf1, 0xd8, 0x52, 0xe6, 0x24, 0xcf, 0xad, 0x70,
	0xfc, 0xd7, 0x12, 0xcc, 0xd0, 0x40, 0x8c, 0x9e, 0x28, 0xdc, 0x6c, 0x1e, 0xcc, 0x10, 0x69, 0xba,
	0xac, 0x9c, 0xed, 0x53, 0x30, 0xf3, 0x31, 0x73, 0x54, 0xd2, 0x23, 0xc7, 0xdc, 0xfa, 0x4b, 0x4f,
	0x1e, 0x2f, 0x5d, 0x5f, 0x5e, 0x22, 0xd8, 0xcf, 0x3f, 0xfa, 0xde, 0x67, 0x1f, 0xfc, 0xf9, 0xe7,
	0xff, 0xf2, 0x57, 0x9f, 0xfd, 0xf0, 0x47, 0x9f, 0xfe, 0xec, 0x5f, 0x53, 0xee, 0x6f, 0x9a, 0x90,
	0x50, 0xbe, 0xac, 0xef, 0x9d, 0x85, 0x0f, 0xd7, 0x14, 0xb8, 0xf4, 0x89, 0x34, 0x8a, 0xaf, 0x1a,
	0xc2, 0x6c, 0x52, 0xca, 0xb3, 0x79, 0x3f, 0x62, 0xf4, 0x81, 0x3b, 0xfc, 0x82, 0x34, 0x80, 0x93,
	0xa8, 0xff, 0x95, 0xe3, 0x07, 0xd3, 0x3d, 0x3b, 0x08, 0x5d, 0x9f, 0x97, 0xa3, 0xe3, 0x12, 0xe8,
	0x18, 0x96, 0x40, 0x2b, 0xd4, 0xe5, 0x33, 0x3f, 0x2e, 0x78, 0xf6, 0x6c, 0xec, 0xd9, 0x97, 0xa0,
	0xd8, 0x77, 0x77, 0x89, 0x33, 0xef, 0x12, 0x5a, 0xba, 0xe7, 0x81, 0x81, 0x1e, 0xf8, 0x7d, 0x91,
	0x80, 0x74, 0x1d, 0x4b, 0x10, 0xdc, 0xa7, 0x23, 0x84, 0x6e, 0xa8, 0xf5, 0xbb, 0xd4, 0x6b, 0xe4,
	0x69, 0x8e, 0x8a, 0xa0, 0x1a, 0x3a, 0x8e, 0xeb, 0x30, 0x19, 0x0c, 0x0d, 0xc3, 0x0a, 0x02, 0x46,
	0x32, 0x4e, 0x13, 0x28, 0x06, 0xa4, 0x44, 0x57, 0x00, 0x76, 0x34, 0x9b, 0x0f, 0x42, 0xcb, 0x82,
	0x05, 0x02, 0xa1, 0xe8, 0x9b, 0x42, 0x49, 0xb3, 0x80, 0x26, 0x2d, 0x71, 0x93, 0x3e, 0x08, 0x2c,
	0x5f, 0x28, 0x70, 0xbe, 0x1a, 0x95, 0x8d, 0xb0, 0x02, 0x44, 0x1d, 0x00, 0x73, 0xc6, 0xd4, 0x68,
	0xf4, 0x7a, 0xc1, 0x8e, 0xbe, 0x49, 0xb6, 0xc2, 0x66, 0xab, 0x88, 0xd4, 0xb2, 0x48, 0x9d, 0x9a,
	0xa9, 0x25, 0x28, 0xfa, 0xd6, 0xbe, 0x6d, 0x1d, 0x74, 0x1d, 0x37, 0xe4, 0x65, 0x43, 0xa0, 0xa0,
	0xa6, 0x1b, 0x5a, 0x89, 0xa3, 0x72, 0x32, 0x79, 0x54, 0xca, 0x2f, 0xc1, 0x14, 0xb7, 0xa5, 0xe1,
	0x3a, 0xa1, 0xe5, 0x84, 0xac, 0x6c, 0x58, 0x66, 0xe0, 0x1a, 0x85, 0xca, 0xbf, 0x04, 0x10, 0x84,
	0x1a, 0xd1, 0xc1, 0x66, 0xc5, 0xc3, 0xe2, 0xad, 0xea, 0x0a, 0xbd, 0x8e, 0x5a, 0xe1, 0xd7, 0x51,
	0x2b, 0x1d, 0x7e, 0x1d, 0xd5, 0x2e, 0x20, 0x35, 0x96, 0xcd, 0xde, 0x80, 0x09, 0xcb, 0x31, 0x69,
	0xc7, 0xca, 0x17, 0x76, 0x1c, 0xb7, 0x1c, 0x93, 0xb4, 0xd4, 0xbf, 0x93, 0x78, 0xf0, 0xc1, 0xd6,
	0x14, 0xdf, 0x71, 0x29, 0x7b, 0x4a, 0xa7, 0xb0, 0xe7, 0xd7, 0x61, 0x92, 0x75, 0x11, 0x0e, 0xba,
	0xd1, 0x66, 0x2d, 0xd9, 0x42, 0xeb, 0xb4, 0xae, 0x8d, 0x78, 0x87, 0x8b, 0x29, 0x61, 0xd9, 0xc6,
	0x7b, 0x0d, 0xc6, 0xf7, 0x28, 0x88, 0x79, 0xaf, 0x79, 0x91, 0x69, 0x62, 0xbb, 0xb4, 0x39, 0xe5,
	0x73, 0x73, 0x62, 0xff, 0x23, 0x01, 0xac, 0xf9, 0x96, 0x76, 0x4e, 0xe7, 0xf6, 0x12, 0x14, 0x35,
	0xdf, 0xd2, 0xba, 0x86, 0x23, 0xc4, 0x61, 0x40, 0x40, 0x35, 0x84, 0x44, 0x04, 0x96, 0x23, 0x5c,
	0x19, 0x21, 0x41, 0x9d, 0x12, 0x2c, 0x40, 0x21, 0x2e, 0x26, 0xd1, 0x8b, 0xa3, 0x09, 0x8f, 0x95,
	0x92, 0xe4, 0x59, 0x18, 0xeb, 0x5b, 0xfb, 0x56, 0x9f, 0x9d, 0xde, 0xb4, 0x41, 0x8e, 0x35, 0x1c,
	0xd3, 0x36, 0xd9, 0xb6, 0xcd, 0x93, 0x66, 0xc3, 0x54, 0xff, 0x52, 0x82, 0x42, 0x23, 0xf0, 0xce,
	0x49, 0xb7, 0x79, 0x98, 0xb0, 0x03, 0x8f, 0x56, 0x39, 0x59, 0xb8, 0x66, 0x07, 0x1e, 0x16, 0x38,
	0xaf, 0x00, 0x10, 0x54, 0x42, 0xa9, 0x82, 0x1d, 0x78, 0x4c, 0x27, 0xd6, 0x53, 0xd3, 0x75, 0x9f,
	0x39, 0x27, 0xd2, 0x73, 0x4d, 0xd7, 0x7d, 0x62, 0xff, 0xc2, 0x43, 0xfb, 0x1c, 0x45, 0x24, 0x89,
	0x12, 0xee, 0x02, 0x1e, 0x51, 0xda, 0x87, 0xbc, 0xac, 0xbc, 0x6f, 0x7b, 0x5d, 0x2c, 0xa2, 0xb2,
	0xa8, 0x69, 0xdf, 0xf6, 0x1a, 0xde, 0xfe, 0x6d, 0x01, 0xf5, 0x3a, 0x17, 0x8f, 0xa2, 0x5e, 0x47,
	0xc5, 0xbc, 0xfd, 0xd7, 0x59, 0xa4, 0x92, 0x67, 0x8a, 0x79, 0xfb, 0xaf, 0xd3, 0x60, 0x84, 0xa2,
	0x6f, 0x33, 0xf4, 0x78, 0x84, 0xbe, 0x8d, 0x68, 0xf5, 0x7f, 0x33, 0x50, 0x61, 0x69, 0xce, 0xf9,
	0x85, 0xcd, 0x51, 0x31, 0x39, 0x2b, 0x16, 0x93, 0x17, 0xa0, 0x40, 0x17, 0x1e, 0x99, 0x1d, 0xaa,
	0xdf, 0x04, 0x2e, 0x3b, 0x32, 0x3d, 0xe2, 0xcc, 0x8d, 0x25, 0x67, 0xee, 0x06, 0xe4, 0x08, 0x59,
	0xb2, 0x26, 0x13, 0x6f, 0x88, 0x36, 0x62, 0xe5, 0x6b, 0x50, 0xc2, 0xc0, 0x89, 0x07, 0x8f, 0x54,
	0xd3, 0x22, 0x81, 0xf1, 0xe8, 0xf1, 0x1a, 0x94, 0x86, 0x9e, 0x50, 0xc8, 0xa6, 0xc7, 0x43, 0x71,
	0xe8, 0xc5, 0x35, 0xec, 0xeb, 0x30, 0x39, 0xb0, 0x1d, 0x81, 0xa6, 0x40, 0x0f, 0x99, 0x81, 0xed,
	0xc4, 0x44, 0x8b, 0x00, 0x03, 0xcd, 0x76, 0x42, 0xcd, 0x76, 0x2c, 0x9f, 0x5d, 0x1f, 0x09, 0x10,
	0xf9, 0x12, 0xe4, 0x07, 0xae, 0x6e, 0xf7, 0xf9, 0x9d, 0x11, 0x6b, 0xa9, 0x1f, 0x65, 0x01, 0x48,
	0x76, 0x73, 0x4e, 0x56, 0x9e, 0x83, 0x71, 0xc7, 0x35, 0xad, 0xb8, 0x96, 0x98, 0x27, 0xcd, 0x86,
	0x29, 0x5f, 0x83, 0xec, 0xbe, 0xed, 0x25, 0xab, 0x77, 0xd1, 0x02, 0x6e, 0x13, 0x1c, 0x39, 0x42,
	0x22, 0x1d, 0xbb, 0x7d, 0x7b, 0x60, 0x87, 0x68, 0xf5, 0x4c, 0xbb, 0x1c, 0x81, 0x37, 0x09, 0x94,
	0x2c, 0x1f, 0x64, 0x42, 0xf7, 0x34, 0x5b, 0x3e, 0x04, 0xb2, 0x89, 0xfb, 0x9a, 0x1c, 0xca, 0xec,
	0x82, 0x80, 0xce, 0x38, 0x8d, 0xbf, 0x4b, 0x0c, 0x48, 0x97, 0xe0, 0x4b, 0x30, 0x65, 0xb8, 0x4e,
	0x10, 0xfa, 0x43, 0x23, 0x14, 0x62, 0xf1, 0x42, 0xbb, 0x1c, 0x81, 0x29, 0xe1, 0xab, 0x30, 0x1b,
	0x13, 0xd2, 0x9b, 0x77, 0x3c, 0x80, 0xa8, 0x89, 0x67, 0x22, 0xdc, 0x83, 0x08, 0x25, 0x2f, 0x43,
	0x8e, 0x4c, 0xb1, 0x52, 0x44, 0x65, 0x13, 0xc1, 0xbd, 0x90, 0x33, 0x21, 0x0d, 0x5e, 0xc0, 0x10,
	0x5d, 0x70, 0x91, 0xd1, 0x23, 0x77, 0x82, 0x00, 0xc8, 0x2a, 0x53, 0xff, 0x53, 0x82, 0x69, 0xa1,
	0xf6, 0xcb, 0xe6, 0xe8, 0x1c, 0x4a, 0xbf, 0x27, 0xe5, 0x90, 0x23, 0xca, 0xc2, 0xb9, 0xa3, 0x65,
	0x61, 0x26, 0x05, 0x92, 0xb1, 0x71, 0xc6, 0xb8, 0x14, 0x84, 0x8a, 0x8e, 0x45, 0xc3, 0xb6, 0x3c,
	0x0f, 0xdb, 0xd4, 0xef, 0x47, 0xaf, 0x4a, 0xc4, 0xfc, 0x5d, 0x58, 0x34, 0x34, 0x5b, 0xe0, 0x8b,
	0xa6, 0x42, 0x17, 0x4d, 0x06, 0x6f, 0x68, 0x70, 0x8d, 0x24, 0xf6, 0x6b, 0x16, 0xe1, 0xa3, 0xf7,
	0x6b, 0x0e, 0x71, 0xd1, 0x7e, 0x4d, 0x98, 0x79, 0x8c, 0xf6, 0x8b, 0xcc, 0xfc, 0x88, 0x57, 0x46,
	0x8f, 0x49, 0xf3, 0x4f, 0x57, 0xf1, 0xbc, 0x01, 0xb9, 0xbe, 0xd6, 0xb3, 0x58, 0x95, 0x93, 0xb9,
	0x84, 0x78, 0x6b, 0xb5, 0x11, 0xab, 0xb6, 0x60, 0xb2, 0x46, 0xd3, 0xc3, 0xf3, 0xd9, 0x71, 0x24,
	0xd7, 0xb9, 0x18, 0x4b, 0x2f, 0x56, 0xc0, 0x16, 0xa0, 0x40, 0x58, 0xf2, 0x5b, 0x0e, 0xd4, 0x99,
	0x00, 0xd2, 0x1b, 0x35, 0x93, 0xb0, 0x79, 0xc2, 0x52, 0xd9, 0xa4, 0xa5, 0xe4, 0x15, 0xc0, 0x33,
	0x97, 0xed, 0xbc, 0x1c, 0xc6, 0x3e, 0x53, 0xb1, 0xf3, 0xc3, 0xfd, 0xd7, 0xc6, 0x19, 0xc2, 0x4f,
	0x75, 0x08, 0x97, 0xd2, 0xb2, 0x31, 0xeb, 0x7e, 0x85, 0x09, 0xc7, 0xee, 0x11, 0xb2, 0x34, 0x36,
	0xe1, 0x26, 0x43, 0x52, 0x14, 0x96, 0x7c, 0x3d, 0x73, 0x5d, 0xc1, 0x80, 0x09, 0x3e, 0x0a, 0x09,
	0xf2, 0x90, 0x11, 0xab, 0x41, 0x27, 0xae, 0x2c, 0x84, 0xd9, 0x81, 0x7e, 0xec, 0x04, 0xe3, 0x8b,
	0x80, 0xec, 0xf1, 0x17, 0x01, 0xaa, 0x2b, 0xda, 0x9d, 0x68, 0xcf, 0xed, 0x4e, 0xef, 0x1c, 0x5f,
	0x67, 0x26, 0xc7, 0xef, 0xe8, 0x1e, 0x32, 0x13, 0xc1, 0x6e, 0xa7, 0x8c, 0x99, 0xfd, 0x42, 0x63,
	0xfe, 0xb6, 0x68, 0x4c, 0xca, 0x90, 0x19, 0xf3, 0x55, 0x66, 0x4c, 0x3c, 0x92, 0x12, 0xaf, 0x52,
	0x38, 0x29, 0x7f, 0x95, 0xd2, 0x67, 0xed, 0x67, 0x36, 0xe9, 0xef, 0x42, 0x39, 0x39, 0x96, 0xa0,
	0xa6, 0x34, 0x42, 0xcd, 0xf8, 0xba, 0xf5, 0x54, 0xfb, 0x82, 0xf8, 0x74, 0x2c, 0x44, 0x50, 0x57,
	0xcc, 0x42, 0x21, 0x02, 0xa1, 0x21, 0xc1, 0x53, 0x89, 0x97, 0xe2, 0xf0, 0x95, 0x06, 0x37, 0xf5,
	0xaf, 0x1e, 0x8d, 0xe0, 0x0b, 0xeb, 0x8b, 0x4f, 0x1e, 0x2f, 0x55, 0x97, 0x2f, 0xc5, 0x51, 0x7b,
	0x2a, 0x13, 0x16, 0xe3, 0xf9, 0x97, 0x85, 0x3c, 0xf2, 0x0b, 0x4a, 0x87, 0x2f, 0x0b, 0x09, 0x26,
	0x27, 0xbd, 0xbf, 0xf1, 0x46, 0x9a, 0x94, 0x64, 0x9e, 0xdf, 0x10, 0x12, 0x25, 0x54, 0x65, 0xfd,
	0xf2, 0x93, 0xc7, 0x4b, 0xca, 0xf2, 0x2c, 0x81, 0x92, 0xed, 0x97, 0xea, 0x14, 0x57, 0x1c, 0xeb,
	0x3c, 0xfd, 0x65, 0x6a, 0x9e, 0xb1, 0xe4, 0xf8, 0xef, 0x12, 0x1f, 0xa7, 0x8d, 0xe9, 0x5b, 0x6c,
	0xaf, 0x02, 0xb3, 0x17, 0xf7, 0x35, 0xeb, 0xea, 0x93, 0xc7, 0x4b, 0x8b, 0x95, 0x0b, 0xcb, 0xd5,
	0xa7, 0xff, 0xf4, 0x6f, 0x4f, 0xff, 0xf0, 0x6f, 0x7e, 0xfe, 0x8f, 0xff, 0xfc, 0xf4, 0xe3, 0x1f,
	0x34, 0x36, 0x44, 0x09, 0xdb, 0x13, 0xb4, 0x53, 0xc3, 0x3c, 0x7b, 0xfe, 0x93, 0x4a, 0x2e, 0xb3,
	0xe9, 0xe4, 0xf2, 0xce, 0xf4, 0x87, 0x6b, 0x65, 0x28, 0x7d, 0x22, 0xc5, 0x02, 0xc6, 0x45, 0x63,
	0xae, 0xc4, 0x19, 0xad, 0xf1, 0x0f, 0x91, 0x35, 0x36, 0xac, 0x50, 0xb3, 0xfb, 0xe7, 0x66, 0x8d,
	0xf3, 0xa8, 0x65, 0x8d, 0xd0, 0xfb, 0xff, 0xa2, 0x84, 0x95, 0xcb, 0xcb, 0x14, 0xaf, 0x43, 0x81,
	0x1e, 0x14, 0xce, 0x8e, 0xcb, 0xf6, 0xf9, 0x4d, 0xd1, 0xf2, 0x49, 0x72, 0x7c, 0x70, 0xd8, 0x70,
	0x76, 0xdc, 0xba, 0x13, 0xfa, 0xef, 0xd1, 0x17, 0x69, 0xf8, 0x9e, 0xec, 0x39, 0x25, 0x85, 0xd5,
	0x5f, 0x86, 0xc9, 0x04, 0x4b, 0x72, 0x7e, 0xf7, 0xac, 0xf7, 0x98, 0x87, 0x20, 0x9f, 0x24, 0x0a,
	0xdf, 0xd7, 0xfa, 0x43, 0x7e, 0x90, 0xd1, 0xc6, 0x9d, 0xcc, 0x37, 0x24, 0xf5, 0xf7, 0x22, 0xef,
	0x46, 0x9c, 0x5d, 0xf2, 0xd6, 0x8c, 0x65, 0x6f, 0x34, 0x41, 0x9f, 0x89, 0x3d, 0x48, 0x93, 0xc7,
	0x7c, 0x3c, 0xa5, 0x3b, 0xad, 0x66, 0xdc, 0x4f, 0x65, 0xf1, 0xf5, 0x1f, 0x7e, 0xab, 0xbf, 0x9f,
	0x81, 0xb9, 0x23, 0x12, 0x30, 0xc3, 0xaf, 0x41, 0xde, 0xb7, 0x82, 0x61, 0x9f, 0x1f, 0x55, 0x2f,
	0xf3, 0x98, 0x6e, 0x24, 0x39, 0xb1, 0xcf, 0xb0, 0x1f, 0x52, 0xb3, 0xb3, 0x8e, 0xcf, 0xcd, 0xe8,
	0x6f, 0x43, 0x51, 0x60, 0x37, 0xc2, 0xe4, 0x2f, 0x88, 0x26, 0x8f, 0x62, 0xef, 0x58, 0x68, 0x61,
	0x0e, 0x9a, 0x50, 0x88, 0xe0, 0xcf, 0x62, 0xf6, 0x4b, 0x90, 0xc7, 0x41, 0x02, 0x76, 0xbe, 0xb1,
	0x96, 0xfa, 0x2e, 0x5c, 0xa2, 0x61, 0x31, 0xe9, 0x45, 0xab, 0xd2, 0x71, 0x6c, 0x12, 0x47, 0x19,
	0x52, 0x2a, 0xca, 0xb8, 0x73, 0x34, 0x36, 0xa7, 0x6e, 0x66, 0x9a, 0xca, 0xd0, 0x72, 0xfa, 0xb6,
	0xc3, 0xc6, 0x4b, 0x85, 0xeb, 0x6a, 0x03, 0xe6, 0x8e, 0xb0, 0x3c, 0xa3, 0xdb, 0xb0, 0xb9, 0xf4,
	0xf7, 0xf8, 0x31, 0xf4, 0xac, 0x27, 0xfc, 0x4b, 0x62, 0xce, 0x39, 0x52, 0x7c, 0x8a, 0x8f, 0xa5,
	0x16, 0x58, 0x9d, 0x51, 0x6a, 0x13, 0x2e, 0xd2, 0xa1, 0x1e, 0xda, 0x5e, 0x42, 0x68, 0x12, 0x8b,
	0x7b, 0xd1, 0x2b, 0x52, 0x2f, 0x16, 0x2e, 0x73, 0xb2, 0x70, 0x23, 0x37, 0xcb, 0x3d, 0x6e, 0x9b,
	0x98, 0xcb, 0x19, 0xe5, 0x9d, 0xe7, 0xbb, 0x8e, 0x16, 0x84, 0x85, 0x8b, 0x04, 0xf5, 0x37, 0x41,
	0x39, 0x8a, 0x3a, 0x63, 0x19, 0x5a, 0x86, 0x9c, 0xa9, 0x85, 0x1a, 0x9f, 0x1e, 0xf2, 0xad, 0x3a,
	0x49, 0xd6, 0xa2, 0xcf, 0x79, 0x33, 0xf9, 0x46, 0x8c, 0x06, 0x16, 0x57, 0x9e, 0x3c, 0x5e, 0x9a,
	0x5f, 0xbe, 0xf8, 0xd9, 0x8f, 0x7f, 0xf4, 0xf4, 0x87, 0x7f, 0xfa, 0xf4, 0x83, 0xf7, 0xd3, 0x71,
	0x45, 0xfc, 0x84, 0xec, 0xce, 0xcc, 0x87, 0x6b, 0x15, 0x28, 0x7f, 0x22, 0x89, 0xa3, 0xa8, 0x5e,
	0x52, 0x9f, 0x5f, 0xe4, 0xae, 0x9e, 0x44, 0x55, 0x91, 0x3e, 0x51, 0x54, 0x25, 0x8c, 0x4b, 0x35,
	0xac, 0x01, 0xc4, 0xb0, 0xf4, 0xc3, 0x37, 0xf6, 0x56, 0x5e, 0x78, 0xf8, 0x26, 0x78, 0xe7, 0x6c,
	0xe4, 0x9d, 0x97, 0xbf, 0x05, 0x13, 0xfc, 0xe9, 0xba, 0x2c, 0x43, 0xf9, 0x41, 0x73, 0xa3, 0x7e,
	0xb7, 0xd1, 0xac, 0x6f, 0x74, 0x1b, 0xcd, 0xed, 0x4e, 0xe5, 0x82, 0x3c, 0x09, 0x85, 0x7b, 0xad,
	0xed, 0x0e, 0x6d, 0x4a, 0xa4, 0xb9, 0xb9, 0xf6, 0xcd, 0x3a, 0x6d, 0x66, 0xe4, 0x12, 0x4c, 0x3c,
	0x6c, 0x6c, 0xd1, 0x56, 0x96, 0x20, 0xdb, 0xad, 0xd6, 0x7d, 0xda, 0xcc, 0x2d, 0x1f, 0x42, 0x49,
	0x8c, 0x19, 0x08, 0xba, 0x71, 0x7f, 0xab, 0xd5, 0xee, 0x34, 0x9a, 0x6f, 0xd1, 0x91, 0x6b, 0xad,
	0xfb, 0x5b, 0x9b, 0xf5, 0x4e, 0x7d, 0xa3, 0x22, 0xc9, 0x00, 0xf9, 0xbb, 0x6b, 0x8d, 0xcd, 0xfa,
	0x46, 0x25, 0x83, 0x03, 0xd5, 0x1f, 0x36, 0xea, 0xef, 0x10, 0xca, 0x2c, 0x41, 0xad, 0xd5, 0x6a,
	0xf5, 0xad, 0x4e, 0x25, 0x47, 0xbe, 0xdb, 0xf5, 0xb7, 0xeb, 0xb5, 0x4e, 0x65, 0x8c, 0x7c, 0xd7,
	0xd6, 0x9a, 0xb5, 0xfa, 0x66, 0x25, 0x4f, 0x79, 0x6f, 0x6e, 0x76, 0xc9, 0x18, 0x95, 0xf1, 0xe5,
	0xdf, 0x02, 0x88, 0x8b, 0xbc, 0x04, 0x19, 0x29, 0x56, 0xb9, 0x20, 0x4f, 0x40, 0x8e, 0xe8, 0x44,
	0x99, 0x6e, 0xd7, 0xdb, 0x0f, 0xeb, 0xed, 0x4a, 0x86, 0x40, 0x89, 0x6a, 0x94, 0xdf, 0xf6, 0x3b,
	0x8d, 0x4e, 0xed, 0x5e, 0x25, 0x27, 0x97, 0x01, 0x6a, 0xed, 0xd6, 0xf6, 0x76, 0x67, 0x6d, 0x7d,
	0xb3, 0x5e, 0x19, 0x93, 0xc7, 0x21, 0xfb, 0xb0, 0xb1, 0x55, 0xc9, 0x2f, 0x7f, 0x8d, 0x97, 0xb1,
	0xe2, 0x2b, 0x3d, 0xb9, 0x08, 0xe3, 0x0f, 0x9a, 0xdf, 0x6c, 0xb6, 0xde, 0x69, 0x56, 0x2e, 0x10,
	0xca, 0xd6, 0xdd, 0xbb, 0x15, 0x49, 0xce, 0x43, 0xa6, 0xd5, 0xac, 0x64, 0x96, 0x37, 0xf8, 0xbd,
	0x95, 0x78, 0x93, 0x27, 0x4f, 0x41, 0xf1, 0x41, 0x93, 0x58, 0x6c, 0x6d, 0x73, 0x13, 0xa5, 0x2b,
	0x03, 0xb0, 0x26, 0xd1, 0x1e, 0x4d, 0x1e, 0xa3, 0x33, 0xcb, 0xef, 0xc2, 0x64, 0xc2, 0x4d, 0x13,
	0x3e, 0x6b, 0x9b, 0x9b, 0x95, 0x0b, 0xf2, 0x34, 0x4c, 0x36, 0xd7, 0x3a, 0x8d, 0x56, 0xb3, 0x5b,
	0xab, 0x37, 0x3b, 0xf5, 0x76, 0x45, 0x22, 0xa0, 0x76, 0xfd, 0x2d, 0x01, 0x94, 0x21, 0xa0, 0xad,
	0x76, 0xeb, 0x61, 0xa3, 0x59, 0xab, 0x77, 0xeb, 0x1b, 0x6f, 0xd5, 0xe9, 0xbc, 0xd5, 0x1a, 0x9d,
	0x6f, 0xd1, 0x66, 0x8e, 0x48, 0x54, 0x6b, 0x3d, 0x68, 0x72, 0xc0, 0xd8, 0xf2, 0xaf, 0x41, 0x21,
	0xca, 0x59, 0x88, 0x99, 0x9a, 0x0f, 0x90, 0x1f, 0x40, 0x9e, 0xf2, 0xa3, 0x86, 0xa4, 0x8c, 0xe8,
	0xa2, 0xe0, 0x1c, 0x2a, 0x59, 0x42, 0x4f, 0x06, 0xa7, 0x53, 0x47, 0xc7, 0xad, 0x8c, 0x2d, 0xdf,
	0x81, 0xa2, 0xe0, 0x8c, 0x12, 0x2b, 0x6f, 0xbb, 0xb3, 0xd6, 0xa9, 0x57, 0x2e, 0x10, 0x63, 0xb6,
	0xee, 0xde, 0xdd, 0x6c, 0x34, 0xeb, 0x74, 0xfc, 0x56, 0x13, 0xbf, 0x33, 0xb7, 0x3e, 0x9c, 0x81,
	0x5c, 0x6d, 0x60, 0xea, 0x72, 0x08, 0x95, 0xf4, 0x53, 0x7e, 0xf9, 0x4a, 0xfc, 0x73, 0x8c, 0x11,
	0x3f, 0x11, 0xa8, 0x2e, 0x1e, 0x87, 0xa6, 0xfb, 0x50, 0xbd, 0xf6, 0x07, 0xff, 0xfd, 0xe9, 0xf7,
	0x33, 0x0b, 0xf2, 0xfc, 0xea, 0xfe, 0xab, 0xf8, 0x0b, 0xa0, 0x55, 0x3b, 0xcd, 0xe1, 0x37, 0x00,
	0xe2, 0xa7, 0x56, 0xf2, 0x9c, 0x18, 0x2c, 0x08, 0x4e, 0xa6, 0xaa, 0x1c, 0x45, 0x30, 0x1e, 0x0b,
	0xc8, 0xe3, 0xa2, 0x3c, 0x13, 0xf1, 0x08, 0xe2, 0xf1, 0xba, 0x7c, 0xe1, 0x8a, 0xa3, 0x1f, 0x79,
	0x6c, 0xc4, 0x47, 0x3f, 0xfa, 0x2e, 0x48, 0x5d, 0xc4, 0xd1, 0x15, 0x35, 0x1e, 0xdd, 0x8e, 0x88,
	0xee, 0x48, 0xcb, 0xf2, 0x01, 0x54, 0xd2, 0xef, 0xa0, 0x22, 0xa3, 0x8d, 0x7e, 0x93, 0x15, 0x19,
	0xed, 0x98, 0xe7, 0x53, 0xea, 0x0d, 0x64, 0xb9, 0xa8, 0xce, 0xa7, 0x58, 0xc6, 0xa4, 0x84, 0x71,
	0xa4, 0x19, 0x59, 0xbe, 0x49, 0xcd, 0x84, 0x7a, 0x51, 0x52, 0x33, 0xb1, 0x66, 0x73, 0xac, 0x66,
	0x84, 0x88, 0x30, 0x30, 0xa1, 0x24, 0x3e, 0x70, 0x90, 0xe7, 0xe3, 0x97, 0x0c, 0xe9, 0x65, 0x50,
	0x1d, 0x85, 0x62, 0x6c, 0xae, 0x20, 0x9b, 0x39, 0xf9, 0x62, 0xc4, 0xc6, 0x17, 0x47, 0xc5, 0xe9,
	0xe7, 0xb7, 0xcf, 0xf1, 0xf4, 0xa7, 0xee, 0xc9, 0xab, 0xca, 0x51, 0xc4, 0x09, 0xd3, 0x1f, 0x8d,
	0x67, 0x42, 0x49, 0x3c, 0x45, 0xb8, 0x0e, 0x23, 0xae, 0x94, 0xb9, 0x0e, 0xa3, 0xee, 0x71, 0x47,
	0xe8, 0x10, 0x88, 0xa3, 0xee, 0xc1, 0x64, 0xe2, 0x62, 0x49, 0xae, 0x8e, 0xb8, 0x6d, 0xe2, 0x7c,
	0x16, 0x46, 0xe2, 0x92, 0x73, 0x22, 0x5f, 0x4a, 0xaf, 0x36, 0x36, 0x70, 0x97, 0x6f, 0x16, 0xfc,
	0xb9, 0x56, 0x62, 0xb3, 0x08, 0xbf, 0xac, 0x4a, 0x6e, 0x16, 0xf1, 0xd7, 0x4e, 0x23, 0x26, 0x3d,
	0xfe, 0xf9, 0x17, 0x5b, 0x55, 0xf1, 0x6f, 0xa4, 0x38, 0x83, 0x23, 0x3f, 0xdd, 0xe2, 0x0c, 0x8e,
	0xfe, 0x9c, 0x6a, 0x04, 0x83, 0xf8, 0x17, 0x58, 0x8c, 0x41, 0x5c, 0x98, 0x49, 0x6a, 0x30, 0x62,
	0xd9, 0x1e, 0x2d, 0x35, 0x1e, 0xab, 0x01, 0x5f, 0xb6, 0x7d, 0x28, 0x27, 0xcb, 0x68, 0xf2, 0x42,
	0x7a, 0x2c, 0x71, 0xe7, 0x5f, 0x1e, 0x8d, 0x64, 0xcc, 0x96, 0x90, 0xd9, 0xbc, 0x3c, 0x37, 0x82,
	0x19, 0x8e, 0x9d, 0xe0, 0x86, 0xc5, 0xa2, 0x23, 0xdc, 0x84, 0x72, 0xd7, 0x51, 0x6e, 0x62, 0x69,
	0xea, 0x44, 0x6e, 0x38, 0xb6, 0x01, 0x45, 0xa1, 0xe2, 0x21, 0x27, 0xf6, 0xb6, 0x58, 0xeb, 0xa9,
	0xce, 0x8f, 0xc0, 0x24, 0x99, 0xa8, 0xb3, 0xa9, 0x25, 0x86, 0x54, 0x6c, 0xdf, 0x8b, 0x95, 0x04,
	0x39, 0x31, 0x56, 0xa2, 0x44, 0x52, 0xad, 0x8e, 0x42, 0x1d, 0xbb, 0x67, 0x6c, 0x71, 0xd4, 0x88,
	0x0b, 0xcd, 0xc3, 0x93, 0x5c, 0x12, 0xa5, 0x87, 0x24, 0x97, 0x64, 0xda, 0x7e, 0x2c, 0x17, 0x36,
	0xaa, 0x07, 0x53, 0xa9, 0xbc, 0x53, 0xbe, 0x7c, 0x4c, 0x3a, 0x4a, 0x79, 0x5d, 0x39, 0x31, 0x59,
	0x55, 0xaf, 0x22, 0xbb, 0xaa, 0xac, 0xa4, 0x67, 0x28, 0x1a, 0x3e, 0x80, 0xa9, 0x54, 0x4e, 0xc5,
	0x39, 0x8e, 0xce, 0xee, 0x38, 0xc7, 0x63, 0x12, 0x31, 0xf5, 0x3a, 0x72, 0xbc, 0xa2, 0x2a, 0xa9,
	0xfd, 0x14, 0x51, 0x92, 0x29, 0x8b, 0x98, 0x46, 0x29, 0x51, 0x92, 0x69, 0x3a, 0x29, 0x4b, 0x32,
	0x3d, 0x92, 0x47, 0x1d, 0xcb, 0x34, 0xa2, 0x24, 0x4c, 0x5d, 0x28, 0x27, 0xd3, 0x1a, 0xbe, 0xf4,
	0x47, 0xa6, 0x54, 0xd5, 0xcb, 0xa3, 0x91, 0x8c, 0xa3, 0x8a, 0x1c, 0x2f, 0xab, 0x73, 0x29, 0x8e,
	0x9c, 0x90, 0x30, 0x0c, 0x49, 0x88, 0x98, 0x4c, 0x71, 0xe4, 0x2b, 0x47, 0xbd, 0xb6, 0x78, 0x6c,
	0x2c, 0x1e, 0x87, 0x3e, 0x36, 0x3e, 0x09, 0xd2, 0x1c, 0x52, 0x5c, 0x71, 0x92, 0x47, 0x70, 0x15,
	0x17, 0xd1, 0xe2, 0x71, 0xe8, 0x53, 0x71, 0x25, 0xa4, 0xeb, 0xeb, 0x50, 0x0d, 0x5d, 0x6f, 0x65,
	0xc7, 0xdd, 0x35, 0x4c, 0x67, 0x45, 0xfb, 0x0e, 0x7b, 0xb5, 0x11, 0xe0, 0xc8, 0xdf, 0xbe, 0xb1,
	0x6b, 0x87, 0x1c, 0x17, 0xba, 0xde, 0xaa, 0xf6, 0x1d, 0xf6, 0xeb, 0xe4, 0x60, 0x75, 0xd7, 0x75,
	0x87, 0x21, 0x0e, 0xaa, 0xe7, 0x11, 0xf4, 0xda, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x26, 0x3d,
	0xc2, 0x29, 0x80, 0x3d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CmdbClient is the client API for Cmdb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CmdbClient interface {
	// 实例拓扑
	InstanceTopology(ctx context.Context, in *InstanceTopologyRequest, opts ...grpc.CallOption) (*InstanceTopologyResponse, error)
	// 查找主机
	SearchHost(ctx context.Context, in *SearchHostRequest, opts ...grpc.CallOption) (*SearchHostResponse, error)
	// 导入主机
	ImportHost(ctx context.Context, in *ImportHostRequest, opts ...grpc.CallOption) (*ImportHostResponse, error)
	// 导入交维表
	ImportCrossTable(ctx context.Context, in *ImportCrossTableRequest, opts ...grpc.CallOption) (*ImportCrossTableResponse, error)
	// 导入lake节点
	ImportLake(ctx context.Context, in *ImportLakeRequest, opts ...grpc.CallOption) (*ImportLakeResponse, error)
	// 机房拓扑
	RoomTopology(ctx context.Context, in *RoomTopologyRequest, opts ...grpc.CallOption) (*RoomTopologyResponse, error)
	// 裸金属列表
	ServerList(ctx context.Context, in *ServerListRequest, opts ...grpc.CallOption) (*ServerListResponse, error)
	// 查询模块
	SearchModule(ctx context.Context, in *SearchModuleRequest, opts ...grpc.CallOption) (*SearchModuleResponse, error)
	// 查询导入历史记录列表
	ImportHistory(ctx context.Context, in *ImportHistoryRequest, opts ...grpc.CallOption) (*ImportHistoryResponse, error)
	// 实体的查询,包括 host，lake，vip，room列表
	SearchInst(ctx context.Context, in *SearchInstRequest, opts ...grpc.CallOption) (*SearchInstResponse, error)
	// 实体的更新,包括 host，lake，vip列表
	UpdateInst(ctx context.Context, in *UpdateInstRequest, opts ...grpc.CallOption) (*UpdateInstResponse, error)
	// 查询Lake节点
	SearchLake(ctx context.Context, in *SearchLakeRequest, opts ...grpc.CallOption) (*SearchLakeResponse, error)
	// 查询Lake节点下的主机列表
	SearchLakeHost(ctx context.Context, in *SearchLakeHostRequest, opts ...grpc.CallOption) (*SearchLakeHostResponse, error)
	// 通过IP获取节点的地区和位置信息
	SearchLakeArea(ctx context.Context, in *SearchLakeAreaRequest, opts ...grpc.CallOption) (*SearchLakeAreaResponse, error)
	// 导入实体资产
	ImportAsset(ctx context.Context, in *ImportAssetRequest, opts ...grpc.CallOption) (*ImportAssetResponse, error)
	// 导入交维表审批结果
	ImportReview(ctx context.Context, in *ImportReviewRequest, opts ...grpc.CallOption) (*ImportReviewResponse, error)
	// 查看导入的实体信息列表
	ImportDetail(ctx context.Context, in *ImportDetailRequest, opts ...grpc.CallOption) (*ImportDetailResponse, error)
	// 按level查询lake节点下主机列表
	SearchLevelHost(ctx context.Context, in *SearchLevelHostRequest, opts ...grpc.CallOption) (*SearchLevelHostResponse, error)
	// 修改lake节点上下线状态
	UpdateLakeState(ctx context.Context, in *UpdateLakeStateRequest, opts ...grpc.CallOption) (*UpdateLakeStateResponse, error)
	// 修改主机上下线状态
	UpdateHostState(ctx context.Context, in *UpdateHostStateRequest, opts ...grpc.CallOption) (*UpdateHostStateResponse, error)
	// VIP的状态更新
	UpdateVipState(ctx context.Context, in *UpdateVipStateRequest, opts ...grpc.CallOption) (*UpdateVipStateResponse, error)
	// 查询全部模块
	SearchModuleList(ctx context.Context, in *SearchModuleListRequest, opts ...grpc.CallOption) (*SearchModuleListResponse, error)
	// 查询全部模块
	SearchModuleHost(ctx context.Context, in *SearchModuleHostRequest, opts ...grpc.CallOption) (*SearchModuleHostResponse, error)
}

type cmdbClient struct {
	cc *grpc.ClientConn
}

func NewCmdbClient(cc *grpc.ClientConn) CmdbClient {
	return &cmdbClient{cc}
}

func (c *cmdbClient) InstanceTopology(ctx context.Context, in *InstanceTopologyRequest, opts ...grpc.CallOption) (*InstanceTopologyResponse, error) {
	out := new(InstanceTopologyResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/InstanceTopology", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchHost(ctx context.Context, in *SearchHostRequest, opts ...grpc.CallOption) (*SearchHostResponse, error) {
	out := new(SearchHostResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportHost(ctx context.Context, in *ImportHostRequest, opts ...grpc.CallOption) (*ImportHostResponse, error) {
	out := new(ImportHostResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportCrossTable(ctx context.Context, in *ImportCrossTableRequest, opts ...grpc.CallOption) (*ImportCrossTableResponse, error) {
	out := new(ImportCrossTableResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportCrossTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportLake(ctx context.Context, in *ImportLakeRequest, opts ...grpc.CallOption) (*ImportLakeResponse, error) {
	out := new(ImportLakeResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportLake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) RoomTopology(ctx context.Context, in *RoomTopologyRequest, opts ...grpc.CallOption) (*RoomTopologyResponse, error) {
	out := new(RoomTopologyResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/RoomTopology", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ServerList(ctx context.Context, in *ServerListRequest, opts ...grpc.CallOption) (*ServerListResponse, error) {
	out := new(ServerListResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ServerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchModule(ctx context.Context, in *SearchModuleRequest, opts ...grpc.CallOption) (*SearchModuleResponse, error) {
	out := new(SearchModuleResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportHistory(ctx context.Context, in *ImportHistoryRequest, opts ...grpc.CallOption) (*ImportHistoryResponse, error) {
	out := new(ImportHistoryResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchInst(ctx context.Context, in *SearchInstRequest, opts ...grpc.CallOption) (*SearchInstResponse, error) {
	out := new(SearchInstResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateInst(ctx context.Context, in *UpdateInstRequest, opts ...grpc.CallOption) (*UpdateInstResponse, error) {
	out := new(UpdateInstResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/UpdateInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchLake(ctx context.Context, in *SearchLakeRequest, opts ...grpc.CallOption) (*SearchLakeResponse, error) {
	out := new(SearchLakeResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchLake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchLakeHost(ctx context.Context, in *SearchLakeHostRequest, opts ...grpc.CallOption) (*SearchLakeHostResponse, error) {
	out := new(SearchLakeHostResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchLakeHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchLakeArea(ctx context.Context, in *SearchLakeAreaRequest, opts ...grpc.CallOption) (*SearchLakeAreaResponse, error) {
	out := new(SearchLakeAreaResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchLakeArea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportAsset(ctx context.Context, in *ImportAssetRequest, opts ...grpc.CallOption) (*ImportAssetResponse, error) {
	out := new(ImportAssetResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportReview(ctx context.Context, in *ImportReviewRequest, opts ...grpc.CallOption) (*ImportReviewResponse, error) {
	out := new(ImportReviewResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) ImportDetail(ctx context.Context, in *ImportDetailRequest, opts ...grpc.CallOption) (*ImportDetailResponse, error) {
	out := new(ImportDetailResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/ImportDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchLevelHost(ctx context.Context, in *SearchLevelHostRequest, opts ...grpc.CallOption) (*SearchLevelHostResponse, error) {
	out := new(SearchLevelHostResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchLevelHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateLakeState(ctx context.Context, in *UpdateLakeStateRequest, opts ...grpc.CallOption) (*UpdateLakeStateResponse, error) {
	out := new(UpdateLakeStateResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/UpdateLakeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateHostState(ctx context.Context, in *UpdateHostStateRequest, opts ...grpc.CallOption) (*UpdateHostStateResponse, error) {
	out := new(UpdateHostStateResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/UpdateHostState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateVipState(ctx context.Context, in *UpdateVipStateRequest, opts ...grpc.CallOption) (*UpdateVipStateResponse, error) {
	out := new(UpdateVipStateResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/UpdateVipState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchModuleList(ctx context.Context, in *SearchModuleListRequest, opts ...grpc.CallOption) (*SearchModuleListResponse, error) {
	out := new(SearchModuleListResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchModuleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) SearchModuleHost(ctx context.Context, in *SearchModuleHostRequest, opts ...grpc.CallOption) (*SearchModuleHostResponse, error) {
	out := new(SearchModuleHostResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/SearchModuleHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CmdbServer is the server API for Cmdb service.
type CmdbServer interface {
	// 实例拓扑
	InstanceTopology(context.Context, *InstanceTopologyRequest) (*InstanceTopologyResponse, error)
	// 查找主机
	SearchHost(context.Context, *SearchHostRequest) (*SearchHostResponse, error)
	// 导入主机
	ImportHost(context.Context, *ImportHostRequest) (*ImportHostResponse, error)
	// 导入交维表
	ImportCrossTable(context.Context, *ImportCrossTableRequest) (*ImportCrossTableResponse, error)
	// 导入lake节点
	ImportLake(context.Context, *ImportLakeRequest) (*ImportLakeResponse, error)
	// 机房拓扑
	RoomTopology(context.Context, *RoomTopologyRequest) (*RoomTopologyResponse, error)
	// 裸金属列表
	ServerList(context.Context, *ServerListRequest) (*ServerListResponse, error)
	// 查询模块
	SearchModule(context.Context, *SearchModuleRequest) (*SearchModuleResponse, error)
	// 查询导入历史记录列表
	ImportHistory(context.Context, *ImportHistoryRequest) (*ImportHistoryResponse, error)
	// 实体的查询,包括 host，lake，vip，room列表
	SearchInst(context.Context, *SearchInstRequest) (*SearchInstResponse, error)
	// 实体的更新,包括 host，lake，vip列表
	UpdateInst(context.Context, *UpdateInstRequest) (*UpdateInstResponse, error)
	// 查询Lake节点
	SearchLake(context.Context, *SearchLakeRequest) (*SearchLakeResponse, error)
	// 查询Lake节点下的主机列表
	SearchLakeHost(context.Context, *SearchLakeHostRequest) (*SearchLakeHostResponse, error)
	// 通过IP获取节点的地区和位置信息
	SearchLakeArea(context.Context, *SearchLakeAreaRequest) (*SearchLakeAreaResponse, error)
	// 导入实体资产
	ImportAsset(context.Context, *ImportAssetRequest) (*ImportAssetResponse, error)
	// 导入交维表审批结果
	ImportReview(context.Context, *ImportReviewRequest) (*ImportReviewResponse, error)
	// 查看导入的实体信息列表
	ImportDetail(context.Context, *ImportDetailRequest) (*ImportDetailResponse, error)
	// 按level查询lake节点下主机列表
	SearchLevelHost(context.Context, *SearchLevelHostRequest) (*SearchLevelHostResponse, error)
	// 修改lake节点上下线状态
	UpdateLakeState(context.Context, *UpdateLakeStateRequest) (*UpdateLakeStateResponse, error)
	// 修改主机上下线状态
	UpdateHostState(context.Context, *UpdateHostStateRequest) (*UpdateHostStateResponse, error)
	// VIP的状态更新
	UpdateVipState(context.Context, *UpdateVipStateRequest) (*UpdateVipStateResponse, error)
	// 查询全部模块
	SearchModuleList(context.Context, *SearchModuleListRequest) (*SearchModuleListResponse, error)
	// 查询全部模块
	SearchModuleHost(context.Context, *SearchModuleHostRequest) (*SearchModuleHostResponse, error)
}

// UnimplementedCmdbServer can be embedded to have forward compatible implementations.
type UnimplementedCmdbServer struct {
}

func (*UnimplementedCmdbServer) InstanceTopology(ctx context.Context, req *InstanceTopologyRequest) (*InstanceTopologyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstanceTopology not implemented")
}
func (*UnimplementedCmdbServer) SearchHost(ctx context.Context, req *SearchHostRequest) (*SearchHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchHost not implemented")
}
func (*UnimplementedCmdbServer) ImportHost(ctx context.Context, req *ImportHostRequest) (*ImportHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportHost not implemented")
}
func (*UnimplementedCmdbServer) ImportCrossTable(ctx context.Context, req *ImportCrossTableRequest) (*ImportCrossTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportCrossTable not implemented")
}
func (*UnimplementedCmdbServer) ImportLake(ctx context.Context, req *ImportLakeRequest) (*ImportLakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportLake not implemented")
}
func (*UnimplementedCmdbServer) RoomTopology(ctx context.Context, req *RoomTopologyRequest) (*RoomTopologyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RoomTopology not implemented")
}
func (*UnimplementedCmdbServer) ServerList(ctx context.Context, req *ServerListRequest) (*ServerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerList not implemented")
}
func (*UnimplementedCmdbServer) SearchModule(ctx context.Context, req *SearchModuleRequest) (*SearchModuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchModule not implemented")
}
func (*UnimplementedCmdbServer) ImportHistory(ctx context.Context, req *ImportHistoryRequest) (*ImportHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportHistory not implemented")
}
func (*UnimplementedCmdbServer) SearchInst(ctx context.Context, req *SearchInstRequest) (*SearchInstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchInst not implemented")
}
func (*UnimplementedCmdbServer) UpdateInst(ctx context.Context, req *UpdateInstRequest) (*UpdateInstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInst not implemented")
}
func (*UnimplementedCmdbServer) SearchLake(ctx context.Context, req *SearchLakeRequest) (*SearchLakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLake not implemented")
}
func (*UnimplementedCmdbServer) SearchLakeHost(ctx context.Context, req *SearchLakeHostRequest) (*SearchLakeHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLakeHost not implemented")
}
func (*UnimplementedCmdbServer) SearchLakeArea(ctx context.Context, req *SearchLakeAreaRequest) (*SearchLakeAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLakeArea not implemented")
}
func (*UnimplementedCmdbServer) ImportAsset(ctx context.Context, req *ImportAssetRequest) (*ImportAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportAsset not implemented")
}
func (*UnimplementedCmdbServer) ImportReview(ctx context.Context, req *ImportReviewRequest) (*ImportReviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportReview not implemented")
}
func (*UnimplementedCmdbServer) ImportDetail(ctx context.Context, req *ImportDetailRequest) (*ImportDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportDetail not implemented")
}
func (*UnimplementedCmdbServer) SearchLevelHost(ctx context.Context, req *SearchLevelHostRequest) (*SearchLevelHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLevelHost not implemented")
}
func (*UnimplementedCmdbServer) UpdateLakeState(ctx context.Context, req *UpdateLakeStateRequest) (*UpdateLakeStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLakeState not implemented")
}
func (*UnimplementedCmdbServer) UpdateHostState(ctx context.Context, req *UpdateHostStateRequest) (*UpdateHostStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHostState not implemented")
}
func (*UnimplementedCmdbServer) UpdateVipState(ctx context.Context, req *UpdateVipStateRequest) (*UpdateVipStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVipState not implemented")
}
func (*UnimplementedCmdbServer) SearchModuleList(ctx context.Context, req *SearchModuleListRequest) (*SearchModuleListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchModuleList not implemented")
}
func (*UnimplementedCmdbServer) SearchModuleHost(ctx context.Context, req *SearchModuleHostRequest) (*SearchModuleHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchModuleHost not implemented")
}

func RegisterCmdbServer(s *grpc.Server, srv CmdbServer) {
	s.RegisterService(&_Cmdb_serviceDesc, srv)
}

func _Cmdb_InstanceTopology_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceTopologyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).InstanceTopology(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/InstanceTopology",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).InstanceTopology(ctx, req.(*InstanceTopologyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchHost(ctx, req.(*SearchHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportHost(ctx, req.(*ImportHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportCrossTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportCrossTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportCrossTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportCrossTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportCrossTable(ctx, req.(*ImportCrossTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportLake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportLakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportLake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportLake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportLake(ctx, req.(*ImportLakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_RoomTopology_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomTopologyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).RoomTopology(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/RoomTopology",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).RoomTopology(ctx, req.(*RoomTopologyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ServerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ServerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ServerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ServerList(ctx, req.(*ServerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchModuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchModule(ctx, req.(*SearchModuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportHistory(ctx, req.(*ImportHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchInst(ctx, req.(*SearchInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateInst(ctx, req.(*UpdateInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchLake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchLake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchLake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchLake(ctx, req.(*SearchLakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchLakeHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLakeHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchLakeHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchLakeHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchLakeHost(ctx, req.(*SearchLakeHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchLakeArea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLakeAreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchLakeArea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchLakeArea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchLakeArea(ctx, req.(*SearchLakeAreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportAsset(ctx, req.(*ImportAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportReview(ctx, req.(*ImportReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_ImportDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).ImportDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/ImportDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).ImportDetail(ctx, req.(*ImportDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchLevelHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLevelHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchLevelHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchLevelHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchLevelHost(ctx, req.(*SearchLevelHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateLakeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLakeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateLakeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateLakeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateLakeState(ctx, req.(*UpdateLakeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateHostState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHostStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateHostState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateHostState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateHostState(ctx, req.(*UpdateHostStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateVipState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVipStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateVipState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateVipState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateVipState(ctx, req.(*UpdateVipStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchModuleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchModuleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchModuleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchModuleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchModuleList(ctx, req.(*SearchModuleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_SearchModuleHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchModuleHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).SearchModuleHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/SearchModuleHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).SearchModuleHost(ctx, req.(*SearchModuleHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cmdb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmdb.Cmdb",
	HandlerType: (*CmdbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InstanceTopology",
			Handler:    _Cmdb_InstanceTopology_Handler,
		},
		{
			MethodName: "SearchHost",
			Handler:    _Cmdb_SearchHost_Handler,
		},
		{
			MethodName: "ImportHost",
			Handler:    _Cmdb_ImportHost_Handler,
		},
		{
			MethodName: "ImportCrossTable",
			Handler:    _Cmdb_ImportCrossTable_Handler,
		},
		{
			MethodName: "ImportLake",
			Handler:    _Cmdb_ImportLake_Handler,
		},
		{
			MethodName: "RoomTopology",
			Handler:    _Cmdb_RoomTopology_Handler,
		},
		{
			MethodName: "ServerList",
			Handler:    _Cmdb_ServerList_Handler,
		},
		{
			MethodName: "SearchModule",
			Handler:    _Cmdb_SearchModule_Handler,
		},
		{
			MethodName: "ImportHistory",
			Handler:    _Cmdb_ImportHistory_Handler,
		},
		{
			MethodName: "SearchInst",
			Handler:    _Cmdb_SearchInst_Handler,
		},
		{
			MethodName: "UpdateInst",
			Handler:    _Cmdb_UpdateInst_Handler,
		},
		{
			MethodName: "SearchLake",
			Handler:    _Cmdb_SearchLake_Handler,
		},
		{
			MethodName: "SearchLakeHost",
			Handler:    _Cmdb_SearchLakeHost_Handler,
		},
		{
			MethodName: "SearchLakeArea",
			Handler:    _Cmdb_SearchLakeArea_Handler,
		},
		{
			MethodName: "ImportAsset",
			Handler:    _Cmdb_ImportAsset_Handler,
		},
		{
			MethodName: "ImportReview",
			Handler:    _Cmdb_ImportReview_Handler,
		},
		{
			MethodName: "ImportDetail",
			Handler:    _Cmdb_ImportDetail_Handler,
		},
		{
			MethodName: "SearchLevelHost",
			Handler:    _Cmdb_SearchLevelHost_Handler,
		},
		{
			MethodName: "UpdateLakeState",
			Handler:    _Cmdb_UpdateLakeState_Handler,
		},
		{
			MethodName: "UpdateHostState",
			Handler:    _Cmdb_UpdateHostState_Handler,
		},
		{
			MethodName: "UpdateVipState",
			Handler:    _Cmdb_UpdateVipState_Handler,
		},
		{
			MethodName: "SearchModuleList",
			Handler:    _Cmdb_SearchModuleList_Handler,
		},
		{
			MethodName: "SearchModuleHost",
			Handler:    _Cmdb_SearchModuleHost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmdb/cmdb.proto",
}
