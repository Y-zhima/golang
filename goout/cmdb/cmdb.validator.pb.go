// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cmdb/cmdb.proto

package cmdb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "git.fogcdn.top/axe/protos/goout/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *TopologyObject) Validate() error {
	for _, item := range this.Child {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Child", err)
			}
		}
	}
	return nil
}
func (this *InstanceTopologyRequest) Validate() error {
	return nil
}
func (this *InstanceTopologyResponse) Validate() error {
	if this.Instance != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Instance); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Instance", err)
		}
	}
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
func (this *HostObject) Validate() error {
	return nil
}
func (this *ModuleObject) Validate() error {
	return nil
}
func (this *SetObject) Validate() error {
	return nil
}
func (this *BizObject) Validate() error {
	return nil
}
func (this *HostInfoObject) Validate() error {
	if this.Host != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Host); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Host", err)
		}
	}
	for _, item := range this.Module {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Module", err)
			}
		}
	}
	for _, item := range this.Set {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Set", err)
			}
		}
	}
	for _, item := range this.Biz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Biz", err)
			}
		}
	}
	return nil
}
func (this *SearchHostRequest) Validate() error {
	if this.Paging != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Paging); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Paging", err)
		}
	}
	if this.Host != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Host); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Host", err)
		}
	}
	if this.Module != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Module); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Module", err)
		}
	}
	if this.Set != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Set); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Set", err)
		}
	}
	if this.Biz != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Biz); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Biz", err)
		}
	}
	return nil
}
func (this *SearchHostResponse) Validate() error {
	if this.Paging != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Paging); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Paging", err)
		}
	}
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	for _, item := range this.Info {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Info", err)
			}
		}
	}
	return nil
}
