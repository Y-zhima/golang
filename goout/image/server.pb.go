// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image/server.proto

package image

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//系统类型
type ImageType int32

const (
	ImageType_IMAGE_TYPE_UNDEFINED ImageType = 0
	ImageType_IMAGE_TYPE_CENTOS    ImageType = 1
	ImageType_IMAGE_TYPE_UBUNTU    ImageType = 2
	ImageType_IMAGE_TYPE_OPENSUSE  ImageType = 3
)

var ImageType_name = map[int32]string{
	0: "IMAGE_TYPE_UNDEFINED",
	1: "IMAGE_TYPE_CENTOS",
	2: "IMAGE_TYPE_UBUNTU",
	3: "IMAGE_TYPE_OPENSUSE",
}

var ImageType_value = map[string]int32{
	"IMAGE_TYPE_UNDEFINED": 0,
	"IMAGE_TYPE_CENTOS":    1,
	"IMAGE_TYPE_UBUNTU":    2,
	"IMAGE_TYPE_OPENSUSE":  3,
}

func (x ImageType) String() string {
	return proto.EnumName(ImageType_name, int32(x))
}

func (ImageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{0}
}

//镜像格式
type ImageFormat int32

const (
	ImageFormat_IMAGE_FORMAT_UNDEFINED ImageFormat = 0
	ImageFormat_IMAGE_FORMAT_ISO       ImageFormat = 1
	ImageFormat_IMAGE_FORMAT_QCOW2     ImageFormat = 2
)

var ImageFormat_name = map[int32]string{
	0: "IMAGE_FORMAT_UNDEFINED",
	1: "IMAGE_FORMAT_ISO",
	2: "IMAGE_FORMAT_QCOW2",
}

var ImageFormat_value = map[string]int32{
	"IMAGE_FORMAT_UNDEFINED": 0,
	"IMAGE_FORMAT_ISO":       1,
	"IMAGE_FORMAT_QCOW2":     2,
}

func (x ImageFormat) String() string {
	return proto.EnumName(ImageFormat_name, int32(x))
}

func (ImageFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{1}
}

type AppStatus int32

const (
	//未知
	AppStatus_APP_STATUS_UNDEFINED AppStatus = 0
	// 活动中
	AppStatus_APP_STATUS_STOPPED AppStatus = 1
	//未知
	AppStatus_APP_STATUS_ACTIVE AppStatus = 2
	// 已停止
	AppStatus_APP_STATUS_UNKNOWN AppStatus = 3
)

var AppStatus_name = map[int32]string{
	0: "APP_STATUS_UNDEFINED",
	1: "APP_STATUS_STOPPED",
	2: "APP_STATUS_ACTIVE",
	3: "APP_STATUS_UNKNOWN",
}

var AppStatus_value = map[string]int32{
	"APP_STATUS_UNDEFINED": 0,
	"APP_STATUS_STOPPED":   1,
	"APP_STATUS_ACTIVE":    2,
	"APP_STATUS_UNKNOWN":   3,
}

func (x AppStatus) String() string {
	return proto.EnumName(AppStatus_name, int32(x))
}

func (AppStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{2}
}

//--------------- 查询镜像列表---------------//
type QueryRequest struct {
	//镜像名称
	ImageName string `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	//系统类型，使用枚举，比如常用的CentOS\Ubuntu\openSUSE等
	ImageType ImageType `protobuf:"varint,2,opt,name=image_type,json=imageType,proto3,enum=image.ImageType" json:"image_type,omitempty"`
	//系统大版本号，比如CentOS的7.4,7.5,7.6等
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	//系统的小版本号，例如CentOS7.4下的1708
	SubVersion string `protobuf:"bytes,4,opt,name=sub_version,json=subVersion,proto3" json:"sub_version,omitempty"`
	//镜像的格式，使用枚举，例如iso，qcow2等
	Format ImageFormat `protobuf:"varint,5,opt,name=format,proto3,enum=image.ImageFormat" json:"format,omitempty"`
	// 镜像附加属性
	ImageAttrs []*ImageAttr `protobuf:"bytes,6,rep,name=image_attrs,json=imageAttrs,proto3" json:"image_attrs,omitempty"`
	//若没有入参，则默认查询阈值为第一页10条记录
	PageInfo             *PageInfo `protobuf:"bytes,7,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{0}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *QueryRequest) GetImageType() ImageType {
	if m != nil {
		return m.ImageType
	}
	return ImageType_IMAGE_TYPE_UNDEFINED
}

func (m *QueryRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *QueryRequest) GetSubVersion() string {
	if m != nil {
		return m.SubVersion
	}
	return ""
}

func (m *QueryRequest) GetFormat() ImageFormat {
	if m != nil {
		return m.Format
	}
	return ImageFormat_IMAGE_FORMAT_UNDEFINED
}

func (m *QueryRequest) GetImageAttrs() []*ImageAttr {
	if m != nil {
		return m.ImageAttrs
	}
	return nil
}

func (m *QueryRequest) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type ImageAttr struct {
	//属性、标签名称：例如docker
	AttrName string `protobuf:"bytes,1,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`
	//属性、标签的附加信息类型，例如可以说明是version表示版本号
	AttrAddType string `protobuf:"bytes,2,opt,name=attr_add_type,json=attrAddType,proto3" json:"attr_add_type,omitempty"`
	//属性、标签附加的值,例docker的版本CE或者EE
	AttrAddValue         string   `protobuf:"bytes,3,opt,name=attr_add_value,json=attrAddValue,proto3" json:"attr_add_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageAttr) Reset()         { *m = ImageAttr{} }
func (m *ImageAttr) String() string { return proto.CompactTextString(m) }
func (*ImageAttr) ProtoMessage()    {}
func (*ImageAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{1}
}

func (m *ImageAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageAttr.Unmarshal(m, b)
}
func (m *ImageAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageAttr.Marshal(b, m, deterministic)
}
func (m *ImageAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageAttr.Merge(m, src)
}
func (m *ImageAttr) XXX_Size() int {
	return xxx_messageInfo_ImageAttr.Size(m)
}
func (m *ImageAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageAttr.DiscardUnknown(m)
}

var xxx_messageInfo_ImageAttr proto.InternalMessageInfo

func (m *ImageAttr) GetAttrName() string {
	if m != nil {
		return m.AttrName
	}
	return ""
}

func (m *ImageAttr) GetAttrAddType() string {
	if m != nil {
		return m.AttrAddType
	}
	return ""
}

func (m *ImageAttr) GetAttrAddValue() string {
	if m != nil {
		return m.AttrAddValue
	}
	return ""
}

type QueryResponse struct {
	// 响应码
	Status *ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 响应对象
	Images               []*ImageObject `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	PageInfo             *PageInfo      `protobuf:"bytes,3,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{2}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetStatus() *ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *QueryResponse) GetImages() []*ImageObject {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *QueryResponse) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type ImageObject struct {
	// 镜像标识
	ImageId int64 `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	//镜像名称
	ImageName string `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	//系统类型，使用枚举，比如常用的CentOS\Ubuntu\openSUSE等
	ImageType ImageType `protobuf:"varint,3,opt,name=image_type,json=imageType,proto3,enum=image.ImageType" json:"image_type,omitempty"`
	//系统大版本号，比如CentOS的7.4,7.5,7.6等
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	//系统的小版本号，例如CentOS7.4下的1708
	SubVersion string `protobuf:"bytes,5,opt,name=sub_version,json=subVersion,proto3" json:"sub_version,omitempty"`
	//镜像的格式，使用枚举，例如iso，qcow2等
	Format ImageFormat `protobuf:"varint,6,opt,name=format,proto3,enum=image.ImageFormat" json:"format,omitempty"`
	// 镜像md5完整性校验码
	CheckSum string `protobuf:"bytes,7,opt,name=check_sum,json=checkSum,proto3" json:"check_sum,omitempty"`
	// 镜像存储在ceph或者其他后端存储的路径或者访问地址
	Uri string `protobuf:"bytes,8,opt,name=uri,proto3" json:"uri,omitempty"`
	// 镜像附加信息
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	// 镜像附加属性
	ImageAttrs           []*ImageAttr `protobuf:"bytes,10,rep,name=image_attrs,json=imageAttrs,proto3" json:"image_attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ImageObject) Reset()         { *m = ImageObject{} }
func (m *ImageObject) String() string { return proto.CompactTextString(m) }
func (*ImageObject) ProtoMessage()    {}
func (*ImageObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{3}
}

func (m *ImageObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageObject.Unmarshal(m, b)
}
func (m *ImageObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageObject.Marshal(b, m, deterministic)
}
func (m *ImageObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageObject.Merge(m, src)
}
func (m *ImageObject) XXX_Size() int {
	return xxx_messageInfo_ImageObject.Size(m)
}
func (m *ImageObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageObject.DiscardUnknown(m)
}

var xxx_messageInfo_ImageObject proto.InternalMessageInfo

func (m *ImageObject) GetImageId() int64 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *ImageObject) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *ImageObject) GetImageType() ImageType {
	if m != nil {
		return m.ImageType
	}
	return ImageType_IMAGE_TYPE_UNDEFINED
}

func (m *ImageObject) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ImageObject) GetSubVersion() string {
	if m != nil {
		return m.SubVersion
	}
	return ""
}

func (m *ImageObject) GetFormat() ImageFormat {
	if m != nil {
		return m.Format
	}
	return ImageFormat_IMAGE_FORMAT_UNDEFINED
}

func (m *ImageObject) GetCheckSum() string {
	if m != nil {
		return m.CheckSum
	}
	return ""
}

func (m *ImageObject) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ImageObject) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ImageObject) GetImageAttrs() []*ImageAttr {
	if m != nil {
		return m.ImageAttrs
	}
	return nil
}

//--------------- 健康监测---------------//
type HeatlthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeatlthRequest) Reset()         { *m = HeatlthRequest{} }
func (m *HeatlthRequest) String() string { return proto.CompactTextString(m) }
func (*HeatlthRequest) ProtoMessage()    {}
func (*HeatlthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{4}
}

func (m *HeatlthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeatlthRequest.Unmarshal(m, b)
}
func (m *HeatlthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeatlthRequest.Marshal(b, m, deterministic)
}
func (m *HeatlthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeatlthRequest.Merge(m, src)
}
func (m *HeatlthRequest) XXX_Size() int {
	return xxx_messageInfo_HeatlthRequest.Size(m)
}
func (m *HeatlthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeatlthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeatlthRequest proto.InternalMessageInfo

type HeatlthResponse struct {
	// 响应码
	Status *ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 响应对象
	ClusterInstances     []*ClusterInstance `protobuf:"bytes,2,rep,name=cluster_instances,json=clusterInstances,proto3" json:"cluster_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HeatlthResponse) Reset()         { *m = HeatlthResponse{} }
func (m *HeatlthResponse) String() string { return proto.CompactTextString(m) }
func (*HeatlthResponse) ProtoMessage()    {}
func (*HeatlthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{5}
}

func (m *HeatlthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeatlthResponse.Unmarshal(m, b)
}
func (m *HeatlthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeatlthResponse.Marshal(b, m, deterministic)
}
func (m *HeatlthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeatlthResponse.Merge(m, src)
}
func (m *HeatlthResponse) XXX_Size() int {
	return xxx_messageInfo_HeatlthResponse.Size(m)
}
func (m *HeatlthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeatlthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeatlthResponse proto.InternalMessageInfo

func (m *HeatlthResponse) GetStatus() *ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *HeatlthResponse) GetClusterInstances() []*ClusterInstance {
	if m != nil {
		return m.ClusterInstances
	}
	return nil
}

// 节点信息
type ClusterInstance struct {
	// 应用ip
	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	//应用名，集群名
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	//运行状态
	AppStatus AppStatus `protobuf:"varint,3,opt,name=app_status,json=appStatus,proto3,enum=image.AppStatus" json:"app_status,omitempty"`
	//信息
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInstance) Reset()         { *m = ClusterInstance{} }
func (m *ClusterInstance) String() string { return proto.CompactTextString(m) }
func (*ClusterInstance) ProtoMessage()    {}
func (*ClusterInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4e04821ce8bed97, []int{6}
}

func (m *ClusterInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInstance.Unmarshal(m, b)
}
func (m *ClusterInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInstance.Marshal(b, m, deterministic)
}
func (m *ClusterInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInstance.Merge(m, src)
}
func (m *ClusterInstance) XXX_Size() int {
	return xxx_messageInfo_ClusterInstance.Size(m)
}
func (m *ClusterInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInstance.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInstance proto.InternalMessageInfo

func (m *ClusterInstance) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ClusterInstance) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ClusterInstance) GetAppStatus() AppStatus {
	if m != nil {
		return m.AppStatus
	}
	return AppStatus_APP_STATUS_UNDEFINED
}

func (m *ClusterInstance) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("image.ImageType", ImageType_name, ImageType_value)
	proto.RegisterEnum("image.ImageFormat", ImageFormat_name, ImageFormat_value)
	proto.RegisterEnum("image.AppStatus", AppStatus_name, AppStatus_value)
	proto.RegisterType((*QueryRequest)(nil), "image.QueryRequest")
	proto.RegisterType((*ImageAttr)(nil), "image.ImageAttr")
	proto.RegisterType((*QueryResponse)(nil), "image.QueryResponse")
	proto.RegisterType((*ImageObject)(nil), "image.ImageObject")
	proto.RegisterType((*HeatlthRequest)(nil), "image.HeatlthRequest")
	proto.RegisterType((*HeatlthResponse)(nil), "image.HeatlthResponse")
	proto.RegisterType((*ClusterInstance)(nil), "image.ClusterInstance")
}

func init() { proto.RegisterFile("image/server.proto", fileDescriptor_c4e04821ce8bed97) }

var fileDescriptor_c4e04821ce8bed97 = []byte{
	// 826 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xd1, 0x6e, 0xdb, 0x36,
	0x14, 0xad, 0xec, 0xda, 0xb1, 0xae, 0xd3, 0x44, 0x65, 0x53, 0x4f, 0x4b, 0x31, 0x2c, 0x33, 0x36,
	0x20, 0x08, 0x56, 0x19, 0xf3, 0xf6, 0xb4, 0x37, 0xc5, 0x51, 0x36, 0x63, 0xa8, 0xac, 0x4a, 0x72,
	0x82, 0xed, 0xc5, 0x60, 0x24, 0xda, 0x55, 0x1b, 0x89, 0x1a, 0x49, 0x05, 0xcd, 0x07, 0xec, 0x1f,
	0xf6, 0xb4, 0xc7, 0xfd, 0xd3, 0xfe, 0x66, 0x10, 0x45, 0x79, 0x92, 0x1f, 0x12, 0xac, 0x2f, 0x02,
	0x79, 0xce, 0xbd, 0xbc, 0xbc, 0x87, 0x87, 0x22, 0xa0, 0x24, 0xc5, 0x1b, 0x32, 0xe1, 0x84, 0xdd,
	0x11, 0x66, 0xe5, 0x8c, 0x0a, 0x8a, 0x7a, 0x12, 0x3b, 0x56, 0x54, 0x44, 0xd3, 0x94, 0x66, 0x15,
	0x35, 0xfe, 0xbb, 0x03, 0xfb, 0x6f, 0x0b, 0xc2, 0xee, 0x7d, 0xf2, 0x7b, 0x41, 0xb8, 0x40, 0x5f,
	0x00, 0xc8, 0xb0, 0x55, 0x86, 0x53, 0x62, 0x6a, 0x27, 0xda, 0xa9, 0xee, 0xeb, 0x12, 0x71, 0x71,
	0x4a, 0xd0, 0xa4, 0xa6, 0xc5, 0x7d, 0x4e, 0xcc, 0xce, 0x89, 0x76, 0x7a, 0x30, 0x35, 0x2c, 0x09,
	0x59, 0xf3, 0xf2, 0x1b, 0xde, 0xe7, 0x44, 0x25, 0x94, 0x43, 0x64, 0xc2, 0xde, 0x1d, 0x61, 0x3c,
	0xa1, 0x99, 0xd9, 0x95, 0x8b, 0xd5, 0x53, 0xf4, 0x25, 0x0c, 0x79, 0x71, 0xb3, 0xaa, 0xd9, 0xa7,
	0x92, 0x05, 0x5e, 0xdc, 0x5c, 0xa9, 0x80, 0x33, 0xe8, 0xaf, 0x29, 0x4b, 0xb1, 0x30, 0x7b, 0xb2,
	0x0e, 0x6a, 0xd6, 0xb9, 0x94, 0x8c, 0xaf, 0x22, 0xd0, 0x77, 0x30, 0xac, 0xf6, 0x85, 0x85, 0x60,
	0xdc, 0xec, 0x9f, 0x74, 0x4f, 0x87, 0xed, 0x8d, 0xd9, 0x42, 0x30, 0xbf, 0xda, 0x7c, 0x39, 0xe4,
	0xe8, 0x5b, 0xd0, 0xf3, 0x32, 0x23, 0xc9, 0xd6, 0xd4, 0xdc, 0x3b, 0xd1, 0x4e, 0x87, 0xd3, 0x43,
	0x95, 0xe0, 0xe1, 0x0d, 0x99, 0x67, 0x6b, 0xea, 0x0f, 0x72, 0x35, 0x1a, 0x33, 0xd0, 0xb7, 0xcb,
	0xa0, 0x57, 0xa0, 0x97, 0x75, 0x9a, 0x1a, 0x0d, 0x4a, 0x40, 0x4a, 0x34, 0x86, 0x67, 0x92, 0xc4,
	0x71, 0xfc, 0x9f, 0x4a, 0xba, 0x3f, 0x2c, 0x41, 0x3b, 0x8e, 0xa5, 0x2a, 0x5f, 0xc3, 0xc1, 0x36,
	0xe6, 0x0e, 0xdf, 0x16, 0x44, 0x89, 0xb3, 0xaf, 0x82, 0xae, 0x4a, 0x6c, 0xfc, 0xa7, 0x06, 0xcf,
	0xd4, 0xe1, 0xf0, 0x9c, 0x66, 0x9c, 0xa0, 0xd7, 0xd0, 0xe7, 0x02, 0x8b, 0x82, 0xcb, 0xaa, 0xc3,
	0xe9, 0x4b, 0xb5, 0xe1, 0x3a, 0x20, 0x90, 0xa4, 0xaf, 0x82, 0x4a, 0x05, 0x25, 0xcf, 0xcd, 0x8e,
	0x14, 0xa4, 0xa5, 0xe0, 0xe2, 0xe6, 0x3d, 0x89, 0x84, 0xaf, 0x22, 0xda, 0x72, 0x74, 0x1f, 0x93,
	0xe3, 0x9f, 0x0e, 0x0c, 0x1b, 0xab, 0xa0, 0xcf, 0x61, 0x50, 0xe9, 0x9f, 0xc4, 0x72, 0x6b, 0x5d,
	0x7f, 0x4f, 0xce, 0xe7, 0xf1, 0x8e, 0xa3, 0x3a, 0x0f, 0x3b, 0xaa, 0xfb, 0xbf, 0x1c, 0xf5, 0xf4,
	0x41, 0x47, 0xf5, 0x1e, 0x70, 0x54, 0xff, 0x51, 0x47, 0xbd, 0x02, 0x3d, 0x7a, 0x47, 0xa2, 0x0f,
	0x2b, 0x5e, 0xa4, 0xd2, 0x1e, 0xba, 0x3f, 0x90, 0x40, 0x50, 0xa4, 0xc8, 0x80, 0x6e, 0xc1, 0x12,
	0x73, 0x20, 0xe1, 0x72, 0x88, 0x46, 0xd0, 0x67, 0x24, 0xc5, 0xec, 0x83, 0xa9, 0x4b, 0x50, 0xcd,
	0x76, 0x8d, 0x09, 0x8f, 0x1b, 0x73, 0x6c, 0xc0, 0xc1, 0xcf, 0x04, 0x8b, 0x5b, 0xf1, 0x4e, 0x5d,
	0xca, 0xf1, 0x1f, 0x1a, 0x1c, 0x6e, 0xa1, 0x4f, 0xb3, 0xc2, 0x0c, 0x9e, 0x47, 0xb7, 0x05, 0x17,
	0x84, 0xad, 0x92, 0x8c, 0x0b, 0x9c, 0x45, 0x5b, 0x57, 0x8c, 0x54, 0xe6, 0xac, 0xe2, 0xe7, 0x8a,
	0xf6, 0x8d, 0xa8, 0x0d, 0xf0, 0xf1, 0x5f, 0x1a, 0x1c, 0xee, 0x44, 0xc9, 0xe3, 0xcd, 0x4b, 0x23,
	0x33, 0xc2, 0xf9, 0xf6, 0x87, 0x91, 0xdb, 0x15, 0x80, 0xbe, 0x82, 0xfd, 0xba, 0x6e, 0xe3, 0xfc,
	0x87, 0x0a, 0xab, 0x1d, 0x80, 0xf3, 0x7c, 0xa5, 0xba, 0x69, 0x3b, 0xc0, 0xce, 0x73, 0xd5, 0x88,
	0x8e, 0xeb, 0x61, 0xe9, 0x80, 0x94, 0x70, 0x8e, 0x37, 0xa4, 0x76, 0x80, 0x9a, 0x9e, 0xdd, 0xaa,
	0x5b, 0xaa, 0x8c, 0x72, 0x34, 0x7f, 0x63, 0xff, 0xe4, 0xac, 0xc2, 0x5f, 0x3d, 0x67, 0xb5, 0x74,
	0x2f, 0x9c, 0xcb, 0xb9, 0xeb, 0x5c, 0x18, 0x4f, 0xd0, 0x4b, 0x78, 0xde, 0x60, 0x66, 0x8e, 0x1b,
	0x2e, 0x02, 0x43, 0xdb, 0x81, 0x97, 0xe7, 0x4b, 0x37, 0x5c, 0x1a, 0x1d, 0xf4, 0x19, 0xbc, 0x68,
	0xc0, 0x0b, 0xcf, 0x71, 0x83, 0x65, 0xe0, 0x18, 0xdd, 0xb3, 0x6b, 0x75, 0x07, 0x2a, 0xe7, 0xa0,
	0x63, 0x18, 0x55, 0x71, 0x97, 0x0b, 0xff, 0x8d, 0x1d, 0xb6, 0x2a, 0x1e, 0x81, 0xd1, 0xe2, 0xe6,
	0xc1, 0xc2, 0xd0, 0xd0, 0x08, 0x50, 0x0b, 0x7d, 0x3b, 0x5b, 0x5c, 0x4f, 0x8d, 0x4e, 0xd9, 0x86,
	0xdd, 0xe8, 0xf6, 0xc8, 0xf6, 0xbc, 0x55, 0x10, 0xda, 0xe1, 0x32, 0x68, 0x2d, 0x3a, 0x02, 0xd4,
	0x60, 0x82, 0x70, 0xe1, 0x79, 0xce, 0x45, 0xd5, 0x47, 0x03, 0xb7, 0x67, 0xe1, 0xfc, 0xca, 0x31,
	0x3a, 0x3b, 0xe1, 0x4b, 0xf7, 0x17, 0x77, 0x71, 0xed, 0x1a, 0xdd, 0xe9, 0x3d, 0xf4, 0x64, 0x1b,
	0xe8, 0x07, 0xe8, 0xc9, 0xdf, 0x0d, 0x7a, 0xa1, 0xd4, 0x6f, 0xbe, 0x0c, 0xc7, 0x47, 0x6d, 0xb0,
	0x72, 0xd9, 0xf8, 0x09, 0xfa, 0x11, 0xf6, 0x94, 0x37, 0x51, 0xed, 0xc1, 0xb6, 0x7d, 0x8f, 0x47,
	0xbb, 0x70, 0x9d, 0x7b, 0xfe, 0x1e, 0x5e, 0x47, 0x34, 0xb5, 0xd6, 0xeb, 0x88, 0x5b, 0x1f, 0x53,
	0x16, 0x47, 0x56, 0xc2, 0x68, 0x96, 0x44, 0x56, 0x9a, 0x30, 0x46, 0x99, 0xb5, 0x61, 0x79, 0x54,
	0x25, 0x07, 0xf2, 0x41, 0x3b, 0x37, 0x1a, 0x13, 0xaf, 0x7c, 0xc1, 0x3c, 0xed, 0xb7, 0x6f, 0x36,
	0x89, 0xb0, 0xd6, 0x74, 0x13, 0xc5, 0x99, 0x25, 0x68, 0x3e, 0xc1, 0x1f, 0xc9, 0x44, 0xbe, 0x6e,
	0x7c, 0xb2, 0xa1, 0xb4, 0x10, 0x13, 0x99, 0x73, 0xd3, 0x97, 0xd8, 0xf7, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x43, 0xc7, 0x13, 0x0b, 0x22, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImageClient is the client API for Image service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageClient interface {
	// 查询镜像列表
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// 健康监测
	Heatlth(ctx context.Context, in *HeatlthRequest, opts ...grpc.CallOption) (*HeatlthResponse, error)
}

type imageClient struct {
	cc *grpc.ClientConn
}

func NewImageClient(cc *grpc.ClientConn) ImageClient {
	return &imageClient{cc}
}

func (c *imageClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/image.Image/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClient) Heatlth(ctx context.Context, in *HeatlthRequest, opts ...grpc.CallOption) (*HeatlthResponse, error) {
	out := new(HeatlthResponse)
	err := c.cc.Invoke(ctx, "/image.Image/Heatlth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageServer is the server API for Image service.
type ImageServer interface {
	// 查询镜像列表
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	// 健康监测
	Heatlth(context.Context, *HeatlthRequest) (*HeatlthResponse, error)
}

// UnimplementedImageServer can be embedded to have forward compatible implementations.
type UnimplementedImageServer struct {
}

func (*UnimplementedImageServer) Query(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedImageServer) Heatlth(ctx context.Context, req *HeatlthRequest) (*HeatlthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heatlth not implemented")
}

func RegisterImageServer(s *grpc.Server, srv ImageServer) {
	s.RegisterService(&_Image_serviceDesc, srv)
}

func _Image_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/image.Image/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Image_Heatlth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeatlthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServer).Heatlth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/image.Image/Heatlth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServer).Heatlth(ctx, req.(*HeatlthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Image_serviceDesc = grpc.ServiceDesc{
	ServiceName: "image.Image",
	HandlerType: (*ImageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Image_Query_Handler,
		},
		{
			MethodName: "Heatlth",
			Handler:    _Image_Heatlth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "image/server.proto",
}
