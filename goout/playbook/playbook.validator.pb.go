// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: playbook/playbook.proto

package playbook

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "git.fogcdn.top/axe/protos/goout/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ProjectObject) Validate() error {
	for _, item := range this.Entrypoint {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Entrypoint", err)
			}
		}
	}
	if this.Creator != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Creator); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Creator", err)
		}
	}
	return nil
}
func (this *CreateRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`项目名称不能为空`))
	}
	if this.Url == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Url", fmt.Errorf(`URL不能为空`))
	}
	if _, ok := UrlType_name[int32(this.UrlType)]; !ok {
		return github_com_mwitkow_go_proto_validators.FieldError("UrlType", fmt.Errorf(`URL类型不正确`))
	}
	if len(this.Entrypoint) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Entrypoint", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Entrypoint))
	}
	return nil
}
func (this *CreateResponse) Validate() error {
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
func (this *GetRequest) Validate() error {
	return nil
}
func (this *GetResponse) Validate() error {
	if this.Project != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Project); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Project", err)
		}
	}
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
func (this *FilterRequest) Validate() error {
	if this.Paging != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Paging); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Paging", err)
		}
	}
	return nil
}
func (this *FilterResponse) Validate() error {
	for _, item := range this.Projects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Projects", err)
			}
		}
	}
	if this.Paging != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Paging); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Paging", err)
		}
	}
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
func (this *UpdateRequest) Validate() error {
	if !(this.PlaybookId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("PlaybookId", fmt.Errorf(`项目ID不能为空`))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`项目名称不能为空`))
	}
	return nil
}
func (this *UpdateResponse) Validate() error {
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
func (this *PlaybookEntrypointObject) Validate() error {
	return nil
}
func (this *SaveVersionRequest) Validate() error {
	return nil
}
func (this *SaveVersionResponse) Validate() error {
	if this.Status != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Status); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Status", err)
		}
	}
	return nil
}
