// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule/schedule.proto

package schedule

import (
	context "context"
	fmt "fmt"
	cmdb "git.fogcdn.top/axe/protos/goout/cmdb"
	common "git.fogcdn.top/axe/protos/goout/common"
	template "git.fogcdn.top/axe/protos/goout/template"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 任务状态
type ScheduleStatus int32

const (
	ScheduleStatus_OFF ScheduleStatus = 0
	ScheduleStatus_ON  ScheduleStatus = 1
)

var ScheduleStatus_name = map[int32]string{
	0: "OFF",
	1: "ON",
}

var ScheduleStatus_value = map[string]int32{
	"OFF": 0,
	"ON":  1,
}

func (x ScheduleStatus) String() string {
	return proto.EnumName(ScheduleStatus_name, int32(x))
}

func (ScheduleStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{0}
}

// 任务类型 0-undefined 1-作业模板；2-容器部署 3-裸金属管理
type TaskType int32

const (
	// 0-undefined
	TaskType_UNDEFINED TaskType = 0
	// 1-作业模板
	TaskType_PLAYBOOK TaskType = 1
	// 2-容器部署
	TaskType_CONTAINER TaskType = 2
	// 3-裸金属管理
	TaskType_BARE_METAL TaskType = 3
)

var TaskType_name = map[int32]string{
	0: "UNDEFINED",
	1: "PLAYBOOK",
	2: "CONTAINER",
	3: "BARE_METAL",
}

var TaskType_value = map[string]int32{
	"UNDEFINED":  0,
	"PLAYBOOK":   1,
	"CONTAINER":  2,
	"BARE_METAL": 3,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{1}
}

// 定时任务实例
type ScheduleObject struct {
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 模板实例
	Template *template.TemplateObject `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	// 定时任务名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 开始日期
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 开始时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 定时任务表达式
	CronExpression string `protobuf:"bytes,6,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	// 任务状态
	Status ScheduleStatus `protobuf:"varint,7,opt,name=status,proto3,enum=schedule.ScheduleStatus" json:"status,omitempty"`
	// 任务类型
	TaskType TaskType `protobuf:"varint,8,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	// 执行总数
	ExecuteCount         int32    `protobuf:"varint,9,opt,name=execute_count,json=executeCount,proto3" json:"execute_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleObject) Reset()         { *m = ScheduleObject{} }
func (m *ScheduleObject) String() string { return proto.CompactTextString(m) }
func (*ScheduleObject) ProtoMessage()    {}
func (*ScheduleObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{0}
}

func (m *ScheduleObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleObject.Unmarshal(m, b)
}
func (m *ScheduleObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleObject.Marshal(b, m, deterministic)
}
func (m *ScheduleObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleObject.Merge(m, src)
}
func (m *ScheduleObject) XXX_Size() int {
	return xxx_messageInfo_ScheduleObject.Size(m)
}
func (m *ScheduleObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleObject.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleObject proto.InternalMessageInfo

func (m *ScheduleObject) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *ScheduleObject) GetTemplate() *template.TemplateObject {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *ScheduleObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScheduleObject) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ScheduleObject) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ScheduleObject) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

func (m *ScheduleObject) GetStatus() ScheduleStatus {
	if m != nil {
		return m.Status
	}
	return ScheduleStatus_OFF
}

func (m *ScheduleObject) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TaskType_UNDEFINED
}

func (m *ScheduleObject) GetExecuteCount() int32 {
	if m != nil {
		return m.ExecuteCount
	}
	return 0
}

// 创建定时任务的请求内容体
type CreateScheduleObject struct {
	// 模板ID
	TemplateId int32 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// 定时任务名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 定时任务开始时间
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 定时任务结束时间
	EndTime string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 定时任务表达式
	CronExpression string `protobuf:"bytes,5,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	// 任务类型
	TaskType             TaskType `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateScheduleObject) Reset()         { *m = CreateScheduleObject{} }
func (m *CreateScheduleObject) String() string { return proto.CompactTextString(m) }
func (*CreateScheduleObject) ProtoMessage()    {}
func (*CreateScheduleObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{1}
}

func (m *CreateScheduleObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScheduleObject.Unmarshal(m, b)
}
func (m *CreateScheduleObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScheduleObject.Marshal(b, m, deterministic)
}
func (m *CreateScheduleObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScheduleObject.Merge(m, src)
}
func (m *CreateScheduleObject) XXX_Size() int {
	return xxx_messageInfo_CreateScheduleObject.Size(m)
}
func (m *CreateScheduleObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScheduleObject.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScheduleObject proto.InternalMessageInfo

func (m *CreateScheduleObject) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *CreateScheduleObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateScheduleObject) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *CreateScheduleObject) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *CreateScheduleObject) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

func (m *CreateScheduleObject) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TaskType_UNDEFINED
}

// 创建定时任务的请求返回内容体
type CreateScheduleResponseObject struct {
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 定时任务创建时间
	Created              string   `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateScheduleResponseObject) Reset()         { *m = CreateScheduleResponseObject{} }
func (m *CreateScheduleResponseObject) String() string { return proto.CompactTextString(m) }
func (*CreateScheduleResponseObject) ProtoMessage()    {}
func (*CreateScheduleResponseObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{2}
}

func (m *CreateScheduleResponseObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScheduleResponseObject.Unmarshal(m, b)
}
func (m *CreateScheduleResponseObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScheduleResponseObject.Marshal(b, m, deterministic)
}
func (m *CreateScheduleResponseObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScheduleResponseObject.Merge(m, src)
}
func (m *CreateScheduleResponseObject) XXX_Size() int {
	return xxx_messageInfo_CreateScheduleResponseObject.Size(m)
}
func (m *CreateScheduleResponseObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScheduleResponseObject.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScheduleResponseObject proto.InternalMessageInfo

func (m *CreateScheduleResponseObject) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *CreateScheduleResponseObject) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

// 创建定时任务请求
type CreateRequest struct {
	// 创建定时任务的请求内容体
	Schedules []*CreateScheduleObject `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	// cmdb的搜索条件
	CmdbSearchRequest []*cmdb.ChooseHostRequest `protobuf:"bytes,2,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 额外变量JSON String 例如： {"key":"testKey","value":"testVal","description":"测试描述"}
	ExtraVar             string   `protobuf:"bytes,3,opt,name=extra_var,json=extraVar,proto3" json:"extra_var,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{3}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetSchedules() []*CreateScheduleObject {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *CreateRequest) GetCmdbSearchRequest() []*cmdb.ChooseHostRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *CreateRequest) GetExtraVar() string {
	if m != nil {
		return m.ExtraVar
	}
	return ""
}

// 创建定时任务请求返回
type CreateResponse struct {
	// 创建定时任务的请求返回内容体
	Schedules []*CreateScheduleResponseObject `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	// 返回请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{4}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetSchedules() []*CreateScheduleResponseObject {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *CreateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 获取定时任务请求
type GetRequest struct {
	// 定时任务ID
	ScheduleId           int32    `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{5}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

// 获取定时任务请求返回
type GetResponse struct {
	// 定时任务实例
	Schedule *ScheduleObject `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{6}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetSchedule() *ScheduleObject {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *GetResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 筛选定时任务请求
type FilterRequest struct {
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// 用于筛选的定时任务名字的关键字
	ScheduleName string `protobuf:"bytes,2,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	// 用于筛选的定时任务的任务类型
	TaskType             TaskType `protobuf:"varint,3,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterRequest) Reset()         { *m = FilterRequest{} }
func (m *FilterRequest) String() string { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()    {}
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{7}
}

func (m *FilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRequest.Unmarshal(m, b)
}
func (m *FilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRequest.Marshal(b, m, deterministic)
}
func (m *FilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRequest.Merge(m, src)
}
func (m *FilterRequest) XXX_Size() int {
	return xxx_messageInfo_FilterRequest.Size(m)
}
func (m *FilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRequest proto.InternalMessageInfo

func (m *FilterRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterRequest) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

func (m *FilterRequest) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TaskType_UNDEFINED
}

// 筛选定时任务请求返回
type FilterResponse struct {
	// 筛选到的多个定时任务实例
	Schedules []*ScheduleObject `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FilterResponse) Reset()         { *m = FilterResponse{} }
func (m *FilterResponse) String() string { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()    {}
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{8}
}

func (m *FilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterResponse.Unmarshal(m, b)
}
func (m *FilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterResponse.Marshal(b, m, deterministic)
}
func (m *FilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterResponse.Merge(m, src)
}
func (m *FilterResponse) XXX_Size() int {
	return xxx_messageInfo_FilterResponse.Size(m)
}
func (m *FilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterResponse proto.InternalMessageInfo

func (m *FilterResponse) GetSchedules() []*ScheduleObject {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *FilterResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 更新定时任务请求
type UpdateRequest struct {
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 定时任务名字
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 定时任务开启时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 定时任务结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 定时任务表达式
	CronExpression       string   `protobuf:"bytes,6,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{9}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *UpdateRequest) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *UpdateRequest) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

// 更新请求返回
type UpdateResponse struct {
	// 定时任务更新时间
	Updated string `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{10}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *UpdateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 切换定时任务状态请求
type SwitchStatusRequest struct {
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 定时任务状态
	ScheduleStatus       ScheduleStatus `protobuf:"varint,2,opt,name=schedule_status,json=scheduleStatus,proto3,enum=schedule.ScheduleStatus" json:"schedule_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SwitchStatusRequest) Reset()         { *m = SwitchStatusRequest{} }
func (m *SwitchStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SwitchStatusRequest) ProtoMessage()    {}
func (*SwitchStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{11}
}

func (m *SwitchStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStatusRequest.Unmarshal(m, b)
}
func (m *SwitchStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStatusRequest.Marshal(b, m, deterministic)
}
func (m *SwitchStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStatusRequest.Merge(m, src)
}
func (m *SwitchStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SwitchStatusRequest.Size(m)
}
func (m *SwitchStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStatusRequest proto.InternalMessageInfo

func (m *SwitchStatusRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *SwitchStatusRequest) GetScheduleStatus() ScheduleStatus {
	if m != nil {
		return m.ScheduleStatus
	}
	return ScheduleStatus_OFF
}

// 切换定时任务状态请求返回
type SwitchStatusResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SwitchStatusResponse) Reset()         { *m = SwitchStatusResponse{} }
func (m *SwitchStatusResponse) String() string { return proto.CompactTextString(m) }
func (*SwitchStatusResponse) ProtoMessage()    {}
func (*SwitchStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{12}
}

func (m *SwitchStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStatusResponse.Unmarshal(m, b)
}
func (m *SwitchStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStatusResponse.Marshal(b, m, deterministic)
}
func (m *SwitchStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStatusResponse.Merge(m, src)
}
func (m *SwitchStatusResponse) XXX_Size() int {
	return xxx_messageInfo_SwitchStatusResponse.Size(m)
}
func (m *SwitchStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStatusResponse proto.InternalMessageInfo

func (m *SwitchStatusResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("schedule.ScheduleStatus", ScheduleStatus_name, ScheduleStatus_value)
	proto.RegisterEnum("schedule.TaskType", TaskType_name, TaskType_value)
	proto.RegisterType((*ScheduleObject)(nil), "schedule.ScheduleObject")
	proto.RegisterType((*CreateScheduleObject)(nil), "schedule.CreateScheduleObject")
	proto.RegisterType((*CreateScheduleResponseObject)(nil), "schedule.CreateScheduleResponseObject")
	proto.RegisterType((*CreateRequest)(nil), "schedule.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "schedule.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "schedule.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "schedule.GetResponse")
	proto.RegisterType((*FilterRequest)(nil), "schedule.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "schedule.FilterResponse")
	proto.RegisterType((*UpdateRequest)(nil), "schedule.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "schedule.UpdateResponse")
	proto.RegisterType((*SwitchStatusRequest)(nil), "schedule.SwitchStatusRequest")
	proto.RegisterType((*SwitchStatusResponse)(nil), "schedule.SwitchStatusResponse")
}

func init() { proto.RegisterFile("schedule/schedule.proto", fileDescriptor_52705c336be9b629) }

var fileDescriptor_52705c336be9b629 = []byte{
	// 1346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x5f, 0x6f, 0xd3, 0x56,
	0x14, 0xaf, 0x93, 0x92, 0x26, 0xa7, 0x6d, 0xc8, 0x6e, 0xcb, 0xea, 0x95, 0xd2, 0x04, 0xb3, 0xb5,
	0x5d, 0x44, 0xe3, 0xad, 0x43, 0x20, 0x75, 0x9a, 0x50, 0xd2, 0x3f, 0xac, 0x1b, 0x6b, 0x91, 0x5b,
	0x26, 0x60, 0xd2, 0x32, 0xd7, 0xb9, 0xb8, 0x1e, 0x8d, 0xed, 0xd9, 0x37, 0xb4, 0x68, 0x9a, 0xb4,
	0xbf, 0x3c, 0x6c, 0x43, 0x63, 0xf0, 0x80, 0x84, 0x86, 0xb6, 0x4e, 0x9a, 0x60, 0x2f, 0x3c, 0x21,
	0xc4, 0x28, 0x63, 0xdf, 0x21, 0xfb, 0x00, 0x95, 0xaa, 0x26, 0x65, 0xdf, 0x62, 0xf2, 0xb5, 0xaf,
	0x63, 0xa7, 0x05, 0xca, 0xd8, 0x4b, 0x7b, 0x7d, 0xfe, 0x9f, 0xf3, 0xbb, 0xe7, 0x67, 0x07, 0x7a,
	0x6c, 0x65, 0x01, 0x97, 0x2a, 0x8b, 0x58, 0x64, 0x87, 0x9c, 0x69, 0x19, 0xc4, 0x40, 0x71, 0xf6,
	0xdc, 0xdb, 0xa7, 0x1a, 0x86, 0xba, 0x88, 0x45, 0xd9, 0xd4, 0x44, 0x59, 0xd7, 0x0d, 0x22, 0x13,
	0xcd, 0xd0, 0x6d, 0xd7, 0xae, 0xf7, 0x20, 0xfd, 0xa7, 0x0c, 0xab, 0x58, 0x1f, 0xb6, 0x97, 0x64,
	0x55, 0xc5, 0x96, 0x68, 0x98, 0xd4, 0x62, 0x1b, 0xeb, 0xc3, 0xaa, 0x46, 0x16, 0x2a, 0xf3, 0x39,
	0xc5, 0x28, 0x8b, 0xe5, 0x25, 0x8d, 0x9c, 0x33, 0x96, 0x44, 0xd5, 0x18, 0xa6, 0xca, 0xe1, 0xf3,
	0xf2, 0xa2, 0x56, 0x92, 0x89, 0x61, 0xd9, 0xa2, 0x7f, 0xf4, 0xfc, 0x52, 0x8a, 0x51, 0x2e, 0x1b,
	0xba, 0x53, 0x83, 0x27, 0xd9, 0xad, 0x94, 0x4b, 0xf3, 0xa2, 0xf3, 0xc7, 0x13, 0xf4, 0x10, 0x5c,
	0x36, 0x17, 0x65, 0x82, 0x45, 0x76, 0x70, 0x15, 0x42, 0x3d, 0x02, 0xc9, 0x59, 0xaf, 0x99, 0x99,
	0xf9, 0x8f, 0xb1, 0x42, 0x50, 0x1a, 0xda, 0x59, 0x7b, 0x45, 0xad, 0xc4, 0x73, 0x19, 0x6e, 0x68,
	0x97, 0x04, 0x4c, 0x34, 0x55, 0x42, 0x87, 0x20, 0xce, 0xa2, 0xf0, 0x91, 0x0c, 0x37, 0xd4, 0x3e,
	0xc2, 0xe7, 0xfc, 0xb0, 0x73, 0xde, 0xc1, 0x0d, 0x26, 0xf9, 0x96, 0x08, 0x41, 0xab, 0x2e, 0x97,
	0x31, 0x1f, 0xcd, 0x70, 0x43, 0x09, 0x89, 0x9e, 0xd1, 0x3e, 0x00, 0x9b, 0xc8, 0x16, 0x29, 0x12,
	0xad, 0x8c, 0xf9, 0x56, 0xaa, 0x49, 0x50, 0xc9, 0x9c, 0x56, 0xc6, 0xe8, 0x25, 0x88, 0x63, 0xbd,
	0xe4, 0x2a, 0x77, 0x51, 0x65, 0x1b, 0xd6, 0x4b, 0x54, 0x35, 0x08, 0xbb, 0x15, 0xcb, 0xd0, 0x8b,
	0x78, 0xd9, 0xb4, 0xb0, 0x6d, 0x6b, 0x86, 0xce, 0xc7, 0xa8, 0x45, 0xd2, 0x11, 0x4f, 0xf8, 0x52,
	0xf4, 0x1a, 0xc4, 0x6c, 0x22, 0x93, 0x8a, 0xcd, 0xb7, 0x65, 0xb8, 0xa1, 0xe4, 0x08, 0x9f, 0xf3,
	0xb1, 0x64, 0x7d, 0xcf, 0x52, 0xbd, 0xe4, 0xd9, 0x21, 0x11, 0x12, 0x44, 0xb6, 0xcf, 0x15, 0xc9,
	0x05, 0x13, 0xf3, 0x71, 0xea, 0x84, 0x1a, 0x4e, 0x73, 0xb2, 0x7d, 0x6e, 0xee, 0x82, 0x89, 0xa5,
	0x38, 0xf1, 0x4e, 0xe8, 0x00, 0x74, 0xe2, 0x65, 0xac, 0x54, 0x08, 0x2e, 0x2a, 0x46, 0x45, 0x27,
	0x7c, 0x82, 0x8e, 0xac, 0xc3, 0x13, 0x8e, 0x39, 0x32, 0xe1, 0xc7, 0x28, 0x74, 0x8f, 0x59, 0x58,
	0x26, 0xb8, 0x69, 0xdc, 0x6f, 0x41, 0x3b, 0x9b, 0x91, 0x3f, 0xee, 0x42, 0xdf, 0xfa, 0x5a, 0x9a,
	0x4f, 0xb5, 0x64, 0xbb, 0xeb, 0xb7, 0x56, 0xea, 0x37, 0xfe, 0x9a, 0x1a, 0xdf, 0xb8, 0x77, 0xe9,
	0xd1, 0x57, 0x7f, 0x6e, 0xdc, 0xbb, 0xbf, 0xf9, 0xfb, 0x7d, 0x09, 0x98, 0xc3, 0x54, 0x09, 0x1d,
	0xf1, 0xc6, 0xea, 0x00, 0x91, 0x28, 0x1c, 0x58, 0x5f, 0x4b, 0xa7, 0xb3, 0x7b, 0x6b, 0xb7, 0xaf,
	0xd7, 0xaf, 0xdd, 0xdd, 0x58, 0x5d, 0xad, 0x7d, 0xbb, 0x52, 0xbb, 0x7c, 0x29, 0xe8, 0x7c, 0x8a,
	0xf3, 0x66, 0x7f, 0x34, 0x34, 0x7b, 0x8a, 0x4a, 0x21, 0xb3, 0xbe, 0x96, 0xee, 0xcb, 0xf2, 0xb5,
	0x07, 0x9f, 0xd7, 0x6e, 0x7e, 0x57, 0xbf, 0x76, 0xf7, 0x9f, 0x6b, 0x77, 0x9a, 0x7c, 0x03, 0xe8,
	0xbc, 0x19, 0x40, 0xa7, 0x35, 0xe8, 0xbe, 0xb9, 0x7a, 0xb5, 0x7e, 0xe3, 0xe7, 0x6d, 0xdd, 0x7d,
	0xfc, 0xa4, 0xad, 0xf8, 0x51, 0x84, 0x0b, 0xaf, 0xae, 0xaf, 0xa5, 0x5f, 0xc9, 0xee, 0x0f, 0x76,
	0xf0, 0x68, 0xe5, 0xd6, 0xa3, 0x87, 0x0f, 0x6b, 0x0f, 0x7e, 0x68, 0x0a, 0xd6, 0x0c, 0x75, 0x08,
	0xb8, 0xd8, 0xd3, 0x81, 0x13, 0x4e, 0x43, 0x5f, 0x18, 0x12, 0x09, 0xdb, 0xa6, 0xa1, 0xdb, 0x3b,
	0xde, 0x04, 0x1e, 0xda, 0x14, 0x1a, 0xa0, 0xe4, 0xce, 0x5f, 0x62, 0x8f, 0xc2, 0xcd, 0x08, 0x74,
	0xba, 0xb1, 0x25, 0xfc, 0x49, 0x05, 0xdb, 0x04, 0x7d, 0x08, 0x09, 0xe6, 0x69, 0xf3, 0x5c, 0x26,
	0x3a, 0xd4, 0x3e, 0xd2, 0xdf, 0xa8, 0x6e, 0xbb, 0xab, 0xc1, 0xe6, 0xe9, 0xe1, 0x78, 0xf1, 0x9b,
	0xda, 0xed, 0x3f, 0x82, 0x23, 0xf8, 0xc8, 0x81, 0x83, 0x85, 0x44, 0x26, 0x74, 0x39, 0x0b, 0x5f,
	0xb4, 0xb1, 0x6c, 0x29, 0x0b, 0x45, 0xcb, 0x4d, 0xcb, 0x47, 0x68, 0xa6, 0x9e, 0x1c, 0x25, 0x83,
	0xb1, 0x05, 0xc3, 0xb0, 0xf1, 0xdb, 0x86, 0x4d, 0xbc, 0xaa, 0x0a, 0x83, 0xeb, 0x6b, 0xe9, 0x03,
	0xd9, 0xb4, 0xa3, 0xdd, 0xbc, 0xfe, 0x75, 0xfd, 0xf2, 0x4f, 0x9b, 0x77, 0x7e, 0xad, 0xdf, 0x58,
	0xd9, 0x58, 0xbd, 0xdb, 0x34, 0xec, 0x17, 0x1c, 0x93, 0x59, 0x1a, 0x9b, 0x75, 0xb4, 0x17, 0x12,
	0x78, 0x99, 0x58, 0x72, 0xf1, 0xbc, 0x6c, 0x79, 0x6b, 0x1d, 0xa7, 0x82, 0xf7, 0x65, 0x6b, 0x74,
	0xf0, 0x4a, 0xfe, 0x65, 0x10, 0xaa, 0x5c, 0xa3, 0xc2, 0x2a, 0xb7, 0x5d, 0x81, 0xc2, 0x45, 0x0e,
	0x92, 0x6c, 0x52, 0xee, 0xf4, 0xd1, 0xf8, 0xd6, 0x51, 0x0d, 0x3c, 0x6e, 0x54, 0x61, 0xc8, 0x82,
	0x03, 0xc9, 0xf9, 0x9b, 0x1f, 0xa5, 0x24, 0xf5, 0x62, 0xce, 0xe5, 0xc9, 0x1c, 0x73, 0x09, 0xef,
	0xbd, 0x50, 0x00, 0x38, 0x86, 0xd9, 0x60, 0x9e, 0x8a, 0xfd, 0x68, 0xd7, 0x95, 0x7c, 0x0a, 0x92,
	0x55, 0x2e, 0x68, 0x26, 0xd8, 0xd0, 0x4e, 0x63, 0x78, 0x8d, 0x1c, 0x02, 0xff, 0x4d, 0x41, 0x23,
	0xb4, 0x6f, 0x47, 0x3f, 0x8c, 0x29, 0x99, 0x22, 0x50, 0x78, 0x64, 0x47, 0x85, 0x5f, 0xe2, 0xa0,
	0x73, 0x52, 0x5b, 0x24, 0xd8, 0x62, 0xc5, 0x0f, 0x40, 0xcc, 0x94, 0x55, 0x4d, 0x57, 0xbd, 0xac,
	0x49, 0x16, 0xe1, 0x04, 0x95, 0x4a, 0x9e, 0xd6, 0x61, 0x2e, 0xbf, 0xfa, 0x06, 0x8b, 0x48, 0x1d,
	0x4c, 0x38, 0xed, 0x10, 0x45, 0x68, 0xad, 0xa2, 0x3b, 0x58, 0xab, 0x5f, 0x38, 0x48, 0xb2, 0x7a,
	0xbc, 0x41, 0x1c, 0xde, 0x8a, 0xe8, 0xe3, 0x27, 0x11, 0xc0, 0xb0, 0xd1, 0x48, 0xe4, 0x89, 0x8d,
	0x3c, 0x2b, 0xd6, 0xbf, 0x45, 0xa1, 0xf3, 0xa4, 0x59, 0x0a, 0xac, 0xe7, 0xd8, 0x36, 0x78, 0x17,
	0x84, 0xf5, 0xb5, 0x74, 0x7f, 0xaa, 0x25, 0xdb, 0x1b, 0xa4, 0xa3, 0x66, 0x32, 0x0e, 0xf0, 0xc1,
	0x91, 0xe0, 0x3b, 0xee, 0xbf, 0x93, 0x71, 0xeb, 0xf3, 0x91, 0xf1, 0xae, 0xff, 0x81, 0x8c, 0x63,
	0xcf, 0x49, 0xc6, 0xa3, 0xe3, 0x57, 0xf2, 0x79, 0x38, 0x1a, 0x5e, 0x8f, 0x2a, 0x47, 0xbb, 0xad,
	0x72, 0x81, 0x66, 0xab, 0x9c, 0x5f, 0x78, 0x95, 0x6b, 0x2e, 0x43, 0x38, 0x03, 0x49, 0x06, 0x93,
	0x77, 0x93, 0x78, 0x68, 0xab, 0x50, 0x89, 0x8b, 0x51, 0x42, 0x62, 0x8f, 0xcf, 0xbc, 0x36, 0x17,
	0xa0, 0x6b, 0x76, 0x49, 0x23, 0xca, 0x82, 0x27, 0xdf, 0xe1, 0xe2, 0xa3, 0x3c, 0xec, 0xf6, 0x0d,
	0x02, 0x09, 0x9f, 0xf4, 0x69, 0x91, 0xb4, 0x43, 0xcf, 0xc2, 0x24, 0x74, 0x87, 0x53, 0x7b, 0xcd,
	0x35, 0x5a, 0xe0, 0x76, 0xd2, 0x42, 0x76, 0x7f, 0xe3, 0xe3, 0xcd, 0xd5, 0xa0, 0x36, 0x88, 0xce,
	0x4c, 0x4e, 0xa6, 0x5a, 0x50, 0x0c, 0x22, 0x33, 0xd3, 0x29, 0x2e, 0x3b, 0x09, 0x71, 0xb6, 0xa2,
	0xa8, 0x13, 0x12, 0x27, 0xa7, 0xc7, 0x27, 0x26, 0xa7, 0xa6, 0x27, 0xc6, 0x53, 0x2d, 0xa8, 0x03,
	0xe2, 0x27, 0x8e, 0xe7, 0x4f, 0x17, 0x66, 0x66, 0xde, 0x4d, 0x71, 0x8e, 0x72, 0x6c, 0x66, 0x7a,
	0x2e, 0x3f, 0x35, 0x3d, 0x21, 0xa5, 0x22, 0x28, 0x09, 0x50, 0xc8, 0x4b, 0x13, 0xc5, 0xf7, 0x26,
	0xe6, 0xf2, 0xc7, 0x53, 0xd1, 0x91, 0xef, 0x5b, 0x21, 0xce, 0x72, 0xa1, 0x0f, 0x20, 0xe6, 0xb2,
	0x30, 0xea, 0x69, 0xe6, 0x65, 0x6f, 0x8c, 0xbd, 0xfc, 0x56, 0x85, 0xdb, 0x82, 0xd0, 0xff, 0xe5,
	0xdf, 0x1b, 0x57, 0x23, 0xbc, 0xd0, 0x25, 0x9e, 0x7f, 0xdd, 0xff, 0xb0, 0x16, 0xdd, 0x17, 0xe7,
	0x28, 0x97, 0x45, 0xa7, 0x20, 0xe6, 0xb2, 0x47, 0x30, 0x78, 0x88, 0xdf, 0x82, 0xc1, 0xc3, 0x44,
	0x23, 0xec, 0xa5, 0xc1, 0xf7, 0xa0, 0x70, 0xf0, 0xb3, 0x6e, 0xbc, 0x33, 0x10, 0x3d, 0x86, 0x09,
	0xea, 0x6e, 0x78, 0x37, 0x08, 0xbf, 0x77, 0x4f, 0x93, 0xd4, 0x0b, 0x38, 0x40, 0x03, 0x66, 0x50,
	0x7f, 0x28, 0xa0, 0x8a, 0x89, 0xf8, 0x69, 0xe0, 0x9a, 0x7c, 0x86, 0x34, 0x88, 0xb9, 0x37, 0x35,
	0x58, 0x75, 0x88, 0x62, 0x82, 0x55, 0x87, 0x2f, 0xb5, 0x70, 0x90, 0x26, 0x19, 0x10, 0xf6, 0x87,
	0x92, 0xb8, 0x17, 0x3b, 0x9c, 0xc7, 0x19, 0xd0, 0x17, 0x1c, 0x74, 0x04, 0xaf, 0x0f, 0xda, 0x17,
	0xb8, 0x78, 0x5b, 0x6f, 0x74, 0x6f, 0xff, 0xe3, 0xd4, 0x5e, 0xf6, 0x11, 0x9a, 0xfd, 0xa0, 0x30,
	0x18, 0xca, 0x6e, 0x07, 0x4c, 0xb7, 0xd4, 0x50, 0x78, 0x07, 0xfa, 0x89, 0x61, 0xe6, 0xce, 0x1a,
	0xaa, 0x52, 0xd2, 0x73, 0xf2, 0xb2, 0xf7, 0x7b, 0xc2, 0xf6, 0x53, 0x9d, 0x19, 0x52, 0x35, 0xc2,
	0xf4, 0xc4, 0x30, 0x45, 0x79, 0x19, 0x8b, 0xae, 0x8d, 0xa8, 0x1a, 0x46, 0x85, 0xf8, 0x99, 0xe6,
	0x63, 0x54, 0xfc, 0xc6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xf0, 0x27, 0x42, 0x6f, 0x0d,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScheduleClient is the client API for Schedule service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScheduleClient interface {
	// 创建定时任务
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// 筛选定时任务
	Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error)
	// 获取定时任务
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// 更新定时任务
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// 切换状态
	SwitchStatus(ctx context.Context, in *SwitchStatusRequest, opts ...grpc.CallOption) (*SwitchStatusResponse, error)
}

type scheduleClient struct {
	cc *grpc.ClientConn
}

func NewScheduleClient(cc *grpc.ClientConn) ScheduleClient {
	return &scheduleClient{cc}
}

func (c *scheduleClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error) {
	out := new(FilterResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Filter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) SwitchStatus(ctx context.Context, in *SwitchStatusRequest, opts ...grpc.CallOption) (*SwitchStatusResponse, error) {
	out := new(SwitchStatusResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/SwitchStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScheduleServer is the server API for Schedule service.
type ScheduleServer interface {
	// 创建定时任务
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// 筛选定时任务
	Filter(context.Context, *FilterRequest) (*FilterResponse, error)
	// 获取定时任务
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// 更新定时任务
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// 切换状态
	SwitchStatus(context.Context, *SwitchStatusRequest) (*SwitchStatusResponse, error)
}

// UnimplementedScheduleServer can be embedded to have forward compatible implementations.
type UnimplementedScheduleServer struct {
}

func (*UnimplementedScheduleServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedScheduleServer) Filter(ctx context.Context, req *FilterRequest) (*FilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Filter not implemented")
}
func (*UnimplementedScheduleServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedScheduleServer) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedScheduleServer) SwitchStatus(ctx context.Context, req *SwitchStatusRequest) (*SwitchStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SwitchStatus not implemented")
}

func RegisterScheduleServer(s *grpc.Server, srv ScheduleServer) {
	s.RegisterService(&_Schedule_serviceDesc, srv)
}

func _Schedule_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Filter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Filter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Filter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Filter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_SwitchStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).SwitchStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/SwitchStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).SwitchStatus(ctx, req.(*SwitchStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Schedule_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedule.Schedule",
	HandlerType: (*ScheduleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Schedule_Create_Handler,
		},
		{
			MethodName: "Filter",
			Handler:    _Schedule_Filter_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Schedule_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Schedule_Update_Handler,
		},
		{
			MethodName: "SwitchStatus",
			Handler:    _Schedule_SwitchStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schedule/schedule.proto",
}
