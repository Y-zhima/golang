// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule/schedule.proto

package schedule

import (
	context "context"
	fmt "fmt"
	common "git.fogcdn.top/axe/protos/goout/common"
	template "git.fogcdn.top/axe/protos/goout/template"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepeatFrequency int32

const (
	RepeatFrequency_NONE   RepeatFrequency = 0
	RepeatFrequency_MINUTE RepeatFrequency = 1
	RepeatFrequency_HOUR   RepeatFrequency = 2
	RepeatFrequency_DAY    RepeatFrequency = 3
	RepeatFrequency_WEEK   RepeatFrequency = 4
	RepeatFrequency_MONTH  RepeatFrequency = 5
	RepeatFrequency_YEAR   RepeatFrequency = 6
)

var RepeatFrequency_name = map[int32]string{
	0: "NONE",
	1: "MINUTE",
	2: "HOUR",
	3: "DAY",
	4: "WEEK",
	5: "MONTH",
	6: "YEAR",
}

var RepeatFrequency_value = map[string]int32{
	"NONE":   0,
	"MINUTE": 1,
	"HOUR":   2,
	"DAY":    3,
	"WEEK":   4,
	"MONTH":  5,
	"YEAR":   6,
}

func (x RepeatFrequency) String() string {
	return proto.EnumName(RepeatFrequency_name, int32(x))
}

func (RepeatFrequency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{0}
}

type ScheduleStatus int32

const (
	ScheduleStatus_OFF ScheduleStatus = 0
	ScheduleStatus_ON  ScheduleStatus = 1
)

var ScheduleStatus_name = map[int32]string{
	0: "OFF",
	1: "ON",
}

var ScheduleStatus_value = map[string]int32{
	"OFF": 0,
	"ON":  1,
}

func (x ScheduleStatus) String() string {
	return proto.EnumName(ScheduleStatus_name, int32(x))
}

func (ScheduleStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{1}
}

// 定时任务实例
type ScheduleObject struct {
	ScheduleId           int32                    `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Template             *template.TemplateObject `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Name                 string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartDate            string                   `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime            string                   `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	RepeatFrequency      RepeatFrequency          `protobuf:"varint,6,opt,name=repeat_frequency,json=repeatFrequency,proto3,enum=schedule.RepeatFrequency" json:"repeat_frequency,omitempty"`
	SchedulerInterval    int32                    `protobuf:"varint,7,opt,name=scheduler_interval,json=schedulerInterval,proto3" json:"scheduler_interval,omitempty"`
	Status               ScheduleStatus           `protobuf:"varint,8,opt,name=status,proto3,enum=schedule.ScheduleStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ScheduleObject) Reset()         { *m = ScheduleObject{} }
func (m *ScheduleObject) String() string { return proto.CompactTextString(m) }
func (*ScheduleObject) ProtoMessage()    {}
func (*ScheduleObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{0}
}

func (m *ScheduleObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleObject.Unmarshal(m, b)
}
func (m *ScheduleObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleObject.Marshal(b, m, deterministic)
}
func (m *ScheduleObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleObject.Merge(m, src)
}
func (m *ScheduleObject) XXX_Size() int {
	return xxx_messageInfo_ScheduleObject.Size(m)
}
func (m *ScheduleObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleObject.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleObject proto.InternalMessageInfo

func (m *ScheduleObject) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *ScheduleObject) GetTemplate() *template.TemplateObject {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *ScheduleObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScheduleObject) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ScheduleObject) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ScheduleObject) GetRepeatFrequency() RepeatFrequency {
	if m != nil {
		return m.RepeatFrequency
	}
	return RepeatFrequency_NONE
}

func (m *ScheduleObject) GetSchedulerInterval() int32 {
	if m != nil {
		return m.SchedulerInterval
	}
	return 0
}

func (m *ScheduleObject) GetStatus() ScheduleStatus {
	if m != nil {
		return m.Status
	}
	return ScheduleStatus_OFF
}

type CreateRequest struct {
	TemplateId           int32           `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartDate            string          `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime            string          `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	RepeatFrequency      RepeatFrequency `protobuf:"varint,5,opt,name=repeat_frequency,json=repeatFrequency,proto3,enum=schedule.RepeatFrequency" json:"repeat_frequency,omitempty"`
	SchedulerInterval    int32           `protobuf:"varint,6,opt,name=scheduler_interval,json=schedulerInterval,proto3" json:"scheduler_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *CreateRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *CreateRequest) GetRepeatFrequency() RepeatFrequency {
	if m != nil {
		return m.RepeatFrequency
	}
	return RepeatFrequency_NONE
}

func (m *CreateRequest) GetSchedulerInterval() int32 {
	if m != nil {
		return m.SchedulerInterval
	}
	return 0
}

// 创建定时任务请求返回
type CreateResponse struct {
	ScheduleId           int32                  `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Created              string                 `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *CreateResponse) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *CreateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetRequest struct {
	ScheduleId           int32    `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{3}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

// 获取定时任务请求返回
type GetResponse struct {
	Schedule             *ScheduleObject        `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{4}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetSchedule() *ScheduleObject {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *GetResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 筛选定时任务请求
type FilterRequest struct {
	Paging               *common.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ScheduleName         string         `protobuf:"bytes,2,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	Status               ScheduleStatus `protobuf:"varint,3,opt,name=status,proto3,enum=schedule.ScheduleStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FilterRequest) Reset()         { *m = FilterRequest{} }
func (m *FilterRequest) String() string { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()    {}
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{5}
}

func (m *FilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRequest.Unmarshal(m, b)
}
func (m *FilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRequest.Marshal(b, m, deterministic)
}
func (m *FilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRequest.Merge(m, src)
}
func (m *FilterRequest) XXX_Size() int {
	return xxx_messageInfo_FilterRequest.Size(m)
}
func (m *FilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRequest proto.InternalMessageInfo

func (m *FilterRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterRequest) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

func (m *FilterRequest) GetStatus() ScheduleStatus {
	if m != nil {
		return m.Status
	}
	return ScheduleStatus_OFF
}

// 筛选定时任务请求返回
type FilterResponse struct {
	Schedules            []*ScheduleObject      `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	Paging               *common.Paging         `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FilterResponse) Reset()         { *m = FilterResponse{} }
func (m *FilterResponse) String() string { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()    {}
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{6}
}

func (m *FilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterResponse.Unmarshal(m, b)
}
func (m *FilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterResponse.Marshal(b, m, deterministic)
}
func (m *FilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterResponse.Merge(m, src)
}
func (m *FilterResponse) XXX_Size() int {
	return xxx_messageInfo_FilterResponse.Size(m)
}
func (m *FilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterResponse proto.InternalMessageInfo

func (m *FilterResponse) GetSchedules() []*ScheduleObject {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *FilterResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type UpdateRequest struct {
	ScheduleId           int32           `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	TemplateId           int32           `protobuf:"varint,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartDate            string          `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime            string          `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	RepeatFrequency      RepeatFrequency `protobuf:"varint,6,opt,name=repeat_frequency,json=repeatFrequency,proto3,enum=schedule.RepeatFrequency" json:"repeat_frequency,omitempty"`
	SchedulerInterval    int32           `protobuf:"varint,7,opt,name=scheduler_interval,json=schedulerInterval,proto3" json:"scheduler_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{7}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *UpdateRequest) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *UpdateRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *UpdateRequest) GetRepeatFrequency() RepeatFrequency {
	if m != nil {
		return m.RepeatFrequency
	}
	return RepeatFrequency_NONE
}

func (m *UpdateRequest) GetSchedulerInterval() int32 {
	if m != nil {
		return m.SchedulerInterval
	}
	return 0
}

type UpdateResponse struct {
	Updated              string                 `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{8}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *UpdateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteRequest struct {
	ScheduleId           int32    `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{9}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

type DeleteResponse struct {
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{10}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type SwitchStatusRequest struct {
	ScheduleId           int32    `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchStatusRequest) Reset()         { *m = SwitchStatusRequest{} }
func (m *SwitchStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SwitchStatusRequest) ProtoMessage()    {}
func (*SwitchStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{11}
}

func (m *SwitchStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStatusRequest.Unmarshal(m, b)
}
func (m *SwitchStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStatusRequest.Marshal(b, m, deterministic)
}
func (m *SwitchStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStatusRequest.Merge(m, src)
}
func (m *SwitchStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SwitchStatusRequest.Size(m)
}
func (m *SwitchStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStatusRequest proto.InternalMessageInfo

func (m *SwitchStatusRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

type SwitchStatusResponse struct {
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SwitchStatusResponse) Reset()         { *m = SwitchStatusResponse{} }
func (m *SwitchStatusResponse) String() string { return proto.CompactTextString(m) }
func (*SwitchStatusResponse) ProtoMessage()    {}
func (*SwitchStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52705c336be9b629, []int{12}
}

func (m *SwitchStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStatusResponse.Unmarshal(m, b)
}
func (m *SwitchStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStatusResponse.Marshal(b, m, deterministic)
}
func (m *SwitchStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStatusResponse.Merge(m, src)
}
func (m *SwitchStatusResponse) XXX_Size() int {
	return xxx_messageInfo_SwitchStatusResponse.Size(m)
}
func (m *SwitchStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStatusResponse proto.InternalMessageInfo

func (m *SwitchStatusResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("schedule.RepeatFrequency", RepeatFrequency_name, RepeatFrequency_value)
	proto.RegisterEnum("schedule.ScheduleStatus", ScheduleStatus_name, ScheduleStatus_value)
	proto.RegisterType((*ScheduleObject)(nil), "schedule.ScheduleObject")
	proto.RegisterType((*CreateRequest)(nil), "schedule.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "schedule.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "schedule.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "schedule.GetResponse")
	proto.RegisterType((*FilterRequest)(nil), "schedule.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "schedule.FilterResponse")
	proto.RegisterType((*UpdateRequest)(nil), "schedule.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "schedule.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "schedule.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "schedule.DeleteResponse")
	proto.RegisterType((*SwitchStatusRequest)(nil), "schedule.SwitchStatusRequest")
	proto.RegisterType((*SwitchStatusResponse)(nil), "schedule.SwitchStatusResponse")
}

func init() { proto.RegisterFile("schedule/schedule.proto", fileDescriptor_52705c336be9b629) }

var fileDescriptor_52705c336be9b629 = []byte{
	// 1018 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x41, 0x8f, 0xdb, 0x54,
	0x10, 0xae, 0x9d, 0xc4, 0x9b, 0xcc, 0x36, 0xa9, 0x79, 0x6d, 0xa9, 0x49, 0xe9, 0x92, 0xba, 0xd2,
	0x92, 0xae, 0x1a, 0x3b, 0x0d, 0x55, 0x0f, 0x3d, 0x35, 0xb0, 0x49, 0x1b, 0xa1, 0x26, 0x2b, 0x6f,
	0x56, 0x74, 0x97, 0xc3, 0xca, 0xb5, 0x5f, 0x5c, 0x57, 0x89, 0x6d, 0xec, 0x97, 0xb6, 0xa8, 0x82,
	0x03, 0x47, 0x0e, 0x80, 0xe0, 0x00, 0xe2, 0x04, 0x7f, 0x00, 0x21, 0x81, 0x2a, 0xa1, 0x3d, 0xf0,
	0x23, 0xf8, 0x03, 0x1c, 0xba, 0xc0, 0x91, 0x1b, 0x57, 0xe4, 0x67, 0x3f, 0xc7, 0xce, 0x76, 0x43,
	0x8a, 0xb8, 0x70, 0x8a, 0x3d, 0xdf, 0xbc, 0xf9, 0x66, 0xbe, 0x37, 0x33, 0x31, 0x9c, 0x0b, 0x8c,
	0xfb, 0xd8, 0x9c, 0x8e, 0xb1, 0xca, 0x1e, 0x14, 0xcf, 0x77, 0x89, 0x8b, 0x8a, 0xec, 0xbd, 0x2a,
	0x1a, 0xee, 0x64, 0xe2, 0x3a, 0xaa, 0xee, 0xd9, 0x11, 0x56, 0x7d, 0xd5, 0x72, 0x5d, 0x6b, 0x8c,
	0x43, 0x8b, 0xaa, 0x3b, 0x8e, 0x4b, 0x74, 0x62, 0xbb, 0x4e, 0x10, 0xa3, 0x57, 0xe8, 0x8f, 0xd1,
	0xb0, 0xb0, 0xd3, 0x08, 0x1e, 0xe9, 0x96, 0x85, 0x7d, 0xd5, 0xf5, 0xa8, 0xc7, 0x73, 0xbc, 0xcf,
	0x11, 0x3c, 0xf1, 0xc6, 0x3a, 0xc1, 0x2a, 0x7b, 0x88, 0x00, 0xf9, 0x57, 0x1e, 0x2a, 0xdb, 0x71,
	0x0e, 0x83, 0x7b, 0x0f, 0xb0, 0x41, 0xd0, 0x6b, 0xb0, 0xca, 0xb2, 0xda, 0xb7, 0x4d, 0x89, 0xab,
	0x71, 0xf5, 0x82, 0x06, 0xcc, 0xd4, 0x33, 0xd1, 0x35, 0x28, 0xb2, 0x28, 0x12, 0x5f, 0xe3, 0xea,
	0xab, 0x2d, 0x49, 0x49, 0xc2, 0x0e, 0xe3, 0x87, 0x28, 0x98, 0x96, 0x78, 0x22, 0x04, 0x79, 0x47,
	0x9f, 0x60, 0x29, 0x57, 0xe3, 0xea, 0x25, 0x8d, 0x3e, 0xa3, 0x0b, 0x00, 0x01, 0xd1, 0x7d, 0xb2,
	0x6f, 0x86, 0xb1, 0xf2, 0x14, 0x29, 0x51, 0xcb, 0x66, 0x78, 0x24, 0x81, 0x89, 0x3d, 0xc1, 0x52,
	0x21, 0x05, 0x0f, 0xed, 0x09, 0x46, 0x9b, 0x20, 0xfa, 0xd8, 0xc3, 0x3a, 0xd9, 0x1f, 0xf9, 0xf8,
	0xbd, 0x29, 0x76, 0x8c, 0xf7, 0x25, 0xa1, 0xc6, 0xd5, 0x2b, 0xad, 0x57, 0x94, 0x44, 0x67, 0x8d,
	0x7a, 0x74, 0x99, 0x83, 0x76, 0xca, 0xcf, 0x1a, 0x50, 0x03, 0x10, 0x73, 0xf6, 0xf7, 0x6d, 0x87,
	0x60, 0xff, 0xa1, 0x3e, 0x96, 0x56, 0x68, 0xd5, 0x2f, 0x25, 0x48, 0x2f, 0x06, 0x50, 0x13, 0x84,
	0x80, 0xe8, 0x64, 0x1a, 0x48, 0x45, 0x4a, 0x25, 0xcd, 0xa8, 0x98, 0x8e, 0xdb, 0x14, 0xd7, 0x62,
	0x3f, 0xf9, 0x2f, 0x0e, 0xca, 0x6f, 0xf9, 0x58, 0x27, 0x58, 0x0b, 0x39, 0x03, 0xaa, 0x30, 0x93,
	0x25, 0xa5, 0x30, 0x33, 0xf5, 0xcc, 0x44, 0x2b, 0xfe, 0x58, 0xad, 0x72, 0x8b, 0xb5, 0xca, 0x2f,
	0xa3, 0x55, 0xe1, 0x3f, 0xd2, 0x4a, 0x38, 0x46, 0x2b, 0xf9, 0x09, 0x54, 0x58, 0xe1, 0x81, 0xe7,
	0x3a, 0x01, 0xfe, 0xe7, 0xde, 0x92, 0x60, 0xc5, 0xa0, 0x47, 0xcc, 0xb8, 0x78, 0xf6, 0x8a, 0x94,
	0x44, 0xf8, 0x1c, 0xed, 0xb9, 0x97, 0x95, 0x68, 0x62, 0x14, 0x16, 0x7c, 0x4e, 0xf6, 0x06, 0xc0,
	0x2d, 0x4c, 0x52, 0x92, 0x2f, 0x24, 0x96, 0x03, 0x58, 0xa5, 0xee, 0x71, 0xa2, 0xd7, 0x20, 0x19,
	0x4d, 0xea, 0xbc, 0xfa, 0xbc, 0x8b, 0x66, 0x3d, 0xce, 0x80, 0x54, 0x8e, 0xfc, 0x52, 0x39, 0x7e,
	0xc2, 0x41, 0xb9, 0x6b, 0x8f, 0x09, 0xf6, 0x59, 0x9e, 0xeb, 0x20, 0x78, 0xba, 0x65, 0x3b, 0x56,
	0xcc, 0x5a, 0x61, 0x11, 0xb6, 0xa8, 0x55, 0x8b, 0x51, 0x74, 0x09, 0xca, 0x49, 0x3d, 0xa9, 0x56,
	0x39, 0xc9, 0x8c, 0xfd, 0xb0, 0x65, 0x9a, 0x19, 0xc9, 0x96, 0xe9, 0xd5, 0x6f, 0x38, 0xa8, 0xb0,
	0x84, 0x62, 0x25, 0xae, 0x43, 0x89, 0x9d, 0x0a, 0x24, 0xae, 0x96, 0x5b, 0x28, 0xc5, 0xcc, 0x35,
	0x55, 0x09, 0xbf, 0xb0, 0x92, 0x17, 0xbd, 0xd7, 0xaf, 0x78, 0x28, 0xef, 0x78, 0x66, 0x76, 0x9c,
	0x16, 0x37, 0xd5, 0xdc, 0xbc, 0xf1, 0xc7, 0xce, 0xdb, 0xff, 0x7b, 0x37, 0xc9, 0x7b, 0x50, 0x61,
	0xca, 0xc4, 0x97, 0x27, 0xc1, 0xca, 0x94, 0x5a, 0x22, 0x59, 0x4a, 0x1a, 0x7b, 0x7d, 0xe1, 0x56,
	0x6d, 0x42, 0x79, 0x13, 0x8f, 0xf1, 0xf2, 0xaa, 0xcb, 0x37, 0xa1, 0xc2, 0x4e, 0xc4, 0xd9, 0xcc,
	0x38, 0xb9, 0xa5, 0x38, 0xaf, 0xc3, 0xe9, 0xed, 0x47, 0x36, 0x31, 0xee, 0xc7, 0xf6, 0x65, 0x99,
	0xbb, 0x70, 0x26, 0x7b, 0xee, 0xdf, 0xf1, 0x6f, 0xec, 0xc2, 0xa9, 0xb9, 0x2b, 0x42, 0x45, 0xc8,
	0xf7, 0x07, 0xfd, 0x8e, 0x78, 0x02, 0x01, 0x08, 0x77, 0x7a, 0xfd, 0x9d, 0x61, 0x47, 0xe4, 0x42,
	0xeb, 0xed, 0xc1, 0x8e, 0x26, 0xf2, 0x68, 0x05, 0x72, 0x9b, 0xed, 0x5d, 0x31, 0x17, 0x9a, 0xde,
	0xe9, 0x74, 0xde, 0x16, 0xf3, 0xa8, 0x04, 0x85, 0x3b, 0x83, 0xfe, 0xf0, 0xb6, 0x58, 0x08, 0x8d,
	0xbb, 0x9d, 0xb6, 0x26, 0x0a, 0x1b, 0x17, 0x67, 0x7f, 0xbb, 0x11, 0x69, 0x78, 0x72, 0xd0, 0xed,
	0x8a, 0x27, 0x90, 0x00, 0xfc, 0xa0, 0x2f, 0x72, 0xad, 0x3f, 0xf3, 0x50, 0x64, 0x3e, 0xe8, 0x5d,
	0x10, 0xa2, 0x55, 0x8a, 0xce, 0xcd, 0xfa, 0x27, 0xf3, 0xaf, 0x52, 0x95, 0x8e, 0x02, 0x51, 0x55,
	0xf2, 0xda, 0x47, 0xbf, 0x3c, 0xfb, 0x82, 0x97, 0xe4, 0xd3, 0xea, 0xc3, 0xab, 0xc9, 0x17, 0x88,
	0x1a, 0x2d, 0xd6, 0x1b, 0xdc, 0x06, 0xba, 0x0b, 0x42, 0x34, 0xf4, 0xe9, 0xe0, 0x99, 0xbd, 0x94,
	0x0e, 0x9e, 0xdd, 0x0f, 0xf2, 0x79, 0x1a, 0xfc, 0x2c, 0xca, 0x06, 0x1f, 0x45, 0xf1, 0xf6, 0x20,
	0x77, 0x0b, 0x13, 0x74, 0x66, 0x76, 0x7a, 0xb6, 0x93, 0xab, 0x67, 0xe7, 0xac, 0x71, 0xc0, 0x75,
	0x1a, 0xb0, 0x86, 0xd6, 0x32, 0x01, 0x2d, 0x4c, 0xd4, 0x27, 0xa9, 0x6b, 0xff, 0x00, 0xd9, 0x20,
	0x44, 0xdd, 0x9e, 0xce, 0x3a, 0xb3, 0x19, 0xd2, 0x59, 0x67, 0x07, 0x43, 0xbe, 0x42, 0x49, 0xd6,
	0xe5, 0x8b, 0x19, 0x92, 0x68, 0x38, 0xb2, 0x3c, 0xa1, 0x40, 0x23, 0x10, 0xa2, 0x56, 0x4e, 0x53,
	0x65, 0xc6, 0x21, 0x4d, 0x95, 0xed, 0x7a, 0xf9, 0x32, 0xa5, 0xba, 0x34, 0x47, 0x65, 0x52, 0xa7,
	0xb9, 0x92, 0x3e, 0x84, 0x93, 0xe9, 0xc6, 0x45, 0x17, 0x52, 0x8b, 0xf6, 0xe8, 0x20, 0x54, 0xd7,
	0x8e, 0x83, 0x63, 0x66, 0x95, 0x32, 0x5f, 0x96, 0x5f, 0xcf, 0x30, 0x07, 0x29, 0xd7, 0x2c, 0xff,
	0x9b, 0x4f, 0xb9, 0xcf, 0xdb, 0x36, 0xba, 0x09, 0xe7, 0xdb, 0x77, 0x3b, 0x7f, 0xfc, 0xfc, 0xd9,
	0xef, 0x07, 0x3f, 0xb6, 0xb7, 0x7a, 0xb5, 0x46, 0xed, 0xf0, 0xbb, 0xaf, 0x7f, 0xfb, 0xf2, 0xe9,
	0xb3, 0x83, 0x83, 0xc3, 0x8f, 0xbf, 0x45, 0xd5, 0x04, 0x3c, 0xfc, 0xe9, 0x87, 0xc3, 0x4f, 0xbf,
	0xd7, 0x3a, 0xdb, 0xc3, 0xd1, 0x74, 0x5c, 0x6b, 0x6f, 0xf5, 0x5a, 0x85, 0xab, 0x4a, 0x53, 0x69,
	0x6e, 0x70, 0x5c, 0x4b, 0xd4, 0x3d, 0x6f, 0x6c, 0x1b, 0xf4, 0x2b, 0x54, 0x7d, 0x10, 0xb8, 0xce,
	0x8d, 0x23, 0x16, 0x58, 0x23, 0xae, 0xa7, 0x8c, 0x5c, 0xcb, 0x30, 0x1d, 0x45, 0x7f, 0x1c, 0x7f,
	0x92, 0x06, 0x49, 0x51, 0x7b, 0x75, 0xcb, 0x26, 0x0c, 0x27, 0xae, 0xa7, 0xea, 0x8f, 0xb1, 0x1a,
	0xf9, 0xa8, 0x96, 0xeb, 0x4e, 0x49, 0x52, 0xd3, 0x3d, 0x81, 0x9a, 0xdf, 0xf8, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x45, 0x94, 0xc7, 0x9d, 0x69, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScheduleClient is the client API for Schedule service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScheduleClient interface {
	// 创建定时任务
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// 筛选定时任务
	Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error)
	// 获取定时任务
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// 更新定时任务
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// 删除定时任务
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// 切换状态
	SwitchStatus(ctx context.Context, in *SwitchStatusRequest, opts ...grpc.CallOption) (*SwitchStatusResponse, error)
}

type scheduleClient struct {
	cc *grpc.ClientConn
}

func NewScheduleClient(cc *grpc.ClientConn) ScheduleClient {
	return &scheduleClient{cc}
}

func (c *scheduleClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error) {
	out := new(FilterResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Filter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) SwitchStatus(ctx context.Context, in *SwitchStatusRequest, opts ...grpc.CallOption) (*SwitchStatusResponse, error) {
	out := new(SwitchStatusResponse)
	err := c.cc.Invoke(ctx, "/schedule.Schedule/SwitchStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScheduleServer is the server API for Schedule service.
type ScheduleServer interface {
	// 创建定时任务
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// 筛选定时任务
	Filter(context.Context, *FilterRequest) (*FilterResponse, error)
	// 获取定时任务
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// 更新定时任务
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// 删除定时任务
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// 切换状态
	SwitchStatus(context.Context, *SwitchStatusRequest) (*SwitchStatusResponse, error)
}

// UnimplementedScheduleServer can be embedded to have forward compatible implementations.
type UnimplementedScheduleServer struct {
}

func (*UnimplementedScheduleServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedScheduleServer) Filter(ctx context.Context, req *FilterRequest) (*FilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Filter not implemented")
}
func (*UnimplementedScheduleServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedScheduleServer) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedScheduleServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedScheduleServer) SwitchStatus(ctx context.Context, req *SwitchStatusRequest) (*SwitchStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SwitchStatus not implemented")
}

func RegisterScheduleServer(s *grpc.Server, srv ScheduleServer) {
	s.RegisterService(&_Schedule_serviceDesc, srv)
}

func _Schedule_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Filter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Filter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Filter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Filter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_SwitchStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).SwitchStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.Schedule/SwitchStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).SwitchStatus(ctx, req.(*SwitchStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Schedule_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedule.Schedule",
	HandlerType: (*ScheduleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Schedule_Create_Handler,
		},
		{
			MethodName: "Filter",
			Handler:    _Schedule_Filter_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Schedule_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Schedule_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Schedule_Delete_Handler,
		},
		{
			MethodName: "SwitchStatus",
			Handler:    _Schedule_SwitchStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schedule/schedule.proto",
}
