// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subtask/subtask.proto

package subtask

import (
	context "context"
	fmt "fmt"
	cmdb "git.fogcdn.top/axe/protos/goout/cmdb"
	common "git.fogcdn.top/axe/protos/goout/common"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 裸金属任务状态
type ServerTaskType int32

const (
	// 未定义任务类型
	ServerTaskType_UNDEFINED ServerTaskType = 0
	// 裸金属状态查询任务
	ServerTaskType_CHECK ServerTaskType = 1
	// 裸金属电源开关任务
	ServerTaskType_POWER ServerTaskType = 2
	// 裸金属初始化创建uuid任务
	ServerTaskType_CREATE ServerTaskType = 3
	// 裸金属安装任务
	ServerTaskType_INSTALL ServerTaskType = 4
)

var ServerTaskType_name = map[int32]string{
	0: "UNDEFINED",
	1: "CHECK",
	2: "POWER",
	3: "CREATE",
	4: "INSTALL",
}

var ServerTaskType_value = map[string]int32{
	"UNDEFINED": 0,
	"CHECK":     1,
	"POWER":     2,
	"CREATE":    3,
	"INSTALL":   4,
}

func (x ServerTaskType) String() string {
	return proto.EnumName(ServerTaskType_name, int32(x))
}

func (ServerTaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{0}
}

// 子任务执行结果
type SubTaskResult int32

const (
	// 失败
	SubTaskResult_FAILURE SubTaskResult = 0
	// 成功
	SubTaskResult_SUCCESS SubTaskResult = 1
)

var SubTaskResult_name = map[int32]string{
	0: "FAILURE",
	1: "SUCCESS",
}

var SubTaskResult_value = map[string]int32{
	"FAILURE": 0,
	"SUCCESS": 1,
}

func (x SubTaskResult) String() string {
	return proto.EnumName(SubTaskResult_name, int32(x))
}

func (SubTaskResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{1}
}

// 创建子任务实例请求
type CreateRequest struct {
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// cmdb的搜索条件
	CmdbSearchRequest *cmdb.ChooseHostRequest `protobuf:"bytes,2,opt,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 模板ID
	TemplateId           int32    `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *CreateRequest) GetCmdbSearchRequest() *cmdb.ChooseHostRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *CreateRequest) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

// 创建子任务实例请求返回
type CreateResponse struct {
	// 子任务实例ID
	SubTaskId []int64 `protobuf:"varint,1,rep,packed,name=sub_task_id,json=subTaskId,proto3" json:"sub_task_id,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{1}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetSubTaskId() []int64 {
	if m != nil {
		return m.SubTaskId
	}
	return nil
}

func (m *CreateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 裸金属子任务实例请求
type CreateServerRequest struct {
	// 任务实例ID
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 裸金属任务类型
	TaskType ServerTaskType `protobuf:"varint,2,opt,name=task_type,json=taskType,proto3,enum=subtask.ServerTaskType" json:"task_type,omitempty"`
	// 裸金属电源状态
	PowerState cmdb.ServerPowerState `protobuf:"varint,3,opt,name=power_state,json=powerState,proto3,enum=cmdb.ServerPowerState" json:"power_state,omitempty"`
	// cmdb的搜索条件
	CmdbSearchRequest *cmdb.ChooseServerRequest `protobuf:"bytes,4,opt,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 安装镜像文件的URL
	ImageFileUrl string `protobuf:"bytes,5,opt,name=image_file_url,json=imageFileUrl,proto3" json:"image_file_url,omitempty"`
	// 安装镜像文件的MD5
	ImageFileMd5         string   `protobuf:"bytes,6,opt,name=image_file_md5,json=imageFileMd5,proto3" json:"image_file_md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServerRequest) Reset()         { *m = CreateServerRequest{} }
func (m *CreateServerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServerRequest) ProtoMessage()    {}
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{2}
}

func (m *CreateServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerRequest.Unmarshal(m, b)
}
func (m *CreateServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerRequest.Marshal(b, m, deterministic)
}
func (m *CreateServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerRequest.Merge(m, src)
}
func (m *CreateServerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServerRequest.Size(m)
}
func (m *CreateServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerRequest proto.InternalMessageInfo

func (m *CreateServerRequest) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *CreateServerRequest) GetTaskType() ServerTaskType {
	if m != nil {
		return m.TaskType
	}
	return ServerTaskType_UNDEFINED
}

func (m *CreateServerRequest) GetPowerState() cmdb.ServerPowerState {
	if m != nil {
		return m.PowerState
	}
	return cmdb.ServerPowerState_UNKNOWN
}

func (m *CreateServerRequest) GetCmdbSearchRequest() *cmdb.ChooseServerRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *CreateServerRequest) GetImageFileUrl() string {
	if m != nil {
		return m.ImageFileUrl
	}
	return ""
}

func (m *CreateServerRequest) GetImageFileMd5() string {
	if m != nil {
		return m.ImageFileMd5
	}
	return ""
}

// 裸金属子任务实例返回
type CreateServerResponse struct {
	// 子任务实例ID
	SubTaskId int64 `protobuf:"varint,1,opt,name=sub_task_id,json=subTaskId,proto3" json:"sub_task_id,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateServerResponse) Reset()         { *m = CreateServerResponse{} }
func (m *CreateServerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServerResponse) ProtoMessage()    {}
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{3}
}

func (m *CreateServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerResponse.Unmarshal(m, b)
}
func (m *CreateServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerResponse.Marshal(b, m, deterministic)
}
func (m *CreateServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerResponse.Merge(m, src)
}
func (m *CreateServerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServerResponse.Size(m)
}
func (m *CreateServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerResponse proto.InternalMessageInfo

func (m *CreateServerResponse) GetSubTaskId() int64 {
	if m != nil {
		return m.SubTaskId
	}
	return 0
}

func (m *CreateServerResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 完成子任务实例请求
type CompleteRequest struct {
	// 子任务实例ID
	SubTaskId int64 `protobuf:"varint,1,opt,name=sub_task_id,json=subTaskId,proto3" json:"sub_task_id,omitempty"`
	// 执行开始时间
	StartTime string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 执行结束时间
	EndTime string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 子任务执行结果
	Result SubTaskResult `protobuf:"varint,4,opt,name=result,proto3,enum=subtask.SubTaskResult" json:"result,omitempty"`
	// 总共执行多少主机
	ExecuteCount int32 `protobuf:"varint,5,opt,name=execute_count,json=executeCount,proto3" json:"execute_count,omitempty"`
	// 执行失败多少台主机
	FailCount int32 `protobuf:"varint,6,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
	// 执行成功多少台主机
	SuccessCount         int32    `protobuf:"varint,7,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteRequest) Reset()         { *m = CompleteRequest{} }
func (m *CompleteRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteRequest) ProtoMessage()    {}
func (*CompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{4}
}

func (m *CompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteRequest.Unmarshal(m, b)
}
func (m *CompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteRequest.Marshal(b, m, deterministic)
}
func (m *CompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteRequest.Merge(m, src)
}
func (m *CompleteRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteRequest.Size(m)
}
func (m *CompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteRequest proto.InternalMessageInfo

func (m *CompleteRequest) GetSubTaskId() int64 {
	if m != nil {
		return m.SubTaskId
	}
	return 0
}

func (m *CompleteRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *CompleteRequest) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *CompleteRequest) GetResult() SubTaskResult {
	if m != nil {
		return m.Result
	}
	return SubTaskResult_FAILURE
}

func (m *CompleteRequest) GetExecuteCount() int32 {
	if m != nil {
		return m.ExecuteCount
	}
	return 0
}

func (m *CompleteRequest) GetFailCount() int32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

func (m *CompleteRequest) GetSuccessCount() int32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

// 完成子任务实例请求返回
type CompleteResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CompleteResponse) Reset()         { *m = CompleteResponse{} }
func (m *CompleteResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteResponse) ProtoMessage()    {}
func (*CompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13c21d1fa7c9a311, []int{5}
}

func (m *CompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteResponse.Unmarshal(m, b)
}
func (m *CompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteResponse.Marshal(b, m, deterministic)
}
func (m *CompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteResponse.Merge(m, src)
}
func (m *CompleteResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteResponse.Size(m)
}
func (m *CompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteResponse proto.InternalMessageInfo

func (m *CompleteResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("subtask.ServerTaskType", ServerTaskType_name, ServerTaskType_value)
	proto.RegisterEnum("subtask.SubTaskResult", SubTaskResult_name, SubTaskResult_value)
	proto.RegisterType((*CreateRequest)(nil), "subtask.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "subtask.CreateResponse")
	proto.RegisterType((*CreateServerRequest)(nil), "subtask.CreateServerRequest")
	proto.RegisterType((*CreateServerResponse)(nil), "subtask.CreateServerResponse")
	proto.RegisterType((*CompleteRequest)(nil), "subtask.CompleteRequest")
	proto.RegisterType((*CompleteResponse)(nil), "subtask.CompleteResponse")
}

func init() { proto.RegisterFile("subtask/subtask.proto", fileDescriptor_13c21d1fa7c9a311) }

var fileDescriptor_13c21d1fa7c9a311 = []byte{
	// 741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xd1, 0x8e, 0xdb, 0x44,
	0x14, 0x5d, 0x6f, 0xba, 0xce, 0xfa, 0x66, 0x93, 0x9a, 0x29, 0xb0, 0xd9, 0xa8, 0x0b, 0xab, 0x14,
	0x89, 0x50, 0x51, 0x5b, 0x5a, 0xa8, 0x78, 0xe0, 0x69, 0xeb, 0x7a, 0xd9, 0x88, 0x6d, 0xa8, 0x26,
	0x89, 0x90, 0x78, 0x31, 0x8e, 0x7d, 0xe3, 0x5a, 0xd8, 0x1e, 0xe3, 0x19, 0xd3, 0xed, 0x3b, 0x5f,
	0xc0, 0xb7, 0xf0, 0x31, 0x7c, 0x0e, 0x9a, 0x19, 0x7b, 0xd3, 0x2c, 0xa9, 0x8a, 0xd4, 0x97, 0x78,
	0xe6, 0x9c, 0x33, 0xf7, 0xde, 0x39, 0xf7, 0x66, 0xe0, 0x13, 0x5e, 0xaf, 0x44, 0xc8, 0x7f, 0x73,
	0x9b, 0xaf, 0x53, 0x56, 0x4c, 0x30, 0xd2, 0x6d, 0xb6, 0xa3, 0x87, 0x09, 0x63, 0x49, 0x86, 0x6e,
	0x58, 0xa6, 0x6e, 0x58, 0x14, 0x4c, 0x84, 0x22, 0x65, 0x05, 0xd7, 0xb2, 0xd1, 0xd7, 0xea, 0x13,
	0x3d, 0x49, 0xb0, 0x78, 0xc2, 0x5f, 0x87, 0x49, 0x82, 0x95, 0xcb, 0x4a, 0xa5, 0xd8, 0xa1, 0xb6,
	0x23, 0x96, 0xe7, 0xac, 0x90, 0xb1, 0x1a, 0xe4, 0x7e, 0x94, 0xc7, 0x2b, 0x57, 0xfe, 0x68, 0x60,
	0xfc, 0x97, 0x01, 0x7d, 0xaf, 0xc2, 0x50, 0x20, 0xc5, 0xdf, 0x6b, 0xe4, 0x82, 0x1c, 0x43, 0x57,
	0x16, 0x12, 0xa4, 0xf1, 0xd0, 0x38, 0x33, 0x26, 0x1d, 0x6a, 0xca, 0xed, 0x34, 0x26, 0x3f, 0xc0,
	0x03, 0x79, 0x30, 0xe0, 0x18, 0x56, 0xd1, 0xab, 0xa0, 0xd2, 0xfa, 0xe1, 0xfe, 0x99, 0x31, 0xe9,
	0x9d, 0x1f, 0x3b, 0x2a, 0xa8, 0xf7, 0x8a, 0x31, 0x8e, 0x57, 0x8c, 0x8b, 0x26, 0x1c, 0xfd, 0x48,
	0xe2, 0x73, 0x75, 0xa4, 0xcd, 0xf0, 0x39, 0xf4, 0x04, 0xe6, 0x65, 0x16, 0x0a, 0x94, 0x59, 0x3a,
	0x67, 0xc6, 0xe4, 0x80, 0x42, 0x0b, 0x4d, 0xe3, 0xf1, 0xaf, 0x30, 0x68, 0x6b, 0xe2, 0x25, 0x2b,
	0x38, 0x92, 0xcf, 0xa0, 0xc7, 0xeb, 0x55, 0xb0, 0x29, 0xac, 0x33, 0xe9, 0x50, 0x8b, 0xd7, 0xab,
	0x85, 0xae, 0xcd, 0x01, 0x93, 0x8b, 0x50, 0xd4, 0xbc, 0x29, 0xe7, 0x53, 0x47, 0x5f, 0xdd, 0x69,
	0x23, 0xcc, 0x15, 0x4b, 0x1b, 0xd5, 0xf8, 0xef, 0x7d, 0x78, 0xa0, 0x53, 0xcc, 0xb1, 0xfa, 0x03,
	0xab, 0xf7, 0x5e, 0xfe, 0x5b, 0xb0, 0x14, 0x21, 0xde, 0x94, 0xa8, 0x72, 0x0c, 0xce, 0x8f, 0x9d,
	0xb6, 0x85, 0x3a, 0x86, 0x2c, 0x65, 0xf1, 0xa6, 0x44, 0x7a, 0x28, 0x9a, 0x15, 0xf9, 0x0e, 0x7a,
	0x25, 0x7b, 0x8d, 0x55, 0x20, 0xd3, 0xa2, 0xba, 0xe9, 0x40, 0xd6, 0x26, 0xad, 0xd2, 0x87, 0x5e,
	0x4a, 0x5a, 0x16, 0x87, 0x14, 0xca, 0xdb, 0x35, 0x99, 0xee, 0xf6, 0xfa, 0x9e, 0xba, 0xdc, 0xc9,
	0xdb, 0x5e, 0x6f, 0xd5, 0xbf, 0xcb, 0xed, 0x2f, 0x60, 0x90, 0xe6, 0x61, 0x82, 0xc1, 0x3a, 0xcd,
	0x30, 0xa8, 0xab, 0x6c, 0x78, 0x70, 0x66, 0x4c, 0x2c, 0x7a, 0xa4, 0xd0, 0xcb, 0x34, 0xc3, 0x65,
	0x95, 0xdd, 0x51, 0xe5, 0xf1, 0xd3, 0xa1, 0x79, 0x47, 0xf5, 0x22, 0x7e, 0x3a, 0x5e, 0xc3, 0xc7,
	0xdb, 0xae, 0xbd, 0xab, 0x3d, 0xc6, 0x87, 0xb5, 0xe7, 0xcf, 0x7d, 0xb8, 0xef, 0xb1, 0xbc, 0xcc,
	0x70, 0x33, 0x97, 0xef, 0xcb, 0x71, 0x0a, 0xc0, 0x45, 0x58, 0x89, 0x40, 0xa4, 0xb9, 0x6e, 0x91,
	0x45, 0x2d, 0x85, 0x2c, 0xd2, 0x1c, 0xc9, 0x09, 0x1c, 0x62, 0x11, 0x6b, 0xb2, 0xa3, 0xc8, 0x2e,
	0x16, 0xb1, 0xa2, 0x1c, 0x30, 0x2b, 0xe4, 0x75, 0xa6, 0xfd, 0x95, 0x0d, 0xba, 0x6d, 0xac, 0x8e,
	0x4e, 0x15, 0x4b, 0x1b, 0x15, 0x79, 0x04, 0x7d, 0xbc, 0xc1, 0xa8, 0x16, 0x18, 0x44, 0xac, 0x2e,
	0x84, 0x32, 0xf4, 0x80, 0x1e, 0x35, 0xa0, 0x27, 0x31, 0x59, 0xce, 0x3a, 0x4c, 0xb3, 0x46, 0x61,
	0x2a, 0x85, 0x25, 0x11, 0x4d, 0x3f, 0x82, 0x3e, 0xaf, 0xa3, 0x08, 0x39, 0x6f, 0x14, 0x5d, 0x1d,
	0xa3, 0x01, 0x95, 0x68, 0xfc, 0x0c, 0xec, 0x8d, 0x0b, 0x8d, 0xd5, 0x1b, 0x2b, 0x8d, 0xff, 0x63,
	0xe5, 0xe3, 0x19, 0x0c, 0xb6, 0xc7, 0x93, 0xf4, 0xc1, 0x5a, 0xce, 0x9e, 0xfb, 0x97, 0xd3, 0x99,
	0xff, 0xdc, 0xde, 0x23, 0x16, 0x1c, 0x78, 0x57, 0xbe, 0xf7, 0xa3, 0x6d, 0xc8, 0xe5, 0xcb, 0x9f,
	0x7e, 0xf6, 0xa9, 0xbd, 0x4f, 0x00, 0x4c, 0x8f, 0xfa, 0x17, 0x0b, 0xdf, 0xee, 0x90, 0x1e, 0x74,
	0xa7, 0xb3, 0xf9, 0xe2, 0xe2, 0xfa, 0xda, 0xbe, 0xf7, 0xf8, 0x2b, 0xe8, 0x6f, 0xb9, 0x22, 0xd9,
	0xcb, 0x8b, 0xe9, 0xf5, 0x92, 0xfa, 0xf6, 0x9e, 0xdc, 0xcc, 0x97, 0x9e, 0xe7, 0xcf, 0xe7, 0xb6,
	0x71, 0xfe, 0x8f, 0x01, 0xdd, 0x46, 0x4b, 0xbe, 0x07, 0x53, 0x4f, 0x0e, 0xd9, 0xb8, 0xbb, 0xf5,
	0xee, 0x8c, 0x8e, 0xff, 0x83, 0xeb, 0xfb, 0x8c, 0xf7, 0xc8, 0x05, 0x1c, 0xb6, 0x3e, 0x90, 0xe1,
	0x46, 0xb6, 0x3d, 0x20, 0xa3, 0x93, 0x1d, 0xcc, 0x6d, 0x88, 0x17, 0x70, 0xf4, 0xf6, 0xe4, 0x92,
	0x87, 0x77, 0xb2, 0x6d, 0xfd, 0x8d, 0x46, 0xa7, 0xef, 0x60, 0xdb, 0x70, 0xcf, 0xae, 0xe0, 0x54,
	0xb0, 0xd2, 0x59, 0xb3, 0x24, 0x8a, 0x0b, 0x27, 0xbc, 0x41, 0xfd, 0x9c, 0xf2, 0xf6, 0xdc, 0x2f,
	0x5f, 0x26, 0xa9, 0x68, 0x69, 0xc1, 0x4a, 0x37, 0xbc, 0x41, 0x57, 0x4b, 0xdc, 0x84, 0xb1, 0x5a,
	0xb4, 0xcf, 0xff, 0xca, 0x54, 0xe8, 0x37, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xa0, 0x40,
	0xeb, 0x18, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SubTaskClient is the client API for SubTask service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubTaskClient interface {
	// 创建作业子任务
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// 完成作业子任务
	Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*CompleteResponse, error)
	// 创建裸金属子任务
	CreateServer(ctx context.Context, in *CreateServerRequest, opts ...grpc.CallOption) (*CreateServerResponse, error)
}

type subTaskClient struct {
	cc *grpc.ClientConn
}

func NewSubTaskClient(cc *grpc.ClientConn) SubTaskClient {
	return &subTaskClient{cc}
}

func (c *subTaskClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/subtask.SubTask/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subTaskClient) Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*CompleteResponse, error) {
	out := new(CompleteResponse)
	err := c.cc.Invoke(ctx, "/subtask.SubTask/Complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subTaskClient) CreateServer(ctx context.Context, in *CreateServerRequest, opts ...grpc.CallOption) (*CreateServerResponse, error) {
	out := new(CreateServerResponse)
	err := c.cc.Invoke(ctx, "/subtask.SubTask/CreateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubTaskServer is the server API for SubTask service.
type SubTaskServer interface {
	// 创建作业子任务
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// 完成作业子任务
	Complete(context.Context, *CompleteRequest) (*CompleteResponse, error)
	// 创建裸金属子任务
	CreateServer(context.Context, *CreateServerRequest) (*CreateServerResponse, error)
}

// UnimplementedSubTaskServer can be embedded to have forward compatible implementations.
type UnimplementedSubTaskServer struct {
}

func (*UnimplementedSubTaskServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSubTaskServer) Complete(ctx context.Context, req *CompleteRequest) (*CompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}
func (*UnimplementedSubTaskServer) CreateServer(ctx context.Context, req *CreateServerRequest) (*CreateServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServer not implemented")
}

func RegisterSubTaskServer(s *grpc.Server, srv SubTaskServer) {
	s.RegisterService(&_SubTask_serviceDesc, srv)
}

func _SubTask_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubTaskServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subtask.SubTask/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubTaskServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubTask_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubTaskServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subtask.SubTask/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubTaskServer).Complete(ctx, req.(*CompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubTask_CreateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubTaskServer).CreateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subtask.SubTask/CreateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubTaskServer).CreateServer(ctx, req.(*CreateServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubTask_serviceDesc = grpc.ServiceDesc{
	ServiceName: "subtask.SubTask",
	HandlerType: (*SubTaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SubTask_Create_Handler,
		},
		{
			MethodName: "Complete",
			Handler:    _SubTask_Complete_Handler,
		},
		{
			MethodName: "CreateServer",
			Handler:    _SubTask_CreateServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "subtask/subtask.proto",
}
