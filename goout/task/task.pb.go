// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task/task.proto

package task

import (
	context "context"
	fmt "fmt"
	cmdb "git.fogcdn.top/axe/protos/goout/cmdb"
	common "git.fogcdn.top/axe/protos/goout/common"
	schedule "git.fogcdn.top/axe/protos/goout/schedule"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定时任务类型 0-undefined 1-单次任务 2-定时任务
type ScheduleType int32

const (
	// 0-undefined
	ScheduleType_UNDEFINED ScheduleType = 0
	// 1-单次任务
	ScheduleType_SINGLE ScheduleType = 1
	// 2-定时任务
	ScheduleType_CRONTAB ScheduleType = 2
)

var ScheduleType_name = map[int32]string{
	0: "UNDEFINED",
	1: "SINGLE",
	2: "CRONTAB",
}

var ScheduleType_value = map[string]int32{
	"UNDEFINED": 0,
	"SINGLE":    1,
	"CRONTAB":   2,
}

func (x ScheduleType) String() string {
	return proto.EnumName(ScheduleType_name, int32(x))
}

func (ScheduleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{0}
}

// 调用裸金属应用检查裸金属状态请求体
type CheckServerStateRequest struct {
	// 机房及对应物理机
	CmdbSearchRequest    []*cmdb.ChooseServerRequest `protobuf:"bytes,1,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CheckServerStateRequest) Reset()         { *m = CheckServerStateRequest{} }
func (m *CheckServerStateRequest) String() string { return proto.CompactTextString(m) }
func (*CheckServerStateRequest) ProtoMessage()    {}
func (*CheckServerStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{0}
}

func (m *CheckServerStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckServerStateRequest.Unmarshal(m, b)
}
func (m *CheckServerStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckServerStateRequest.Marshal(b, m, deterministic)
}
func (m *CheckServerStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckServerStateRequest.Merge(m, src)
}
func (m *CheckServerStateRequest) XXX_Size() int {
	return xxx_messageInfo_CheckServerStateRequest.Size(m)
}
func (m *CheckServerStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckServerStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckServerStateRequest proto.InternalMessageInfo

func (m *CheckServerStateRequest) GetCmdbSearchRequest() []*cmdb.ChooseServerRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

// 调用裸金属应用检查裸金属状态返回体
type CheckServerStateResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CheckServerStateResponse) Reset()         { *m = CheckServerStateResponse{} }
func (m *CheckServerStateResponse) String() string { return proto.CompactTextString(m) }
func (*CheckServerStateResponse) ProtoMessage()    {}
func (*CheckServerStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{1}
}

func (m *CheckServerStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckServerStateResponse.Unmarshal(m, b)
}
func (m *CheckServerStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckServerStateResponse.Marshal(b, m, deterministic)
}
func (m *CheckServerStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckServerStateResponse.Merge(m, src)
}
func (m *CheckServerStateResponse) XXX_Size() int {
	return xxx_messageInfo_CheckServerStateResponse.Size(m)
}
func (m *CheckServerStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckServerStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckServerStateResponse proto.InternalMessageInfo

func (m *CheckServerStateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 调用裸金属应用执行开关机操作请求体
type ServerPowerControlRequest struct {
	// 电源开关操作
	State cmdb.ServerPowerState `protobuf:"varint,1,opt,name=state,proto3,enum=cmdb.ServerPowerState" json:"state,omitempty"`
	// 机房及对应物理机
	CmdbSearchRequest    []*cmdb.ChooseServerRequest `protobuf:"bytes,2,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ServerPowerControlRequest) Reset()         { *m = ServerPowerControlRequest{} }
func (m *ServerPowerControlRequest) String() string { return proto.CompactTextString(m) }
func (*ServerPowerControlRequest) ProtoMessage()    {}
func (*ServerPowerControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{2}
}

func (m *ServerPowerControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerPowerControlRequest.Unmarshal(m, b)
}
func (m *ServerPowerControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerPowerControlRequest.Marshal(b, m, deterministic)
}
func (m *ServerPowerControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerPowerControlRequest.Merge(m, src)
}
func (m *ServerPowerControlRequest) XXX_Size() int {
	return xxx_messageInfo_ServerPowerControlRequest.Size(m)
}
func (m *ServerPowerControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerPowerControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerPowerControlRequest proto.InternalMessageInfo

func (m *ServerPowerControlRequest) GetState() cmdb.ServerPowerState {
	if m != nil {
		return m.State
	}
	return cmdb.ServerPowerState_UNKNOWN
}

func (m *ServerPowerControlRequest) GetCmdbSearchRequest() []*cmdb.ChooseServerRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

// 调用裸金属应用执行开关机操作返回体
type ServerPowerControlResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServerPowerControlResponse) Reset()         { *m = ServerPowerControlResponse{} }
func (m *ServerPowerControlResponse) String() string { return proto.CompactTextString(m) }
func (*ServerPowerControlResponse) ProtoMessage()    {}
func (*ServerPowerControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{3}
}

func (m *ServerPowerControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerPowerControlResponse.Unmarshal(m, b)
}
func (m *ServerPowerControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerPowerControlResponse.Marshal(b, m, deterministic)
}
func (m *ServerPowerControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerPowerControlResponse.Merge(m, src)
}
func (m *ServerPowerControlResponse) XXX_Size() int {
	return xxx_messageInfo_ServerPowerControlResponse.Size(m)
}
func (m *ServerPowerControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerPowerControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerPowerControlResponse proto.InternalMessageInfo

func (m *ServerPowerControlResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 调用裸金属创建操作请求体
type CreateServerRequest struct {
	// 机房及对应物理机
	CmdbSearchRequest    []*cmdb.ChooseServerRequest `protobuf:"bytes,1,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CreateServerRequest) Reset()         { *m = CreateServerRequest{} }
func (m *CreateServerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServerRequest) ProtoMessage()    {}
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{4}
}

func (m *CreateServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerRequest.Unmarshal(m, b)
}
func (m *CreateServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerRequest.Marshal(b, m, deterministic)
}
func (m *CreateServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerRequest.Merge(m, src)
}
func (m *CreateServerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServerRequest.Size(m)
}
func (m *CreateServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerRequest proto.InternalMessageInfo

func (m *CreateServerRequest) GetCmdbSearchRequest() []*cmdb.ChooseServerRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

// 调用裸金属创建操作返回体
type CreateServerResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateServerResponse) Reset()         { *m = CreateServerResponse{} }
func (m *CreateServerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServerResponse) ProtoMessage()    {}
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{5}
}

func (m *CreateServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerResponse.Unmarshal(m, b)
}
func (m *CreateServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerResponse.Marshal(b, m, deterministic)
}
func (m *CreateServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerResponse.Merge(m, src)
}
func (m *CreateServerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServerResponse.Size(m)
}
func (m *CreateServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerResponse proto.InternalMessageInfo

func (m *CreateServerResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 调用裸金属安装操作请求体
type InstallServerRequest struct {
	// 机房及对应物理机
	CmdbSearchRequest []*cmdb.ChooseServerRequest `protobuf:"bytes,1,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 安装镜像文件的URL
	ImageFileUrl string `protobuf:"bytes,2,opt,name=image_file_url,json=imageFileUrl,proto3" json:"image_file_url,omitempty"`
	// 安装镜像文件的MD5
	ImageFileMd5 string `protobuf:"bytes,3,opt,name=image_file_md5,json=imageFileMd5,proto3" json:"image_file_md5,omitempty"`
	// 主机查询条件
	CmdbHostSearchRequest *cmdb.ChooseHostRequest `protobuf:"bytes,4,opt,name=cmdb_host_search_request,json=cmdbHostSearchRequest,proto3" json:"cmdb_host_search_request,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *InstallServerRequest) Reset()         { *m = InstallServerRequest{} }
func (m *InstallServerRequest) String() string { return proto.CompactTextString(m) }
func (*InstallServerRequest) ProtoMessage()    {}
func (*InstallServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{6}
}

func (m *InstallServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallServerRequest.Unmarshal(m, b)
}
func (m *InstallServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallServerRequest.Marshal(b, m, deterministic)
}
func (m *InstallServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallServerRequest.Merge(m, src)
}
func (m *InstallServerRequest) XXX_Size() int {
	return xxx_messageInfo_InstallServerRequest.Size(m)
}
func (m *InstallServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallServerRequest proto.InternalMessageInfo

func (m *InstallServerRequest) GetCmdbSearchRequest() []*cmdb.ChooseServerRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *InstallServerRequest) GetImageFileUrl() string {
	if m != nil {
		return m.ImageFileUrl
	}
	return ""
}

func (m *InstallServerRequest) GetImageFileMd5() string {
	if m != nil {
		return m.ImageFileMd5
	}
	return ""
}

func (m *InstallServerRequest) GetCmdbHostSearchRequest() *cmdb.ChooseHostRequest {
	if m != nil {
		return m.CmdbHostSearchRequest
	}
	return nil
}

// 调用裸金属安装操作返回体
type InstallServerResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InstallServerResponse) Reset()         { *m = InstallServerResponse{} }
func (m *InstallServerResponse) String() string { return proto.CompactTextString(m) }
func (*InstallServerResponse) ProtoMessage()    {}
func (*InstallServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{7}
}

func (m *InstallServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallServerResponse.Unmarshal(m, b)
}
func (m *InstallServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallServerResponse.Marshal(b, m, deterministic)
}
func (m *InstallServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallServerResponse.Merge(m, src)
}
func (m *InstallServerResponse) XXX_Size() int {
	return xxx_messageInfo_InstallServerResponse.Size(m)
}
func (m *InstallServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstallServerResponse proto.InternalMessageInfo

func (m *InstallServerResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 交维表导入后巡检任务请求体
type CreateServerCompareRequest struct {
	// 机房ID列表
	RoomId               []int32  `protobuf:"varint,1,rep,packed,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServerCompareRequest) Reset()         { *m = CreateServerCompareRequest{} }
func (m *CreateServerCompareRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServerCompareRequest) ProtoMessage()    {}
func (*CreateServerCompareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{8}
}

func (m *CreateServerCompareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerCompareRequest.Unmarshal(m, b)
}
func (m *CreateServerCompareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerCompareRequest.Marshal(b, m, deterministic)
}
func (m *CreateServerCompareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerCompareRequest.Merge(m, src)
}
func (m *CreateServerCompareRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServerCompareRequest.Size(m)
}
func (m *CreateServerCompareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerCompareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerCompareRequest proto.InternalMessageInfo

func (m *CreateServerCompareRequest) GetRoomId() []int32 {
	if m != nil {
		return m.RoomId
	}
	return nil
}

// 交维表导入后巡检任务返回体
type CreateServerCompareResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateServerCompareResponse) Reset()         { *m = CreateServerCompareResponse{} }
func (m *CreateServerCompareResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServerCompareResponse) ProtoMessage()    {}
func (*CreateServerCompareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{9}
}

func (m *CreateServerCompareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServerCompareResponse.Unmarshal(m, b)
}
func (m *CreateServerCompareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServerCompareResponse.Marshal(b, m, deterministic)
}
func (m *CreateServerCompareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServerCompareResponse.Merge(m, src)
}
func (m *CreateServerCompareResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServerCompareResponse.Size(m)
}
func (m *CreateServerCompareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServerCompareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServerCompareResponse proto.InternalMessageInfo

func (m *CreateServerCompareResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 作业任务实例
type TaskObject struct {
	// 作业任务ID
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 模板ID
	TemplateId int32 `protobuf:"varint,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 定时任务类型
	ScheduleType ScheduleType `protobuf:"varint,4,opt,name=schedule_type,json=scheduleType,proto3,enum=task.ScheduleType" json:"schedule_type,omitempty"`
	// 任务类型
	TaskType schedule.TaskType `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	// cmdb的搜索条件
	CmdbSearchRequest []*cmdb.ChooseHostRequest `protobuf:"bytes,6,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 额外变量JSON String 例如： {"key":"testKey","value":"testVal","description":"测试描述"}
	ExtraVar string `protobuf:"bytes,7,opt,name=extra_var,json=extraVar,proto3" json:"extra_var,omitempty"`
	// 执行人ID
	Executor int32 `protobuf:"varint,8,opt,name=executor,proto3" json:"executor,omitempty"`
	// 总共执行多少主机
	ExecuteCount int32 `protobuf:"varint,9,opt,name=execute_count,json=executeCount,proto3" json:"execute_count,omitempty"`
	// 执行失败多少台主机
	FailCount int32 `protobuf:"varint,10,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
	// 执行成功多少台主机
	SuccessCount int32 `protobuf:"varint,11,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	// 执行开始时间
	StartTime string `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 执行结束时间
	EndTime string `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 作业名称
	Name                 string   `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskObject) Reset()         { *m = TaskObject{} }
func (m *TaskObject) String() string { return proto.CompactTextString(m) }
func (*TaskObject) ProtoMessage()    {}
func (*TaskObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{10}
}

func (m *TaskObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskObject.Unmarshal(m, b)
}
func (m *TaskObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskObject.Marshal(b, m, deterministic)
}
func (m *TaskObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskObject.Merge(m, src)
}
func (m *TaskObject) XXX_Size() int {
	return xxx_messageInfo_TaskObject.Size(m)
}
func (m *TaskObject) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskObject.DiscardUnknown(m)
}

var xxx_messageInfo_TaskObject proto.InternalMessageInfo

func (m *TaskObject) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskObject) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *TaskObject) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *TaskObject) GetScheduleType() ScheduleType {
	if m != nil {
		return m.ScheduleType
	}
	return ScheduleType_UNDEFINED
}

func (m *TaskObject) GetTaskType() schedule.TaskType {
	if m != nil {
		return m.TaskType
	}
	return schedule.TaskType_UNDEFINED
}

func (m *TaskObject) GetCmdbSearchRequest() []*cmdb.ChooseHostRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *TaskObject) GetExtraVar() string {
	if m != nil {
		return m.ExtraVar
	}
	return ""
}

func (m *TaskObject) GetExecutor() int32 {
	if m != nil {
		return m.Executor
	}
	return 0
}

func (m *TaskObject) GetExecuteCount() int32 {
	if m != nil {
		return m.ExecuteCount
	}
	return 0
}

func (m *TaskObject) GetFailCount() int32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

func (m *TaskObject) GetSuccessCount() int32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *TaskObject) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *TaskObject) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *TaskObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 创建任务实例请求
type CreateRequest struct {
	// 模板ID
	TemplateId int32 `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// cmdb的搜索条件
	CmdbSearchRequest []*cmdb.ChooseHostRequest `protobuf:"bytes,2,rep,name=cmdb_search_request,json=cmdbSearchRequest,proto3" json:"cmdb_search_request,omitempty"`
	// 任务类型
	TaskType schedule.TaskType `protobuf:"varint,3,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	// 额外变量JSON String 例如： {"key":"testKey","value":"testVal","description":"测试描述"}
	ExtraVar string `protobuf:"bytes,4,opt,name=extra_var,json=extraVar,proto3" json:"extra_var,omitempty"`
	// 定时任务ID
	ScheduleId int32 `protobuf:"varint,5,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// 定时任务类型
	ScheduleType ScheduleType `protobuf:"varint,6,opt,name=schedule_type,json=scheduleType,proto3,enum=task.ScheduleType" json:"schedule_type,omitempty"`
	// 作业名称
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{11}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *CreateRequest) GetCmdbSearchRequest() []*cmdb.ChooseHostRequest {
	if m != nil {
		return m.CmdbSearchRequest
	}
	return nil
}

func (m *CreateRequest) GetTaskType() schedule.TaskType {
	if m != nil {
		return m.TaskType
	}
	return schedule.TaskType_UNDEFINED
}

func (m *CreateRequest) GetExtraVar() string {
	if m != nil {
		return m.ExtraVar
	}
	return ""
}

func (m *CreateRequest) GetScheduleId() int32 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *CreateRequest) GetScheduleType() ScheduleType {
	if m != nil {
		return m.ScheduleType
	}
	return ScheduleType_UNDEFINED
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 创建任务实例请求返回
type CreateResponse struct {
	// 任务实例ID
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{12}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *CreateResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 获取作业任务请求
type GetRequest struct {
	// 作业任务ID
	TaskId               int64    `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{13}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 获取作业任务请求返回
type GetResponse struct {
	// 获取的作业任务实例
	Task *TaskObject `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	// task对于的作业版本
	PlaybookVersion string `protobuf:"bytes,2,opt,name=playbook_version,json=playbookVersion,proto3" json:"playbook_version,omitempty"`
	// 作业对应的模板名字
	TemplateName string `protobuf:"bytes,3,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	// task对于的主机模块
	HostModule string `protobuf:"bytes,4,opt,name=host_module,json=hostModule,proto3" json:"host_module,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{14}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetTask() *TaskObject {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *GetResponse) GetPlaybookVersion() string {
	if m != nil {
		return m.PlaybookVersion
	}
	return ""
}

func (m *GetResponse) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *GetResponse) GetHostModule() string {
	if m != nil {
		return m.HostModule
	}
	return ""
}

func (m *GetResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 获取作业任务详细执行过程请求
type GetLogRequest struct {
	// 作业任务ID
	TaskId               int64    `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogRequest) Reset()         { *m = GetLogRequest{} }
func (m *GetLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogRequest) ProtoMessage()    {}
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{15}
}

func (m *GetLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogRequest.Unmarshal(m, b)
}
func (m *GetLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogRequest.Marshal(b, m, deterministic)
}
func (m *GetLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogRequest.Merge(m, src)
}
func (m *GetLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogRequest.Size(m)
}
func (m *GetLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogRequest proto.InternalMessageInfo

func (m *GetLogRequest) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 获取作业任务详细执行过程请求返回
type GetLogResponse struct {
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetLogResponse) Reset()         { *m = GetLogResponse{} }
func (m *GetLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetLogResponse) ProtoMessage()    {}
func (*GetLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{16}
}

func (m *GetLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogResponse.Unmarshal(m, b)
}
func (m *GetLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogResponse.Marshal(b, m, deterministic)
}
func (m *GetLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogResponse.Merge(m, src)
}
func (m *GetLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetLogResponse.Size(m)
}
func (m *GetLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogResponse proto.InternalMessageInfo

func (m *GetLogResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 筛选获取作业任务请求
type FilterRequest struct {
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// 用于筛选任务名字的关键字
	TaskName string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// 用于筛选定时任务的任务类型 0-undefined 1-作业模板；2-容器部署；3-裸金属管理
	TaskType             schedule.TaskType `protobuf:"varint,3,opt,name=task_type,json=taskType,proto3,enum=schedule.TaskType" json:"task_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FilterRequest) Reset()         { *m = FilterRequest{} }
func (m *FilterRequest) String() string { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()    {}
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{17}
}

func (m *FilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRequest.Unmarshal(m, b)
}
func (m *FilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRequest.Marshal(b, m, deterministic)
}
func (m *FilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRequest.Merge(m, src)
}
func (m *FilterRequest) XXX_Size() int {
	return xxx_messageInfo_FilterRequest.Size(m)
}
func (m *FilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRequest proto.InternalMessageInfo

func (m *FilterRequest) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterRequest) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *FilterRequest) GetTaskType() schedule.TaskType {
	if m != nil {
		return m.TaskType
	}
	return schedule.TaskType_UNDEFINED
}

// 筛选作业任务请求返回
type FilterResponse struct {
	// 筛选到的多个作业任务实例
	Tasks []*TaskObject `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// 分页信息
	Paging *common.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	// 返回的请求状态
	Status               *common.ResponseStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FilterResponse) Reset()         { *m = FilterResponse{} }
func (m *FilterResponse) String() string { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()    {}
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{18}
}

func (m *FilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterResponse.Unmarshal(m, b)
}
func (m *FilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterResponse.Marshal(b, m, deterministic)
}
func (m *FilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterResponse.Merge(m, src)
}
func (m *FilterResponse) XXX_Size() int {
	return xxx_messageInfo_FilterResponse.Size(m)
}
func (m *FilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterResponse proto.InternalMessageInfo

func (m *FilterResponse) GetTasks() []*TaskObject {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *FilterResponse) GetPaging() *common.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *FilterResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 调用重新执行作业任务操作请求体
type RetryRequest struct {
	// 作业任务ID
	TaskId               int64    `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryRequest) Reset()         { *m = RetryRequest{} }
func (m *RetryRequest) String() string { return proto.CompactTextString(m) }
func (*RetryRequest) ProtoMessage()    {}
func (*RetryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{19}
}

func (m *RetryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryRequest.Unmarshal(m, b)
}
func (m *RetryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryRequest.Marshal(b, m, deterministic)
}
func (m *RetryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryRequest.Merge(m, src)
}
func (m *RetryRequest) XXX_Size() int {
	return xxx_messageInfo_RetryRequest.Size(m)
}
func (m *RetryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetryRequest proto.InternalMessageInfo

func (m *RetryRequest) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 调用重新执行作业任务操作返回体
type RetryResponse struct {
	// 状态码
	Status               *common.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RetryResponse) Reset()         { *m = RetryResponse{} }
func (m *RetryResponse) String() string { return proto.CompactTextString(m) }
func (*RetryResponse) ProtoMessage()    {}
func (*RetryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{20}
}

func (m *RetryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryResponse.Unmarshal(m, b)
}
func (m *RetryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryResponse.Marshal(b, m, deterministic)
}
func (m *RetryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryResponse.Merge(m, src)
}
func (m *RetryResponse) XXX_Size() int {
	return xxx_messageInfo_RetryResponse.Size(m)
}
func (m *RetryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetryResponse proto.InternalMessageInfo

func (m *RetryResponse) GetStatus() *common.ResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("task.ScheduleType", ScheduleType_name, ScheduleType_value)
	proto.RegisterType((*CheckServerStateRequest)(nil), "task.CheckServerStateRequest")
	proto.RegisterType((*CheckServerStateResponse)(nil), "task.CheckServerStateResponse")
	proto.RegisterType((*ServerPowerControlRequest)(nil), "task.ServerPowerControlRequest")
	proto.RegisterType((*ServerPowerControlResponse)(nil), "task.ServerPowerControlResponse")
	proto.RegisterType((*CreateServerRequest)(nil), "task.CreateServerRequest")
	proto.RegisterType((*CreateServerResponse)(nil), "task.CreateServerResponse")
	proto.RegisterType((*InstallServerRequest)(nil), "task.InstallServerRequest")
	proto.RegisterType((*InstallServerResponse)(nil), "task.InstallServerResponse")
	proto.RegisterType((*CreateServerCompareRequest)(nil), "task.CreateServerCompareRequest")
	proto.RegisterType((*CreateServerCompareResponse)(nil), "task.CreateServerCompareResponse")
	proto.RegisterType((*TaskObject)(nil), "task.TaskObject")
	proto.RegisterType((*CreateRequest)(nil), "task.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "task.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "task.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "task.GetResponse")
	proto.RegisterType((*GetLogRequest)(nil), "task.GetLogRequest")
	proto.RegisterType((*GetLogResponse)(nil), "task.GetLogResponse")
	proto.RegisterType((*FilterRequest)(nil), "task.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "task.FilterResponse")
	proto.RegisterType((*RetryRequest)(nil), "task.RetryRequest")
	proto.RegisterType((*RetryResponse)(nil), "task.RetryResponse")
}

func init() { proto.RegisterFile("task/task.proto", fileDescriptor_8e8f2b86464a95fe) }

var fileDescriptor_8e8f2b86464a95fe = []byte{
	// 1465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdf, 0x6f, 0xdb, 0x54,
	0x14, 0x9e, 0x9b, 0x26, 0x6d, 0x4e, 0x93, 0x34, 0xbb, 0xed, 0xd6, 0xd4, 0xdd, 0xd6, 0xcc, 0x2b,
	0x6b, 0xa9, 0xd6, 0x58, 0x14, 0x75, 0x48, 0x93, 0x10, 0xac, 0xd9, 0x5a, 0x32, 0xba, 0x6e, 0x4a,
	0xbb, 0x09, 0x78, 0x09, 0xae, 0x73, 0xeb, 0x9a, 0xda, 0xbe, 0xc1, 0xbe, 0xe9, 0x0f, 0x21, 0x84,
	0xc4, 0xe0, 0x05, 0x09, 0x69, 0x02, 0x9e, 0x10, 0x7b, 0x18, 0x12, 0x12, 0xbc, 0x23, 0x34, 0x0d,
	0x21, 0xfe, 0x00, 0xde, 0x06, 0xef, 0x93, 0xa6, 0xaa, 0xe3, 0xbf, 0x00, 0xdd, 0xeb, 0xeb, 0xc4,
	0x4e, 0x9d, 0xad, 0xab, 0xe0, 0xa5, 0x75, 0xbe, 0xf3, 0xdd, 0x73, 0xce, 0xfd, 0xce, 0xb9, 0xc7,
	0xbe, 0x30, 0x48, 0x35, 0x6f, 0x53, 0x65, 0x7f, 0x4a, 0x0d, 0x97, 0x50, 0x82, 0x7a, 0xd9, 0xb3,
	0x7c, 0xca, 0x20, 0xc4, 0xb0, 0xb0, 0xaa, 0x35, 0x4c, 0x55, 0x73, 0x1c, 0x42, 0x35, 0x6a, 0x12,
	0xc7, 0xf3, 0x39, 0xf2, 0x05, 0xfe, 0x4f, 0x9f, 0x31, 0xb0, 0x33, 0xe3, 0x6d, 0x6b, 0x86, 0x81,
	0x5d, 0x95, 0x34, 0x38, 0x23, 0x86, 0x7d, 0xd1, 0x30, 0xe9, 0x46, 0x73, 0xad, 0xa4, 0x13, 0x5b,
	0xb5, 0xb7, 0x4d, 0xba, 0x49, 0xb6, 0x55, 0x83, 0xcc, 0x70, 0xe3, 0xcc, 0x96, 0x66, 0x99, 0x75,
	0x8d, 0x12, 0xd7, 0x53, 0x5b, 0x8f, 0x62, 0x5d, 0x5e, 0x27, 0xb6, 0x4d, 0x1c, 0x96, 0x83, 0x40,
	0x46, 0x3c, 0x7d, 0x03, 0xd7, 0x9b, 0x16, 0x56, 0x83, 0x07, 0x61, 0x18, 0xd4, 0xed, 0xfa, 0x9a,
	0xca, 0xfe, 0xf8, 0x80, 0x52, 0x87, 0x91, 0xf2, 0x06, 0xd6, 0x37, 0x57, 0xb0, 0xbb, 0x85, 0xdd,
	0x15, 0xaa, 0x51, 0x5c, 0xc5, 0x1f, 0x36, 0xb1, 0x47, 0x51, 0x05, 0x86, 0x18, 0xb1, 0xe6, 0x61,
	0xcd, 0xd5, 0x37, 0x6a, 0xae, 0x0f, 0x17, 0xa4, 0x62, 0x62, 0x6a, 0x60, 0x76, 0xb4, 0xc4, 0x9d,
	0x94, 0x37, 0x08, 0xf1, 0xb0, 0xbf, 0x58, 0xac, 0xab, 0x1e, 0x67, 0x96, 0x15, 0xbe, 0x48, 0x40,
	0xca, 0x35, 0x28, 0x1c, 0x8c, 0xe2, 0x35, 0x88, 0xe3, 0x61, 0x54, 0x82, 0x94, 0x47, 0x35, 0xda,
	0xf4, 0x0a, 0x52, 0x51, 0x9a, 0x1a, 0x98, 0x3d, 0x59, 0xf2, 0xb7, 0x53, 0x0a, 0x18, 0x2b, 0xdc,
	0x5a, 0x15, 0x2c, 0xe5, 0x1b, 0x09, 0x46, 0x7d, 0x3f, 0x37, 0xc9, 0x36, 0x76, 0xcb, 0xc4, 0xa1,
	0x2e, 0xb1, 0x82, 0xa4, 0x2f, 0x40, 0x92, 0xf1, 0x30, 0x77, 0x96, 0x63, 0xce, 0x58, 0x9a, 0x21,
	0xbe, 0x1f, 0xdc, 0x27, 0x75, 0xdb, 0x62, 0xcf, 0x11, 0xb6, 0xb8, 0x04, 0x72, 0x5c, 0x56, 0x47,
	0xdc, 0xe4, 0xfb, 0x30, 0x54, 0x76, 0xb1, 0x46, 0xa3, 0x71, 0xff, 0xcb, 0x92, 0x2c, 0xc0, 0x70,
	0x34, 0xc2, 0x11, 0x33, 0xfd, 0x47, 0x82, 0xe1, 0x8a, 0xe3, 0x51, 0xcd, 0xb2, 0xfe, 0xaf, 0x5c,
	0xd1, 0x04, 0xe4, 0x4c, 0x5b, 0x33, 0x70, 0x6d, 0xdd, 0xb4, 0x70, 0xad, 0xe9, 0x5a, 0x85, 0x9e,
	0xa2, 0x34, 0x95, 0xae, 0x66, 0x38, 0xba, 0x60, 0x5a, 0xf8, 0x96, 0x6b, 0x75, 0xb0, 0xec, 0xfa,
	0x5c, 0x21, 0xd1, 0xc1, 0xba, 0x5e, 0x9f, 0x43, 0x37, 0xa1, 0xc0, 0xd3, 0xda, 0x20, 0x1e, 0xed,
	0xcc, 0xad, 0x97, 0xef, 0x78, 0x24, 0x9c, 0xdb, 0x5b, 0xc4, 0xa3, 0x41, 0x66, 0x27, 0x18, 0xce,
	0x80, 0xa8, 0x92, 0x8b, 0x70, 0xa2, 0x43, 0x80, 0x23, 0x4a, 0x39, 0x07, 0x72, 0xb8, 0x24, 0x65,
	0x62, 0x37, 0x34, 0xb7, 0x75, 0x1c, 0x47, 0xa0, 0xcf, 0x25, 0xc4, 0xae, 0x99, 0x75, 0xae, 0x61,
	0xb2, 0x9a, 0x62, 0x3f, 0x2b, 0x75, 0xe5, 0x3a, 0x8c, 0xc5, 0x2e, 0x3b, 0x62, 0x16, 0x5f, 0xf4,
	0x02, 0xac, 0x6a, 0xde, 0xe6, 0x8d, 0xb5, 0x0f, 0xb0, 0xce, 0xc3, 0xb2, 0x41, 0xe7, 0x87, 0x95,
	0xa6, 0x12, 0xd5, 0x14, 0xfb, 0x59, 0xa9, 0xa3, 0x71, 0x18, 0xa0, 0xd8, 0x6e, 0x58, 0x1a, 0xc5,
	0xcc, 0xc8, 0x2a, 0x92, 0xac, 0x42, 0x00, 0xf9, 0x84, 0x60, 0xfa, 0x30, 0x42, 0xc2, 0x27, 0x04,
	0x50, 0xa5, 0x8e, 0x5e, 0x83, 0x6c, 0x8b, 0x40, 0x77, 0x1b, 0x98, 0xeb, 0x9f, 0x9b, 0x45, 0x25,
	0x3e, 0x65, 0x57, 0x84, 0x69, 0x75, 0xb7, 0x81, 0xab, 0x19, 0x2f, 0xf4, 0x0b, 0xa9, 0x90, 0xe6,
	0x39, 0xf1, 0x45, 0x49, 0xb1, 0xa8, 0x35, 0xe9, 0x58, 0xf2, 0x7c, 0x51, 0x3f, 0x15, 0x4f, 0x68,
	0x31, 0xbe, 0x17, 0x53, 0xbc, 0x17, 0xbb, 0xd6, 0x3b, 0xa6, 0x13, 0xc7, 0x20, 0x8d, 0x77, 0xa8,
	0xab, 0xd5, 0xb6, 0x34, 0xb7, 0xd0, 0xc7, 0xdb, 0xab, 0x9f, 0x03, 0xb7, 0x35, 0x17, 0xc9, 0xd0,
	0x8f, 0x77, 0xb0, 0xde, 0xa4, 0xc4, 0x2d, 0xf4, 0xf3, 0xdd, 0xb6, 0x7e, 0xa3, 0x73, 0x90, 0xf5,
	0x9f, 0x71, 0x4d, 0x27, 0x4d, 0x87, 0x16, 0xd2, 0x9c, 0x90, 0x11, 0x60, 0x99, 0x61, 0xe8, 0x34,
	0xc0, 0xba, 0x66, 0x5a, 0x82, 0x01, 0x9c, 0x91, 0x66, 0x88, 0x6f, 0x3e, 0x07, 0x59, 0xaf, 0xa9,
	0xeb, 0xd8, 0xf3, 0x04, 0x63, 0xc0, 0xf7, 0x21, 0xc0, 0x96, 0x0f, 0x8f, 0x6a, 0x2e, 0xad, 0x51,
	0xd3, 0xc6, 0x85, 0x0c, 0x4f, 0x31, 0xcd, 0x91, 0x55, 0xd3, 0xc6, 0x68, 0x14, 0xfa, 0xb1, 0x53,
	0xf7, 0x8d, 0x59, 0x6e, 0xec, 0xc3, 0x4e, 0x9d, 0x9b, 0x10, 0xf4, 0x3a, 0x9a, 0x8d, 0x0b, 0x39,
	0x0e, 0xf3, 0x67, 0xe5, 0x87, 0x04, 0x64, 0xfd, 0xe6, 0x0a, 0x14, 0x78, 0x3d, 0x5a, 0x76, 0xd6,
	0x13, 0xc9, 0xf9, 0x53, 0x4f, 0x1e, 0x8f, 0x17, 0xf2, 0xc7, 0xa6, 0x87, 0xf7, 0x7f, 0xbc, 0xbf,
	0x7f, 0xef, 0xf7, 0xca, 0x95, 0xbd, 0x07, 0x5f, 0xfe, 0x7d, 0xe7, 0xb7, 0xbd, 0x07, 0x0f, 0x9f,
	0xfe, 0xf4, 0x30, 0xd2, 0x14, 0x8d, 0x67, 0x4d, 0xdc, 0x6e, 0x95, 0x98, 0x9f, 0x7c, 0xf2, 0x78,
	0xfc, 0xdc, 0xf4, 0x38, 0xb3, 0x3e, 0xfd, 0xf6, 0xb3, 0xfd, 0xbb, 0xdf, 0x3d, 0xfd, 0xf9, 0xfb,
	0xfd, 0x7b, 0xf7, 0xf7, 0x7e, 0xfd, 0x25, 0x1c, 0xe8, 0x1d, 0x29, 0xae, 0x64, 0x91, 0x66, 0x49,
	0x1c, 0xa2, 0x59, 0x22, 0x35, 0xee, 0xed, 0xa8, 0x71, 0x47, 0x53, 0x27, 0x9f, 0xdf, 0xd4, 0xa9,
	0x43, 0x36, 0x75, 0x20, 0x7f, 0x5f, 0x5b, 0xfe, 0x4b, 0x93, 0x5f, 0x5d, 0x9e, 0x00, 0xe5, 0x91,
	0x94, 0x0e, 0x98, 0xde, 0x23, 0x29, 0x4e, 0x3f, 0xe5, 0x5d, 0xc8, 0x05, 0x65, 0x12, 0xc7, 0xbe,
	0xeb, 0xb9, 0x6d, 0xcf, 0x83, 0xc4, 0xa1, 0xe6, 0xc1, 0x4b, 0x00, 0x8b, 0x98, 0x86, 0xa6, 0x50,
	0xac, 0x5b, 0xe5, 0x2f, 0x09, 0x06, 0x38, 0x4f, 0xc4, 0x9f, 0x00, 0xfe, 0x81, 0x24, 0x86, 0x4e,
	0xde, 0xdf, 0x7e, 0x7b, 0xae, 0x54, 0xb9, 0x15, 0xbd, 0x0c, 0xf9, 0x86, 0xa5, 0xed, 0xae, 0x11,
	0xb2, 0x59, 0xdb, 0xc2, 0xae, 0x67, 0x12, 0x47, 0xcc, 0xf6, 0xc1, 0x00, 0xbf, 0xed, 0xc3, 0xac,
	0xfb, 0x5b, 0x8d, 0xc7, 0x85, 0x12, 0xd3, 0x3d, 0x00, 0x97, 0x35, 0x1b, 0xb3, 0xf2, 0xf0, 0xc1,
	0x6e, 0x13, 0xa6, 0x96, 0xa8, 0x1e, 0x30, 0xe8, 0x3a, 0x47, 0x42, 0xbb, 0x4f, 0x1e, 0x6a, 0xf7,
	0x53, 0x90, 0x5d, 0xc4, 0x74, 0x89, 0x18, 0xcf, 0x15, 0xe0, 0x4d, 0xc8, 0x05, 0xcc, 0x03, 0x93,
	0xb7, 0xe7, 0x50, 0xb1, 0x3e, 0x97, 0x20, 0xbb, 0x60, 0x5a, 0xb4, 0xfd, 0x0e, 0x3d, 0x0f, 0xa9,
	0x86, 0x66, 0x98, 0x8e, 0x21, 0x64, 0xcc, 0x05, 0x1e, 0x6e, 0x72, 0xb4, 0x2a, 0xac, 0xac, 0x65,
	0x79, 0x52, 0x5c, 0x17, 0x5f, 0x3f, 0xde, 0xcf, 0x5c, 0x93, 0x17, 0x3d, 0x00, 0xca, 0x5d, 0x09,
	0x72, 0x41, 0x1e, 0x62, 0x2b, 0xe7, 0x21, 0xc9, 0xcc, 0x9e, 0x78, 0x7d, 0x1f, 0x2c, 0xa7, 0x6f,
	0x0e, 0x25, 0xdc, 0xf3, 0xcc, 0x84, 0x5f, 0xb4, 0x09, 0x27, 0x21, 0x53, 0xc5, 0xd4, 0xdd, 0x7d,
	0x6e, 0x15, 0xde, 0x80, 0xac, 0x20, 0x1e, 0xed, 0xf5, 0x37, 0x7d, 0x11, 0x32, 0xe1, 0x43, 0x8a,
	0xb2, 0x90, 0xbe, 0xb5, 0x7c, 0xe5, 0xea, 0x42, 0x65, 0xf9, 0xea, 0x95, 0xfc, 0x31, 0x04, 0x90,
	0x5a, 0xa9, 0x2c, 0x2f, 0x2e, 0x5d, 0xcd, 0x4b, 0x68, 0x00, 0xfa, 0xca, 0xd5, 0x1b, 0xcb, 0xab,
	0x97, 0xe7, 0xf3, 0x3d, 0xb3, 0x7f, 0xf4, 0x41, 0x2f, 0xd3, 0x03, 0xdd, 0x80, 0x94, 0x7f, 0x14,
	0xd1, 0x90, 0xaf, 0x52, 0x64, 0x7e, 0xca, 0xc3, 0x51, 0xd0, 0xcf, 0x41, 0x91, 0x3f, 0xfd, 0x73,
	0xef, 0xeb, 0x9e, 0x61, 0x65, 0x50, 0xdd, 0x7a, 0x85, 0x5f, 0x32, 0x54, 0x9d, 0x13, 0x2e, 0x49,
	0xd3, 0x68, 0x09, 0x52, 0x7e, 0x35, 0x02, 0x87, 0x91, 0x1e, 0x09, 0x1c, 0x46, 0x0b, 0xa6, 0x8c,
	0x70, 0x87, 0xc7, 0x51, 0xdb, 0xe1, 0xba, 0xef, 0xe3, 0x1a, 0x24, 0x16, 0x31, 0x45, 0xa2, 0x82,
	0xed, 0x93, 0x2d, 0x1f, 0x0f, 0x21, 0xc2, 0xc9, 0x19, 0xee, 0xa4, 0x80, 0x4e, 0xb6, 0x9c, 0x18,
	0x98, 0xaa, 0x1f, 0x09, 0xe5, 0x3f, 0x46, 0x73, 0x90, 0xf2, 0x5b, 0x3e, 0xc8, 0x2c, 0x72, 0x54,
	0x82, 0xcc, 0xa2, 0xa7, 0x42, 0x39, 0x86, 0xee, 0x48, 0xd1, 0xaf, 0x5b, 0xf1, 0xc5, 0x82, 0x8a,
	0x61, 0x69, 0xe2, 0xbe, 0x81, 0xe4, 0xb3, 0xcf, 0x60, 0x08, 0xf7, 0x93, 0x3c, 0xe7, 0xb3, 0xca,
	0xa9, 0x0e, 0x25, 0x23, 0x6c, 0x26, 0xeb, 0x36, 0xe4, 0x3b, 0xef, 0x24, 0xe8, 0xb4, 0xf0, 0x1f,
	0x7f, 0x23, 0x92, 0xcf, 0x74, 0x33, 0x8b, 0xd8, 0x13, 0x3c, 0xf6, 0x19, 0x65, 0xb4, 0x1d, 0xbb,
	0x83, 0xca, 0x02, 0x7f, 0x02, 0xe8, 0xe0, 0x4d, 0x01, 0x8d, 0x8b, 0x17, 0x44, 0xb7, 0x9b, 0x8d,
	0x5c, 0xec, 0x4e, 0x10, 0xe1, 0xcf, 0xf3, 0xf0, 0x45, 0x65, 0xac, 0x15, 0xde, 0x3b, 0x40, 0x66,
	0x09, 0x18, 0x90, 0x09, 0x2b, 0x88, 0x46, 0x0f, 0xaa, 0x1a, 0x04, 0x95, 0xe3, 0x4c, 0x22, 0x5c,
	0x91, 0x87, 0x93, 0x95, 0x13, 0xb1, 0x4a, 0xb3, 0x40, 0x9b, 0x90, 0x8d, 0x7c, 0x19, 0x23, 0xe1,
	0x2e, 0xee, 0xbe, 0x20, 0x8f, 0xc5, 0xda, 0x44, 0xac, 0xb3, 0x3c, 0xd6, 0x98, 0xd2, 0xee, 0x44,
	0x33, 0xcc, 0x63, 0xc1, 0xde, 0x86, 0x24, 0x3f, 0xf9, 0x48, 0xbc, 0x6a, 0xc3, 0xf3, 0x42, 0x1e,
	0x8a, 0x60, 0xc2, 0xe9, 0x28, 0x77, 0x3a, 0xa4, 0xe4, 0x5a, 0x4e, 0x5d, 0x66, 0xbf, 0x24, 0x4d,
	0xcf, 0xcf, 0x83, 0x4c, 0x49, 0xa3, 0xb4, 0x4e, 0x0c, 0xbd, 0xee, 0x94, 0xb4, 0x1d, 0x71, 0x7f,
	0xf6, 0xb8, 0x9b, 0xf7, 0x26, 0x0c, 0x93, 0x06, 0x36, 0x4a, 0x1a, 0xaa, 0xb6, 0x83, 0x55, 0xdf,
	0xae, 0x1a, 0x84, 0x34, 0x29, 0x77, 0xb6, 0x96, 0xe2, 0xd0, 0xab, 0xff, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x47, 0xc6, 0xdd, 0x5a, 0x3a, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	// 创建作业任务(执行作业模板)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// 筛选作业任务
	Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error)
	// 获取作业任务
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// 获取作业任务详细执行过程
	GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error)
	// 交维表导入后巡检任务
	CreateServerCompare(ctx context.Context, in *CreateServerCompareRequest, opts ...grpc.CallOption) (*CreateServerCompareResponse, error)
	// 调用裸金属应用检查裸金属状态
	CheckServerState(ctx context.Context, in *CheckServerStateRequest, opts ...grpc.CallOption) (*CheckServerStateResponse, error)
	// 调用裸金属应用执行开关机操作
	ServerPowerControl(ctx context.Context, in *ServerPowerControlRequest, opts ...grpc.CallOption) (*ServerPowerControlResponse, error)
	// 调用裸金属创建操作
	CreateServer(ctx context.Context, in *CreateServerRequest, opts ...grpc.CallOption) (*CreateServerResponse, error)
	// 调用裸金属安装操作
	InstallServer(ctx context.Context, in *InstallServerRequest, opts ...grpc.CallOption) (*InstallServerResponse, error)
	// 重新执行作业任务
	Retry(ctx context.Context, in *RetryRequest, opts ...grpc.CallOption) (*RetryResponse, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/task.Task/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*FilterResponse, error) {
	out := new(FilterResponse)
	err := c.cc.Invoke(ctx, "/task.Task/Filter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/task.Task/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error) {
	out := new(GetLogResponse)
	err := c.cc.Invoke(ctx, "/task.Task/GetLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) CreateServerCompare(ctx context.Context, in *CreateServerCompareRequest, opts ...grpc.CallOption) (*CreateServerCompareResponse, error) {
	out := new(CreateServerCompareResponse)
	err := c.cc.Invoke(ctx, "/task.Task/CreateServerCompare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) CheckServerState(ctx context.Context, in *CheckServerStateRequest, opts ...grpc.CallOption) (*CheckServerStateResponse, error) {
	out := new(CheckServerStateResponse)
	err := c.cc.Invoke(ctx, "/task.Task/CheckServerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) ServerPowerControl(ctx context.Context, in *ServerPowerControlRequest, opts ...grpc.CallOption) (*ServerPowerControlResponse, error) {
	out := new(ServerPowerControlResponse)
	err := c.cc.Invoke(ctx, "/task.Task/ServerPowerControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) CreateServer(ctx context.Context, in *CreateServerRequest, opts ...grpc.CallOption) (*CreateServerResponse, error) {
	out := new(CreateServerResponse)
	err := c.cc.Invoke(ctx, "/task.Task/CreateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) InstallServer(ctx context.Context, in *InstallServerRequest, opts ...grpc.CallOption) (*InstallServerResponse, error) {
	out := new(InstallServerResponse)
	err := c.cc.Invoke(ctx, "/task.Task/InstallServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Retry(ctx context.Context, in *RetryRequest, opts ...grpc.CallOption) (*RetryResponse, error) {
	out := new(RetryResponse)
	err := c.cc.Invoke(ctx, "/task.Task/Retry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	// 创建作业任务(执行作业模板)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// 筛选作业任务
	Filter(context.Context, *FilterRequest) (*FilterResponse, error)
	// 获取作业任务
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// 获取作业任务详细执行过程
	GetLog(context.Context, *GetLogRequest) (*GetLogResponse, error)
	// 交维表导入后巡检任务
	CreateServerCompare(context.Context, *CreateServerCompareRequest) (*CreateServerCompareResponse, error)
	// 调用裸金属应用检查裸金属状态
	CheckServerState(context.Context, *CheckServerStateRequest) (*CheckServerStateResponse, error)
	// 调用裸金属应用执行开关机操作
	ServerPowerControl(context.Context, *ServerPowerControlRequest) (*ServerPowerControlResponse, error)
	// 调用裸金属创建操作
	CreateServer(context.Context, *CreateServerRequest) (*CreateServerResponse, error)
	// 调用裸金属安装操作
	InstallServer(context.Context, *InstallServerRequest) (*InstallServerResponse, error)
	// 重新执行作业任务
	Retry(context.Context, *RetryRequest) (*RetryResponse, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTaskServer) Filter(ctx context.Context, req *FilterRequest) (*FilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Filter not implemented")
}
func (*UnimplementedTaskServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTaskServer) GetLog(ctx context.Context, req *GetLogRequest) (*GetLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLog not implemented")
}
func (*UnimplementedTaskServer) CreateServerCompare(ctx context.Context, req *CreateServerCompareRequest) (*CreateServerCompareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServerCompare not implemented")
}
func (*UnimplementedTaskServer) CheckServerState(ctx context.Context, req *CheckServerStateRequest) (*CheckServerStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckServerState not implemented")
}
func (*UnimplementedTaskServer) ServerPowerControl(ctx context.Context, req *ServerPowerControlRequest) (*ServerPowerControlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerPowerControl not implemented")
}
func (*UnimplementedTaskServer) CreateServer(ctx context.Context, req *CreateServerRequest) (*CreateServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServer not implemented")
}
func (*UnimplementedTaskServer) InstallServer(ctx context.Context, req *InstallServerRequest) (*InstallServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallServer not implemented")
}
func (*UnimplementedTaskServer) Retry(ctx context.Context, req *RetryRequest) (*RetryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retry not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Filter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Filter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/Filter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Filter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).GetLog(ctx, req.(*GetLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_CreateServerCompare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServerCompareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).CreateServerCompare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/CreateServerCompare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).CreateServerCompare(ctx, req.(*CreateServerCompareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_CheckServerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckServerStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).CheckServerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/CheckServerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).CheckServerState(ctx, req.(*CheckServerStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_ServerPowerControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerPowerControlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).ServerPowerControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/ServerPowerControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).ServerPowerControl(ctx, req.(*ServerPowerControlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_CreateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).CreateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/CreateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).CreateServer(ctx, req.(*CreateServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_InstallServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).InstallServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/InstallServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).InstallServer(ctx, req.(*InstallServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Retry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Retry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.Task/Retry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Retry(ctx, req.(*RetryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Task_Create_Handler,
		},
		{
			MethodName: "Filter",
			Handler:    _Task_Filter_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Task_Get_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _Task_GetLog_Handler,
		},
		{
			MethodName: "CreateServerCompare",
			Handler:    _Task_CreateServerCompare_Handler,
		},
		{
			MethodName: "CheckServerState",
			Handler:    _Task_CheckServerState_Handler,
		},
		{
			MethodName: "ServerPowerControl",
			Handler:    _Task_ServerPowerControl_Handler,
		},
		{
			MethodName: "CreateServer",
			Handler:    _Task_CreateServer_Handler,
		},
		{
			MethodName: "InstallServer",
			Handler:    _Task_InstallServer_Handler,
		},
		{
			MethodName: "Retry",
			Handler:    _Task_Retry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task/task.proto",
}
