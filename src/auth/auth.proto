syntax = "proto3";

package auth;

option go_package = "git.fogcdn.top/axe/protos/goout/auth";
option java_package = "top.fogcdn.axe.protos.auth";

import "common/api.proto";
import "google/api/annotations.proto";

// 鉴权网关服务
service Auth {
    // 服务鉴权入口
    rpc Check (CheckRequest) returns (CheckResponse) {
        option (google.api.http) = {
            get: "/v1/auth/check"
        };
    }
    // 用户登陆接口
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            get: "/v1/auth/login"
        };
    }
    // 用户登出接口
    rpc Logout (LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            get: "/v1/auth/logout"
        };
    }
    // 登陆回调接口
    rpc Callback (CallbackRequest) returns (CallbackResponse) {
        option (google.api.http) = {
            get: "/v1/auth/callback"
        };
    }
    // 获取用户信息接口
    rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse) {
        option (google.api.http) = {
            get: "/v1/auth/getUserInfo"
        };
    }
    // 对外提供资源列表的接口
    rpc GetResourceList (GetResourceListRequest) returns (GetResourceListResponse) {
        option (google.api.http) = {
            post: "/v1/auth/getResourceList"
        };
    }
    // 对外提供动作列表的接口
    rpc GetActionList (GetActionListRequest) returns (GetActionListResponse) {
        option (google.api.http) = {
            post: "/v1/auth/getActionList"
        };
    }
}


// 服务鉴权入口请求
message CheckRequest {
}

// 服务鉴权入口响应，返回200、401、403等状态码
message CheckResponse {
}

// 用户登陆接口请求
message LoginRequest {
}

// 用户登陆接口响应，返回301状态码
message LoginResponse {
}

// 用户登出接口请求
message LogoutRequest {
}

// 用户登出接口响应，返回301状态码
message LogoutResponse {
}

// 登陆回调接口请求
message CallbackRequest {
}

// 登陆回调接口响应，返回301状态码
message CallbackResponse {
}

// 获取用户信息请求
message GetUserInfoRequest {
	// 控制是否显示API访问授权Token，默认值false，即不显示
	bool access_token = 1;
}

// 外部系统编号
enum SourceCode {
    // 不依赖外部系统
    NONE = 0;
    // IAM系统
    IAM = 1;
}

// 用户信息
message UserInfo {
    // 用户在鉴权网关中的唯一ID
    string uid = 1;
    // 用户名
    string name = 2;
    // 用户在外部系统中的ID
    string source_uid = 3;
    // 外部系统的编号
    SourceCode source = 4;
    // 用户头像路径
    string avatar = 5;
    // API访问授权Token
    string access_token = 6;
}

message GetUserInfoResponse {
    // 响应消息
    UserInfo info = 1;
    // 响应状态
    common.ResponseStatus status = 2;
}

// 资源动作条目（命名适配IAM）
message ResourceActionItem {
    // ID
    int64 id = 1;
    // 名称
    string name = 2;
    // 说明
    string note = 3;
    // 表达式
    string expr = 4;
    // 父节点ID
    int64 parentId = 5;
    // 资源类型
    string resourceType = 6;   
}

// 资源动作数据列表
message ResourceActionData {
    string code = 1;
    string reason = 2;
    repeated ResourceActionItem list = 3;
}

// 资源列表请求（命名适配IAM）
message GetResourceListRequest {
    // 服务ID
    string serviceId = 1;
    // 工作区ID
    string workspaceId = 2;
    // 服务类型
    string serviceType = 3;
}

// 资源列表响应
message GetResourceListResponse {
    // 响应信息
    ResourceActionData data = 1;
    // 响应状态
    common.ResponseStatus status = 2;
}

// 动作列表请求（命名适配IAM）
message GetActionListRequest {
    // 服务ID
    string serviceId = 1;
    // 工作区ID
    string workspaceId = 2;
}

// 动作列表响应
message GetActionListResponse {
    // 响应信息
    ResourceActionData data = 1;
    // 响应状态
    common.ResponseStatus status = 2;
}