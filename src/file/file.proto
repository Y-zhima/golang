syntax = "proto3";

package file;

option go_package = "git.fogcdn.top/axe/protos/goout/file";
option java_package = "top.fogcdn.axe.protos.file";

import "common/api.proto";
import "google/api/annotations.proto";

// 文件服务
service File {
    // 上传playbook压缩包并且解析入口yml文件
    rpc UploadPlaybook (UploadPlaybookRequest) returns (UploadPlaybookResponse) {
        option (google.api.http) = {
            post: "/v1/file/uploadPlaybook"
            body: "*"
        };
    }

    // 上传csv等通用文件
    rpc Upload (UploadRequest) returns (UploadResponse) {
        option (google.api.http) = {
            post: "/v1/file/upload"
            body: "*"
        };
    }

    // 获取导入模板
    rpc DownloadTemplate (DownloadTemplateRequest) returns (DownloadTemplateResponse) {
        option (google.api.http) = {
            get: "/v1/cmdb/downloadTemplate"
        };
    }
}

// 下载模板类型
enum TemplateType {
    // 0-undefined,指除了关系链模板之外的导入模板，也可不传
    UNDEFINED = 0;
    // 4-导入主机业务拓扑
    HOSTCHAIN = 1;
    // 5-导入lake节点关系链
    LAKECHAIN = 2;
    // 6-导入交维表
    CROSSTABLE = 3;
}

message DownloadTemplateRequest {
    // 导入类型
    TemplateType template_type = 1;
    // 非关系链的导入模板的类型
    string asset_type = 2;
}
// 非关系链的导入模板的类型的示例，如导入host，前端需传asset_type=host,导入类型是关系链时可不传
enum asset_type {
    host = 0;
    lake = 1;
    biz_vip = 2;
}

message DownloadTemplateResponse {
    // 返回的请求状态
    common.ResponseStatus status = 1;
    // 返回的excel文件
    bytes content = 2;
}

// 上传playbook压缩包并且解析入口yml文件的请求体
message UploadPlaybookRequest {
    // 上传的playbook压缩包
    bytes content = 1;
}

message UploadPlaybookResponse {
    // 解析出来的playbook项目存储在对象存储的url
    string url = 1;
    // 解析出来的playbook项目文件md5
    string md5 = 2;
    // 解析出来的playbook项目文件大小
    string filesize = 3;
    // 解析出来的playbook项目入口yml文件，有多个
    repeated string entrypoint = 4;
    // 返回的请求状态
    common.ResponseStatus status = 5;
}

// 上传csv等通用文件
message UploadRequest {
    // 文件字段
    bytes content = 1;
    // 指定上传bucket_name（可选）
    string bucket = 2;
    // 指定上传存储路径（可选）
    string job = 3;
}

message UploadResponse {
    // 通用文件对象存储的url
    string url = 1;
    // 解析出来的通用文件md5
    string md5 = 2;
    // 解析出来的通用文件大小
    string filesize = 3;
    // 解析出来的通用文件name
    string filename = 4;
    // 返回的请求状态
    common.ResponseStatus status = 5;
}