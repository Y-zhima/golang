syntax = "proto3";

package ironic;

option go_package = "git.fogcdn.top/axe/protos/goout/ironic";
option java_package = "top.fogcdn.axe.protos.ironic";

import "common/api.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";


// ironic服务
service Ironic {
    // 调用裸金属应用检查裸金属状态
    rpc SearchNodeInfo (SearchNodeInfoRequest) returns (SearchNodeInfoResponse) {
        option (google.api.http) = {
            post: "/v1/file/searchNodeInfo"
            body: "*"
        };
    }

    // 调用裸金属应用执行关机操作
    rpc NodePowerOff (NodePowerOffRequest) returns (NodePowerOffResponse) {
        option (google.api.http) = {
            post: "/v1/file/nodePowerOff"
            body: "*"
        };
    }

    // 调用裸金属应用执行开机操作
    rpc NodePowerOn (NodePowerOnRequest) returns (NodePowerOnResponse) {
        option (google.api.http) = {
            post: "/v1/file/nodePowerOn"
            body: "*"
        };
    }
}

message RoomNodeObject {
    // 机房ID
    string room = 1;
    // 机房下对应物理机UUID
    repeated string  uuid = 2;
}


// 调用裸金属应用检查裸金属状态请求体
message SearchNodeInfoRequest {
    repeated RoomNodeObject room_node = 1;
}

// 调用裸金属应用检查裸金属状态返回体，后续可轮询检测真实状态
message SearchNodeInfoResponse {
    // 状态码
    common.ResponseStatus status = 1;
}


// 调用裸金属应用执行关机操作请求体
message NodePowerOffRequest {
    repeated RoomNodeObject room_node = 1;
}

// 调用裸金属应用执行关机操作返回体，后续可轮询检测真实状态
message NodePowerOffResponse {
    // 状态码
    common.ResponseStatus status = 1;
}


// 调用裸金属应用执行开机操作请求体
message NodePowerOnRequest {
    repeated RoomNodeObject room_node = 1;
}

// 调用裸金属应用执行开机操作返回体，后续可轮询检测真实状态
message NodePowerOnResponse {
    // 状态码
    common.ResponseStatus status = 1;
}