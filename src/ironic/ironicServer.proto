syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ffcs.xmrdc.ironic.biz.ironicServer";
option java_outer_classname = "ironicServerProto";

option go_package = "git.fogcdn.top/axe/protos/goout/ironic";

package ironicServer;

import "ironic/ironicCom.proto";

service IronicServer{
    // 裸金属节点状态查询
    rpc qryNodeInfo (QryNodeInfoRootReq) returns (QryNodeInfoRootRsp) {}
    // 创建裸金属节点
    rpc createNodes (CreateNodesRootReq) returns (CreateNodesRootRsp) {}
    // 安装裸金属系统
    rpc installNodeSys (InstallNodeSysRootReq) returns (InstallNodeSysRootRsp) {}
    // 重装裸金属系统
    rpc reInstallNodeSys (ReInstallNodeSysRootReq) returns (ReInstallNodeSysRootRsp) {}
    // 操作裸金属实例电源
    rpc operNodePower (OperNodePowerRootReq) returns (OperNodePowerRootRsp) {}
    // 健康监测
    rpc qryHeartbeat (QryHeartbeatRootReq) returns (QryHeartbeatRootRsp) {}
}
//--------------- 裸金属节点状态查询---------------//
message QryNodeInfoRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }
    message SvcContReq{
        // 节点id列表
        QryNodeInfoReq requestObject = 1 ;

    }

    // 查询节点信息请求对象
    message QryNodeInfoReq{
        // 裸金属节点id
        repeated string  nodeIds =1;
    }
}
message QryNodeInfoRootRsp{
    ContractRootRsp contractRootRsp =1;
    // 响应信息
    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont =2;
    }

    message SvcContRsp {
        // 响应码
        ironicCom.ResultCode resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        QryNodeInfoRsp resultObject =3;
    }

    // 查询节点应答对象
    message QryNodeInfoRsp{
        // 节点
        repeated  NodeInfo nodeInfos =1;
    }



    // 节点信息
    message NodeInfo{
        // 裸金属节点id
        string nodeId = 1;
        // 当前状态
        Status status = 2;
        // ipmi的IP地址
        string ip = 3;
        // ipmi用户名
        string userName = 4;
        // Ipmi密码
        string password = 5;
        // 裸金属主机mac地址
        string macAddr = 6;
        // 镜像地址
        string imagerAddr = 7;
        // 所属区域裸金属组件服务地址
        string serverAddr = 8;
        // 查询节点响应码
        ironicCom.ResultCode qryResultCode = 9;
        // 查询节点响应消息
        string qryResultMsg = 10;
        // 电源状态
        PowerStatus powerStatus = 11 ;
    }

    //电源状态
    enum PowerStatus{
        //没有定义
        UNDEFINED_1 = 0;
        // 开机
        POWERON = 1;
        // 关机
        POWEROFF =2;
        // 未知
        UNKNOWN = 3;
    }
    //裸金属节点状态
    enum Status{
        //没有定义
        UNDEFINED_2 = 0;
        //未知
        NULL = 1400;
        // 已创建 :刚创建完节点后的状态，节点创建、验证成功，可进行装系统
        CREATED = 1300;
        // 部署中 :正在执行装机任务
        DEPLOYING = 1200;
        // 部署失败 : 执行装机异常
        DEPLOYFAILED = 1100;
        // 活动 ： 已经安装完系统活动中
        ACTIVE = 1000;
    }
}
//--------------- 裸金属节点状态查询结束 ---------------//

//--------------- 安装裸金属系统 ---------------//
message InstallNodeSysRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    // 安装裸金属系统请求
    message SvcContReq{
        InstallNodeSysReq  requestObject = 1;
    }

    // 安装裸金属系统请求对象
    message InstallNodeSysReq{
        // 安装裸金属系统信息
        repeated NodeInstallInfo nodeInstallInfos =1;
    }

    // 安装裸金属系统信息
    message NodeInstallInfo{
        // 裸金属节点id
        string nodeId = 1;
        // 安装镜像地址(一般为http url)
        string imageAddr = 2;
        // 镜像MD5校验码
        string imageCheckSum = 3;
    }
}
message InstallNodeSysRootRsp{
    ContractRootRsp contractRootRsp =1;

    // 响应信息
    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont =2;
    }


    message SvcContRsp {
        // 响应码
        ironicCom.ResultCode resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        InstallNodeInfoRsp resultObject =3;
    }

    //创建节点请求对象
    message InstallNodeInfoRsp{
        // 节点
        repeated NodeInfoRsp nodeInfoRsps = 1;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message NodeInfoRsp {
        // 裸金属节点id
        string nodeId = 1;
        // 初始化id
        int64  initId = 2;
        // 创建节点响应码
        ironicCom.ResultCode  installResultCode = 3;
        // 创建节点响应消息
        string installResultMsg = 4;
    }

}

//--------------- 安装裸金属系统结束 ---------------//

//--------------- 操作裸金属实例电源 ---------------//
message OperNodePowerRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    message SvcContReq{
        OperNodePowerReq  requestObject = 1;
    }

    message OperNodePowerReq{
        // 安装裸金属系统信息
        repeated NodePowerOper nodePowerOpers = 1;
    }

    message NodePowerOper{
        // 裸金属节点id
        string nodeId = 1;
    }
}
message OperNodePowerRootRsp{
    ContractRootRsp contractRootRsp =1;
    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont = 2;
    }

    message SvcContRsp{
        // 响应码
        ironicCom.ResultCode resultCode = 1;
        // 响应消息描述
        string resultMsg = 2;
        // 响应对象
        OperNodePowerRsp resultObject =3;
    }

    message OperNodePowerRsp{
        // 电源操作应答
        repeated NodePowerRsp  nodePowerRsps = 1;
    }
    message NodePowerRsp{
        // 裸金属节点id
        string nodeId = 1;
        // 创建节点响应码
        ironicCom.ResultCode powerResultCode = 2;
        // 创建节点响应消息
        string powerResultMsg = 3;
    }
}
//--------------- 操作裸金属实例电源结束 ---------------//

//--------------- 创建裸金属节点---------------//
message CreateNodesRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    message SvcContReq {
        // 节点信息列表
        CreateNodeInfoReq requestObject = 1 ;

    }

    // 创建节点请求对象
    message CreateNodeInfoReq {
        // 节点
        repeated NodeInfoReq nodeInfoReqs = 1 ;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message NodeInfoReq {
        // 裸金属区域组件服务地址
        string serverAddr = 1;
        // 区域名称
        string regionName = 2;
        // 初始化id
        int64 initId = 3;
        // ipmi的IP地址
        string ip = 4;
        // ipmi用户名
        string userName = 5;
        // Ipmi密码
        string password = 6;
        // 裸金属主机mac地址
        string macAddr = 7;
        // Ipmi端口
        int64 port = 8;
    }
}

message CreateNodesRootRsp{
    ContractRootRsp contractRootRsp =1;

    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont =2;
    }

    message SvcContRsp{
        // 响应码
        ironicCom.ResultCode resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        CreateNodeInfoRsp resultObject =3;
    }

    //创建节点请求对象
    message CreateNodeInfoRsp{
        // 节点
        repeated NodeInfoRsp nodeInfoRsps = 1;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message NodeInfoRsp {
        // 裸金属节点id
        string nodeId = 1;
        // 初始化id
        int64  initId = 2;
        // 创建节点响应码
        ironicCom.ResultCode  createResultCode = 3;
        // 创建节点响应消息
        string createResultMsg = 4;
    }
}

//--------------- 创建裸金属节点结束---------------//

//--------------- 重新安装裸金属节点开始-----------//
message ReInstallNodeSysRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    // 安装裸金属系统请求
    message SvcContReq{
        InstallNodeSysReq  requestObject = 1;
    }

    // 安装裸金属系统请求对象
    message InstallNodeSysReq{
        // 安装裸金属系统信息
        repeated NodeInstallInfo nodeInstallInfos =1;
    }

    // 安装裸金属系统信息
    message NodeInstallInfo{
        // 裸金属节点id
        string nodeId = 1;
        // 安装镜像地址(一般为http url)
        string imageAddr = 2;
        // 镜像MD5校验码
        string imageCheckSum = 3;
    }
}
message ReInstallNodeSysRootRsp{
    ContractRootRsp contractRootRsp =1;

    // 响应信息
    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont =2;
    }


    message SvcContRsp {
        // 响应码
        ironicCom.ResultCode resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        InstallNodeInfoRsp resultObject =3;
    }

    //创建节点请求对象
    message InstallNodeInfoRsp{
        // 节点
        repeated ReNodeInfoRsp nodeInfoRsps = 1;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message ReNodeInfoRsp {
        // 旧裸金属节点id
        string oldNodeId = 1;
        // 新裸金属节点id
        string newNodeId = 2;
        // 初始化id
        int64  initId = 3;
        // 创建节点响应码
        ironicCom.ResultCode  installResultCode = 4;
        // 创建节点响应消息
        string installResultMsg = 5;
    }

}
//--------------- 重新安装裸金属节点结束-----------//
//--------------- 健康监测---------------//
message QryHeartbeatRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }
    message SvcContReq{
    	QryHeartbeatReq  requestObject = 1;
    }
    message QryHeartbeatReq{
        // 安装裸金属系统信息
        string req= 1;
    }
}
message QryHeartbeatRootRsp{
    ContractRootRsp contractRootRsp =1;
    // 响应信息
    message ContractRootRsp{
        ironicCom.TcpContRsp tcpCont = 1;
        SvcContRsp svcCont =2;
    }

    message SvcContRsp {
        // 响应码
        ironicCom.ResultCode resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        QryHeartbeatRsp resultObject =3;
    }

    // 健康监测应答对象
    message QryHeartbeatRsp{
        // 应用信息
        repeated  ClusterInstance clusterInstances =1;
    }

    // 节点信息
    message ClusterInstance{
        // 应用ip
        string ipAddress=1;
        //应用名，集群名
        string clusterName=2;
        //运行状态
        AppStatus appStatus=3;
        //信息
        string message=4;
    }

    enum AppStatus{
         //没有定义
         UNDEFINED = 0;
         //活动中
         STOPPED = 1;
         //未知
         ACTIVE =2;
         //已停止
         UNKNOWN =3;
    }
}
//--------------- 健康监测结束---------------//