syntax = "proto3";

option go_package = "git.fogcdn.top/axe/protos/goout/ironic";
option java_multiple_files = true;
option java_package = "com.ffcs.xmrdc.ironic.biz.ironicServer";
option java_outer_classname = "ironicServerProto";

package ironicServer;

import "ironic/ironicCom.proto";

service IronicServer{
    // 裸金属节点状态查询
    rpc qryNodeInfo (QryNodeInfoRootReq) returns (QryNodeInfoRootRes) {}
    // 创建裸金属节点
    rpc createNodes (CreateNodesRootReq) returns (CreateNodesRootRes) {}
    // 安装裸金属系统
    rpc installNodeSys (InstallNodeSysRootReq) returns (InstallNodeSysRootRes) {}
    // 操作裸金属实例电源
    rpc operNodePower (OperNodePowerRootReq) returns (OperNodePowerRootRes) {}
}
//--------------- 裸金属节点状态查询---------------//
message QryNodeInfoRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }
    message SvcContReq{
        // 节点id列表
        QryNodeInfoReq requestObject = 1 ;

    }

    // 查询节点信息请求对象
    message QryNodeInfoReq{
        // 裸金属节点id
        repeated string  nodeIds =1;
    }
}
message QryNodeInfoRootRes{
    ContractRootRes contractRootRes =1;
    // 响应信息
    message ContractRootRes{
        ironicCom.TcpContRes tcpCont = 1;
        SvcContRes svcCont =2;
    }

    message SvcContRes {
        // 响应码
        string resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        QryNodeInfoRsp resultObject =3;
    }

    // 查询节点应答对象
    message QryNodeInfoRsp{
        // 节点
        repeated  NodeInfo nodeInfos =1;
    }

    // 节点信息
    message NodeInfo{
        // 裸金属节点id
        string nodeId = 1;
        // 当前状态
        string status = 2;
        // ipmi的IP地址
        string ip = 3;
        // ipmi用户名
        string userName = 4;
        // Ipmi密码
        string password = 5;
        // 裸金属主机mac地址
        string macAddr = 6;
        // 镜像地址
        string imagerAddr = 7;
        // 所属区域裸金属组件服务地址
        string serverAddr = 8;
        // 查询节点响应码
        bool qryResultCode = 9;
        // 查询节点响应消息
        string qryResultMsg = 10;
        // 电源状态
        string powerStatus = 11;
    }
}
//--------------- 裸金属节点状态查询结束 ---------------//

//--------------- 安装裸金属系统 ---------------//
message InstallNodeSysRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    // 安装裸金属系统请求
    message SvcContReq{
        InstallNodeSysReq  requestObject = 1;
    }

    // 安装裸金属系统请求对象
    message InstallNodeSysReq{
        // 安装裸金属系统信息
        repeated NodeInstallInfo nodeInstallInfos =1;
    }

    // 安装裸金属系统信息
    message NodeInstallInfo{
        // 裸金属节点id
        string nodeId = 1;
        // 安装镜像地址(一般为http url)
        string imageAddr = 2;
        // 镜像MD5校验码
        string imageCheckSum = 3;
    }
}
message InstallNodeSysRootRes{
    ContractRootRes contractRootRes =1;

    // 响应信息
    message ContractRootRes{
        ironicCom.TcpContRes tcpCont = 1;
        SvcContRes svcCont =2;
    }


    message SvcContRes {
        // 响应码
        string resultCode =1;
        // 响应消息描述
        string resultMsg =2;
    }
}
//--------------- 安装裸金属系统结束 ---------------//

//--------------- 操作裸金属实例电源 ---------------//
message OperNodePowerRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    message SvcContReq{
        OperNodePowerReq  requestObject = 1;
    }

    message OperNodePowerReq{
        // 安装裸金属系统信息
        repeated NodePowerOper nodePowerOpers = 1;
    }

    message NodePowerOper{
        // 裸金属节点id
        string nodeId = 1;
        // 超时时间(可选，电源状态转换的超时（以秒为单位）。)
        int64 timeOut = 2;
    }
}
message OperNodePowerRootRes{
    ContractRootRes contractRootRes =1;
    message ContractRootRes{
        ironicCom.TcpContRes tcpCont = 1;
        SvcContRes svcCont = 2;
    }

    message SvcContRes{
        // 响应码
        string resultCode = 1;
        // 响应消息描述
        string resultMsg = 2;
        // 响应对象
        OperNodePowerRsp resultObject =3;
    }

    message OperNodePowerRsp{
        // 电源操作应答
        repeated NodePowerRsp  nodePowerRsps = 1;
    }
    message NodePowerRsp{
        // 裸金属节点id
        string nodeId = 1;
        // 创建节点响应码
        bool powerResultCode = 2;
        // 创建节点响应消息
        string powerResultMsg = 3;
    }
}
//--------------- 操作裸金属实例电源结束 ---------------//

//--------------- 创建裸金属节点---------------//
message CreateNodesRootReq{
    ContractRootReq contractRootReq =1;
    // 请求信息
    message ContractRootReq{
        ironicCom.TcpContReq tcpCont = 1;
        SvcContReq svcCont =2;
    }

    message SvcContReq {
        // 节点信息列表
        CreateNodeInfoReq requestObject = 1 ;

    }

    // 创建节点请求对象
    message CreateNodeInfoReq {
        // 节点
        repeated NodeInfoReq nodeInfoReqs = 1 ;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message NodeInfoReq {
        // 裸金属区域组件服务地址
        string serverAddr = 1;
        // 区域名称
        string regionName = 2;
        // 初始化id
        int64 initId = 3;
        // ipmi的IP地址
        string ip = 4;
        // ipmi用户名
        string userName = 5;
        // Ipmi密码
        string password = 6;
        // 裸金属主机mac地址
        string macAddr = 7;
    }
}

message CreateNodesRootRes{
    ContractRootRes contractRootRes =1;

    message ContractRootRes{
        ironicCom.TcpContRes tcpCont = 1;
        SvcContRes svcCont =2;
    }

    message SvcContRes{
        // 响应码
        string resultCode =1;
        // 响应消息描述
        string resultMsg =2;
        // 响应对象
        CreateNodeInfoRsp resultObject =3;
    }

    //创建节点请求对象
    message CreateNodeInfoRsp{
        // 节点
        repeated NodeInfoRsp nodeInfoRsps = 1;
        // 分页信息
        ironicCom.PageInfo pageInfo  = 2;
    }

    // 节点信息
    message NodeInfoRsp {
        // 裸金属节点id
        string nodeId = 1;
        // 初始化id
        int64  initId = 2;
        // 创建节点响应码
        bool  createResultCode = 3;
        // 创建节点响应消息
        string createResultMsg = 4;
    }
}

//--------------- 创建裸金属节点结束---------------//