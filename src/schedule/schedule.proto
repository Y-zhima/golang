syntax = "proto3";

package schedule;

option go_package = "git.fogcdn.top/axe/protos/goout/schedule";

import "common/api.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "template/template.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "AXE运维API - 定时任务"
        version : "1.0.0"
        description: "AXE运维平台RESTful API"
    };
    schemes: HTTP
    consumes: "application/json"
    produces: "application/json"
};

// 定时任务
service Schedule {
    // 创建定时任务
    rpc Create (CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/schedule/create"
            body: "*"
        };
    }
    // 筛选定时任务
    rpc Filter (FilterRequest) returns (FilterResponse) {
        option (google.api.http) = {
            get: "/v1/schedule/filter"
        };
    }
    // 获取定时任务
    rpc Get (GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v1/schedule/get/{schedule_id}"
        };
    }
    // 更新定时任务
    rpc Update (UpdateRequest) returns (UpdateResponse) {
        option (google.api.http) = {
            post: "/v1/schedule/update/{schedule_id}"
            body: "*"
        };
    }
    // 删除定时任务
    rpc Delete (DeleteRequest) returns (DeleteResponse) {
        option (google.api.http) = {
            post: "/v1/schedule/delete/{schedule_id}"
        };
    }

    // 切换状态
    rpc SwitchStatus (SwitchStatusRequest) returns (SwitchStatusResponse) {
        option (google.api.http) = {
            post: "/v1/schedule/switchStatus/{schedule_id}"
        };
    }

}

enum RepeatFrequency {
    NONE = 0;
    MINUTE = 1;
    HOUR = 2;
    DAY = 3;
    WEEK = 4;
    MONTH = 5;
    YEAR = 6;
}

enum ScheduleStatus {
    OFF = 0;
    ON = 1;
}

// 定时任务实例
message ScheduleObject {
    int32 schedule_id = 1; // 定时任务ID
    template.TemplateObject template = 2; // 模板实例
    string name = 3; // 定时任务名
    string start_date = 4; // 开始日期
    string start_time = 5; // 开始时间
    RepeatFrequency repeat_frequency = 6; // 重复频率
    int32 scheduler_interval = 7; // 调度间隔
    ScheduleStatus status = 8; // 任务状态
}

message CreateRequest {
    int32 template_id = 1;
    string name = 2;
    string start_date = 3;
    string start_time = 4;
    RepeatFrequency repeat_frequency = 5;
    int32 scheduler_interval = 6;
}

// 创建定时任务请求返回
message CreateResponse {
    int32 schedule_id = 1;
    string created = 2;
    common.ResponseStatus status = 3;
}

message GetRequest {
    int32 schedule_id = 1;
}

// 获取定时任务请求返回
message GetResponse {
    ScheduleObject schedule = 1;
    common.ResponseStatus status = 2;
}

// 筛选定时任务请求
message FilterRequest {
    common.Paging paging = 1;
    string schedule_name = 2;
    ScheduleStatus status = 3;
}

// 筛选定时任务请求返回
message FilterResponse {
    repeated ScheduleObject schedules = 1;
    common.Paging paging = 2;
    common.ResponseStatus status = 3;
}

message UpdateRequest {
    int32 schedule_id = 1;
    int32 template_id = 2;
    string name = 3;
    string start_date = 4;
    string start_time = 5;
    RepeatFrequency repeat_frequency = 6;
    int32 scheduler_interval = 7;
}

message UpdateResponse {
    string updated = 1;
    common.ResponseStatus status = 2;
}

message DeleteRequest {
    int32 schedule_id = 1;
}

message DeleteResponse {
    common.ResponseStatus status = 1;
}

message SwitchStatusRequest {
    int32 schedule_id = 1;
}

message SwitchStatusResponse {
    common.ResponseStatus status = 1;
}