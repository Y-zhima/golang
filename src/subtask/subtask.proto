syntax = "proto3";

package subtask;

option go_package = "git.fogcdn.top/axe/protos/goout/subtask";
option java_package = "top.fogcdn.axe.protos.subtask";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "common/api.proto";
import "cmdb/cmdb.proto";

// 子任务实例
service SubTask {
    // 创建作业子任务
    rpc Create (CreateRequest) returns (CreateResponse) {}
    // 完成作业子任务
    rpc Complete(CompleteRequest) returns(CompleteResponse) {}
    // 创建裸金属子任务
    rpc CreateServer (CreateServerRequest) returns (CreateServerResponse) {}
}

// 创建子任务实例请求
message CreateRequest {
    int64 task_id = 1;
    // cmdb的搜索条件
    cmdb.ChooseHostRequest cmdb_search_request = 2;
    // 模板ID
    int32 template_id = 3;
}

// 创建子任务实例请求返回
message CreateResponse {
    // 子任务实例ID
    repeated int64 sub_task_id = 1;
    // 返回的请求状态
    common.ResponseStatus status = 2;
}

// 裸金属任务状态
enum ServerTaskType {
    // 未定义任务类型
    UNDEFINED = 0;
    // 裸金属状态查询任务
    CHECK = 1;
    // 裸金属电源开关任务
    POWER = 2;
    // 裸金属初始化创建uuid任务
    CREATE = 3;
    // 裸金属安装任务
    INSTALL = 4;
}

// 裸金属子任务实例请求
message CreateServerRequest {
    // 任务实例ID
    int64 task_id = 1;
    // 裸金属任务类型
    ServerTaskType task_type = 2;
    // 裸金属电源状态
    cmdb.ServerPowerState power_state = 3;
    // cmdb的搜索条件
    cmdb.ChooseServerRequest cmdb_search_request = 4;
    // 安装镜像文件的URL
    string image_file_url = 5;
    // 安装镜像文件的MD5
    string image_file_md5 = 6;
}

// 裸金属子任务实例返回
message CreateServerResponse {
    // 子任务实例ID
    int64 sub_task_id = 1;
    // 返回的请求状态
    common.ResponseStatus status = 2;
}


// 子任务执行结果
enum SubTaskResult {
    // 失败
    FAILURE = 0;
    // 成功
    SUCCESS = 1;
}

// 完成子任务实例请求
message CompleteRequest {
    // 子任务实例ID
    int64 sub_task_id = 1;
    // 执行开始时间
    string start_time = 2;
    // 执行结束时间
    string end_time = 3;
    // 子任务执行结果
    SubTaskResult result = 4;
    // 总共执行多少主机
    int32 execute_count = 5;
    // 执行失败多少台主机
    int32 fail_count = 6;
    // 执行成功多少台主机
    int32 success_count = 7;
}

// 完成子任务实例请求返回
message CompleteResponse {
    // 返回的请求状态
    common.ResponseStatus status = 1;
}
